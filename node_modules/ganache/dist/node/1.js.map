{"version":3,"file":"1.js","mappings":"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","sources":["webpack://Ganache/../../chains/ethereum/address/lib/index.js","webpack://Ganache/../../chains/ethereum/block/lib/index.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block-params.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block.js","webpack://Ganache/../../chains/ethereum/block/lib/src/runtime-block.js","webpack://Ganache/../../chains/ethereum/block/lib/src/serialize.js","webpack://Ganache/../../chains/ethereum/block/lib/src/snapshots.js","webpack://Ganache/../../chains/ethereum/console.log/lib/index.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/handlers.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/maybe-get-logs.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/signatures.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api-types.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/blockchain.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/connector.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/account-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/block-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/blocklog-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-receipt-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/database.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/cache.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/deferred.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/fork.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/base-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/http-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/provider-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/ws-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/lexicographic-key-codec.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/ancestry.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/helpers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/persistent-cache.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/tree.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/limit-counter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/rate-limiter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/state-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/hdkey.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/assert-arg-length.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/bufferify.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/filter-parsing.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/gas-estimator.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/precompiles.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/run-call.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/miner.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/replace-from-heap.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider-events.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/transaction-pool.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/trie-db.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/wallet.js","webpack://Ganache/../../chains/ethereum/options/lib/index.js","webpack://Ganache/../../chains/ethereum/options/lib/src/chain-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/database-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/fork-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/helpers.js","webpack://Ganache/../../chains/ethereum/options/lib/src/index.js","webpack://Ganache/../../chains/ethereum/options/lib/src/logging-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/miner-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/wallet-options.js","webpack://Ganache/../../chains/ethereum/transaction/lib/index.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/access-lists.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/base-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip1559-fee-market-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip2930-access-list-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/hardfork.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/legacy-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/params.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/raw.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/rpc-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/runtime-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/signing.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-factory.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-receipt.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-types.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/vm-transaction.js","webpack://Ganache/../../chains/ethereum/utils/lib/index.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/abort-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/call-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/coded-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/errors.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/runtime-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/index.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/account.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/blocklogs.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/tags.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-data.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-storage-map.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/account-proof.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/debug-storage.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/extract-values-from-types.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/fee-history.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/filters.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/hex-datatypes.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/shh.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/subscriptions.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/trace-transaction.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/tuple-from-union.js","webpack://Ganache/../../chains/filecoin/options/lib/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/chain-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/database-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/helpers.js","webpack://Ganache/../../chains/filecoin/options/lib/src/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/logging-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/miner-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/wallet-options.js","webpack://Ganache/../colors/lib/index.js","webpack://Ganache/../colors/lib/src/index.js","webpack://Ganache/../core/lib/index.js","webpack://Ganache/../core/lib/src/connector-loader.js","webpack://Ganache/../core/lib/src/options/index.js","webpack://Ganache/../core/lib/src/options/server-options.js","webpack://Ganache/../core/lib/src/server.js","webpack://Ganache/../core/lib/src/servers/http-server.js","webpack://Ganache/../core/lib/src/servers/utils/content-types.js","webpack://Ganache/../core/lib/src/servers/utils/fragment-generator.js","webpack://Ganache/../core/lib/src/servers/utils/http-response-codes.js","webpack://Ganache/../core/lib/src/servers/utils/websocket-close-codes.js","webpack://Ganache/../core/lib/src/servers/ws-server.js","webpack://Ganache//home/runner/work/ganache/ganache/src/packages/core/node_modules/@trufflesuite/uws-js-unofficial/binaries|sync|/^\\.\\/uws_.*\\.node$/","webpack://Ganache/../flavors/lib/index.js","webpack://Ganache/../flavors/lib|sync","webpack://Ganache/./webpack/polyfills/debug.ts","webpack://Ganache/../options/lib/index.js","webpack://Ganache/../options/lib/src/base.js","webpack://Ganache/../options/lib/src/constants.js","webpack://Ganache/../options/lib/src/create.js","webpack://Ganache/../options/lib/src/definition.js","webpack://Ganache/../options/lib/src/exclusive.js","webpack://Ganache/../promise-queue/lib/index.js","webpack://Ganache/../promise-queue/lib/src/entry.js","webpack://Ganache/../rlp/lib/index.js","webpack://Ganache/../secp256k1/lib/index.js","webpack://Ganache/../utils/lib/index.js","webpack://Ganache/../utils/lib/src/common.js","webpack://Ganache/../utils/lib/src/things/json-rpc/index.js","webpack://Ganache/../utils/lib/src/things/json-rpc/input-parsers.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-base-types.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-data.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-quantity.js","webpack://Ganache/../utils/lib/src/things/jsonrpc.js","webpack://Ganache/../utils/lib/src/things/promievent.js","webpack://Ganache/../utils/lib/src/things/subscription.js","webpack://Ganache/../utils/lib/src/types/api.js","webpack://Ganache/../utils/lib/src/types/connector.js","webpack://Ganache/../utils/lib/src/types/index.js","webpack://Ganache/../utils/lib/src/types/provider.js","webpack://Ganache/../utils/lib/src/utils/bigint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-bigint.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-key.js","webpack://Ganache/../utils/lib/src/utils/constants.js","webpack://Ganache/../utils/lib/src/utils/executor.js","webpack://Ganache/../utils/lib/src/utils/find-insert-position.js","webpack://Ganache/../utils/lib/src/utils/has-own.js","webpack://Ganache/../utils/lib/src/utils/heap.js","webpack://Ganache/../utils/lib/src/utils/index.js","webpack://Ganache/../utils/lib/src/utils/keccak.js","webpack://Ganache/../utils/lib/src/utils/min-max.js","webpack://Ganache/../utils/lib/src/utils/random-number-generator.js","webpack://Ganache/../utils/lib/src/utils/request-coordinator.js","webpack://Ganache/../utils/lib/src/utils/signature.js","webpack://Ganache/../utils/lib/src/utils/uint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/unref.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nclass Address extends util_1.Address {\n    constructor(value) {\n        super(value);\n    }\n    static from(value) {\n        return new Address(utils_1.Data.toBuffer(value, Address.ByteLength));\n    }\n    static toBuffer(value) {\n        return Address.from(value).toBuffer();\n    }\n    static toString(value) {\n        return Address.from(value).toString();\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nexports.Address = Address;\nAddress.ByteLength = 20;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/block\"), exports);\n__exportStar(require(\"./src/runtime-block\"), exports);\n__exportStar(require(\"./src/snapshots\"), exports);\n__exportStar(require(\"./src/serialize\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockParams = void 0;\nexports.BlockParams = {\n    /**\n     *  Base fee per gas for blocks without a parent containing a base fee per gas.\n     */\n    INITIAL_BASE_FEE_PER_GAS: 1000000000n,\n    /**\n     * Divisor used to set a block's target gas usage.\n     */\n    ELASTICITY: 2n,\n    /**\n     * Divisor used to limit the amount the base fee per gas can change from one block to another.\n     */\n    BASE_FEE_MAX_CHANGE_DENOMINATOR: 8n\n};\n//# sourceMappingURL=block-params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Block = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_block_1 = require(\"./runtime-block\");\nconst utils_2 = require(\"@ganache/utils\");\nconst block_params_1 = require(\"./block-params\");\nclass Block {\n    constructor(serialized, common) {\n        this._common = common;\n        if (serialized) {\n            const deserialized = (0, rlp_1.decode)(serialized);\n            this._raw = deserialized[0];\n            this._rawTransactions = deserialized[1] || [];\n            // TODO: support actual uncle data (needed for forking!)\n            // Issue: https://github.com/trufflesuite/ganache/issues/786\n            // const uncles = deserialized[2];\n            const totalDifficulty = deserialized[3];\n            this.header = (0, runtime_block_1.makeHeader)(this._raw, totalDifficulty);\n            this._rawTransactionMetaData = deserialized[4] || [];\n            this._size = utils_1.Quantity.toNumber(deserialized[5]);\n        }\n    }\n    hash() {\n        return (this._hash || (this._hash = utils_1.Data.from((0, utils_2.keccak)((0, rlp_1.encode)(this._raw)), 32)));\n    }\n    getTransactions() {\n        const common = this._common;\n        return this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                this.hash().toBuffer(),\n                this.header.number.toBuffer(),\n                utils_1.Quantity.toBuffer(index)\n            ];\n            return ethereum_transaction_1.TransactionFactory.fromDatabaseTx(raw, common, extra);\n        });\n    }\n    toJSON(includeFullTransactions) {\n        const hash = this.hash();\n        const txFn = this.getTxFn(includeFullTransactions);\n        const hashBuffer = hash.toBuffer();\n        const header = this.header;\n        const number = header.number.toBuffer();\n        const common = this._common;\n        const jsonTxs = this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                hashBuffer,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = ethereum_transaction_1.TransactionFactory.fromDatabaseTx(raw, common, extra);\n            // we could either parse the raw data to check if the tx is type 2,\n            // get the maxFeePerGas and maxPriorityFeePerGas, use those to calculate\n            // the effectiveGasPrice and add it to `extra` above, or we can just\n            // leave it out of extra and update the effectiveGasPrice after like this\n            tx.updateEffectiveGasPrice(header.baseFeePerGas);\n            return txFn(tx);\n        });\n        return {\n            hash,\n            ...header,\n            size: utils_1.Quantity.from(this._size),\n            transactions: jsonTxs,\n            uncles: [] // this.value.uncleHeaders.map(function(uncleHash) {return to.hex(uncleHash)})\n        };\n    }\n    getTxFn(include = false) {\n        if (include) {\n            return (tx) => tx.toJSON(this._common);\n        }\n        else {\n            return (tx) => tx.hash;\n        }\n    }\n    static fromParts(rawHeader, txs, totalDifficulty, extraTxs, size, common) {\n        const block = new Block(null, common);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = (0, runtime_block_1.makeHeader)(rawHeader, totalDifficulty);\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return block;\n    }\n    static calcNextBaseFeeBigInt(parentHeader) {\n        let nextBaseFee;\n        const header = parentHeader;\n        const parentGasTarget = header.gasLimit.toBigInt() / block_params_1.BlockParams.ELASTICITY;\n        const parentGasUsed = header.gasUsed.toBigInt();\n        const baseFeePerGas = header.baseFeePerGas\n            ? header.baseFeePerGas.toBigInt()\n            : block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n        if (parentGasTarget === parentGasUsed) {\n            // If the parent gasUsed is the same as the target, the baseFee remains unchanged.\n            nextBaseFee = baseFeePerGas;\n        }\n        else if (parentGasUsed > parentGasTarget) {\n            // If the parent block used more gas than its target, the baseFee should increase.\n            const gasUsedDelta = parentGasUsed - parentGasTarget;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            if (adjustedFeeDelta > 1n) {\n                nextBaseFee = baseFeePerGas + adjustedFeeDelta;\n            }\n            else {\n                nextBaseFee = baseFeePerGas + 1n;\n            }\n        }\n        else {\n            // Otherwise if the parent block used less gas than its target, the baseFee should decrease.\n            const gasUsedDelta = parentGasTarget - parentGasUsed;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            nextBaseFee = baseFeePerGas - adjustedFeeDelta;\n        }\n        return nextBaseFee;\n    }\n    static calcNBlocksMaxBaseFee(blocks, parentHeader) {\n        const { BASE_FEE_MAX_CHANGE_DENOMINATOR } = block_params_1.BlockParams;\n        let maxPossibleBaseFee = this.calcNextBaseFeeBigInt(parentHeader);\n        // we must calculate each future block's max base fee individually because\n        // each block's base fee must be appropriately \"floored\" (Math.floor) before\n        // the following block's base fee is calculated. If we don't do this we'll\n        // end up with compounding rounding errors.\n        // FYI: the more performant, but rounding error-prone, way is:\n        // return lastMaxBlockBaseFee + (lastMaxBlockBaseFee * ((BASE_FEE_MAX_CHANGE_DENOMINATOR-1)**(blocks-1)) / ((BASE_FEE_MAX_CHANGE_DENOMINATOR)**(blocks-1)))\n        while (--blocks) {\n            maxPossibleBaseFee +=\n                maxPossibleBaseFee / BASE_FEE_MAX_CHANGE_DENOMINATOR;\n        }\n        return maxPossibleBaseFee;\n    }\n    static calcNextBaseFee(parentBlock) {\n        const header = parentBlock.header;\n        if (header.baseFeePerGas === undefined) {\n            return undefined;\n        }\n        else {\n            return this.calcNextBaseFeeBigInt(header);\n        }\n    }\n}\nexports.Block = Block;\n/**\n *  Base fee per gas for blocks without a parent containing a base fee per gas.\n */\nBlock.INITIAL_BASE_FEE_PER_GAS = block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n//# sourceMappingURL=block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeBlock = exports.makeHeader = exports.getBlockSize = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst serialize_1 = require(\"./serialize\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst block_1 = require(\"./block\");\n/**\n * Returns the size of the serialized data as it would have been calculated had\n * we stored things geth does, i.e., `totalDifficulty` is not usually stored in\n * the block header.\n *\n * @param serialized -\n * @param totalDifficulty -\n */\nfunction getBlockSize(serialized, totalDifficulty) {\n    return serialized.length - totalDifficulty.length;\n}\nexports.getBlockSize = getBlockSize;\nfunction makeHeader(raw, totalDifficulty) {\n    return {\n        parentHash: utils_1.Data.from(raw[0], 32),\n        sha3Uncles: utils_1.Data.from(raw[1], 32),\n        miner: utils_1.Data.from(raw[2], 20),\n        stateRoot: utils_1.Data.from(raw[3], 32),\n        transactionsRoot: utils_1.Data.from(raw[4], 32),\n        receiptsRoot: utils_1.Data.from(raw[5], 32),\n        logsBloom: utils_1.Data.from(raw[6], 256),\n        difficulty: utils_1.Quantity.from(raw[7], false),\n        number: utils_1.Quantity.from(raw[8], false),\n        gasLimit: utils_1.Quantity.from(raw[9], false),\n        gasUsed: utils_1.Quantity.from(raw[10], false),\n        timestamp: utils_1.Quantity.from(raw[11], false),\n        extraData: utils_1.Data.from(raw[12]),\n        mixHash: utils_1.Data.from(raw[13], 32),\n        nonce: utils_1.Data.from(raw[14], 8),\n        totalDifficulty: utils_1.Quantity.from(totalDifficulty, false),\n        baseFeePerGas: raw[15] === undefined ? undefined : utils_1.Quantity.from(raw[15], false)\n    };\n}\nexports.makeHeader = makeHeader;\n/**\n * A minimal block that can be used by the EVM to run transactions.\n */\nclass RuntimeBlock {\n    constructor(number, parentHash, coinbase, gasLimit, gasUsed, timestamp, difficulty, previousBlockTotalDifficulty, mixHash, baseFeePerGas) {\n        this.serializeBaseFeePerGas = true;\n        const coinbaseBuffer = coinbase.toBuffer();\n        this.header = {\n            parentHash: parentHash.toBuffer(),\n            coinbase: new ethereum_address_1.Address(coinbaseBuffer),\n            number: number.toBigInt(),\n            difficulty: difficulty.toBigInt(),\n            totalDifficulty: utils_1.Quantity.toBuffer(previousBlockTotalDifficulty.toBigInt() + difficulty.toBigInt()),\n            gasLimit: gasLimit.toBigInt(),\n            gasUsed: gasUsed.toBigInt(),\n            timestamp: timestamp.toBigInt(),\n            baseFeePerGas: baseFeePerGas ?? 0n,\n            mixHash,\n            prevRandao: mixHash\n        };\n        // When forking we might get a block that doesn't have a baseFeePerGas value,\n        // but EIP-1559 might be active on our chain. We need to keep track on if\n        // we should serialize the baseFeePerGas value or not based on that info.\n        // this will be removed as part of https://github.com/trufflesuite/ganache/pull/1537\n        if (baseFeePerGas === undefined)\n            this.serializeBaseFeePerGas = false;\n    }\n    /**\n     * Returns the serialization of all block data, the hash of the block header,\n     * and a map of the hashed and raw storage keys\n     */\n    finalize(transactionsTrie, receiptTrie, bloom, stateRoot, gasUsed, extraData, transactions, storageKeys) {\n        const { header } = this;\n        const rawHeader = [\n            header.parentHash,\n            util_1.KECCAK256_RLP_ARRAY,\n            header.coinbase.buf,\n            stateRoot,\n            transactionsTrie,\n            receiptTrie,\n            bloom,\n            utils_1.Quantity.toBuffer(header.difficulty),\n            utils_1.Quantity.toBuffer(header.number),\n            utils_1.Quantity.toBuffer(header.gasLimit),\n            gasUsed === 0n ? utils_1.BUFFER_EMPTY : utils_1.Quantity.toBuffer(gasUsed),\n            utils_1.Quantity.toBuffer(header.timestamp),\n            extraData.toBuffer(),\n            header.mixHash,\n            utils_1.BUFFER_8_ZERO // nonce\n        ];\n        if (this.serializeBaseFeePerGas && header.baseFeePerGas !== undefined) {\n            rawHeader[15] = utils_1.Quantity.toBuffer(header.baseFeePerGas);\n        }\n        const { totalDifficulty } = header;\n        const txs = [];\n        const extraTxs = [];\n        transactions.forEach(tx => {\n            txs.push(tx.raw);\n            extraTxs.push([tx.from.toBuffer(), tx.hash.toBuffer()]);\n        });\n        const { serialized, size } = (0, serialize_1.serialize)([\n            rawHeader,\n            txs,\n            [],\n            totalDifficulty,\n            extraTxs\n        ]);\n        // make a new block, but pass `null` so it doesn't do the extra\n        // deserialization work since we already have everything in a deserialized\n        // state here. We'll just set it ourselves by reaching into the \"_private\"\n        // fields.\n        const block = new block_1.Block(null, \n        // TODO(hack)!\n        transactions.length > 0 ? transactions[0].common : null);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = makeHeader(rawHeader, totalDifficulty);\n        block.serializeBaseFeePerGas = rawHeader[15] === undefined;\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return {\n            block,\n            serialized,\n            storageKeys,\n            transactions\n        };\n    }\n}\nexports.RuntimeBlock = RuntimeBlock;\n//# sourceMappingURL=runtime-block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = void 0;\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nfunction serialize(raw) {\n    const serializedStart = (0, rlp_1.encodeRange)(raw, 0, 3);\n    const serializedLength = serializedStart.length;\n    const ethereumRawBlockSize = (0, rlp_1.encodeLength)(serializedLength, 192).length;\n    const size = ethereumRawBlockSize + serializedLength;\n    const middle = (0, rlp_1.encodeRange)(raw, 3, 2);\n    const ending = (0, rlp_1.encode)((0, utils_1.uintToBuffer)(size));\n    return {\n        serialized: (0, rlp_1.digest)([serializedStart.output, middle.output, [ending]], serializedLength + middle.length + ending.length),\n        size\n    };\n}\nexports.serialize = serialize;\n//# sourceMappingURL=serialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=snapshots.js.map","\"use strict\";\n/*!\n * @ganache/console.log\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nvar maybe_get_logs_1 = require(\"./src/maybe-get-logs\");\nObject.defineProperty(exports, \"maybeGetLogs\", { enumerable: true, get: function () { return maybe_get_logs_1.maybeGetLogs; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handlers = exports.bytes = exports.address = exports.bool = exports.string = exports.uint256 = exports.int256 = exports.fixedBytes = exports.WORD_SIZE = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * EVM word size for abi encoded data\n */\nexports.WORD_SIZE = 32; // bytes\n/**\n * Used to convert _from_ twos compliment\n * This is calculated via:\n * ~((1n << (8n * BigInt(WORD_SIZE))) - 1n)\n */\nconst OR_WITH_TWOS_COMPLEMENT = -0x10000000000000000000000000000000000000000000000000000000000000000n;\n/**\n * For dynamic-length types, like `bytes` and `string`, returns the starting\n * position of the value in `memory`, and the `end` position of the value.\n *\n * Calling this function when the type is not dynamic will not work. You have\n * been warned.\n *\n * @param memory\n * @param offset The offset into the given memory from which to start parsing.\n * @returns The starting position of the value in `memory`, and the `end` position of the value.\n */\nfunction getDynamicDataMarkers(memory, offset) {\n    // A Buffer's length maxes out at UInt32 max, 4294967295, (2**(8 * 4)) - 1) so\n    // it is safe to decode the `start` and `length` values as UInt32s.\n    //\n    // If we had a start position \"word\" of:\n    //   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 60\n    // we know we really only need to read the last 4 bytes, since we know that\n    // a Buffer's length can't be greater than UInt32 (which can be represented by\n    // up to 4 bytes). So we only need to look at:\n    // 00 00 00 60\n    // `offset + WORD_SIZE - UINT32_BYTE_LENGTH` effectively tells `readUInt32BE`\n    // to read only these last 4 bytes of the word that represent the `start`\n    // value.\n    // We add WORD_SIZE to this value because we are skipping over the location of\n    // the length and referencing the start of the location of the data itself.\n    const UINT32_BYTE_LENGTH = 4;\n    const nextWordOffset = offset + exports.WORD_SIZE;\n    const startUint32MemoryPosition = nextWordOffset - UINT32_BYTE_LENGTH;\n    const start = memory.readUInt32BE(startUint32MemoryPosition) + exports.WORD_SIZE;\n    // the same optimization is applied here.\n    // The word that immediately precedes the data itself is the data's `length`:\n    const end = start + memory.readUInt32BE(start - UINT32_BYTE_LENGTH);\n    return { start, end };\n}\n/**\n * Ganerates a handler function for solidity's bytes1-bytes32 types\n * @param length From 1 to 32.\n * @returns A function that accepts a memory Buffer and an offset.\n */\nfunction fixedBytes(length) {\n    return (memory, offset) => handleBytes(memory, offset, offset + length);\n}\nexports.fixedBytes = fixedBytes;\n/**\n * Returns the hex representation of the bytes in `memory`.\n *\n * @param memory\n * @param start The start of the data in the given memory.\n * @param end The end of the data in the given memory (not inclusive).\n * @returns\n */\nfunction handleBytes(memory, start, end) {\n    return `0x${memory.toString(\"hex\", start, end)}`;\n}\nconst int256 = (memory, offset) => {\n    // convert from two's compliment to signed BigInt\n    const twosComplementBuffer = memory.subarray(offset, offset + exports.WORD_SIZE);\n    const twosComplementBigInt = (0, utils_1.bufferToBigInt)(twosComplementBuffer);\n    if (twosComplementBuffer[0] & 128) {\n        // if the first bit is `1` we need to convert from two's compliment\n        return twosComplementBigInt | OR_WITH_TWOS_COMPLEMENT;\n    }\n    else {\n        // if the first bit is not `1` we can treat it as unsigned\n        return twosComplementBigInt;\n    }\n};\nexports.int256 = int256;\n/**\n * Handle decoding of solidity's `uint256` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst uint256 = (memory, offset) => (0, utils_1.bufferToBigInt)(memory.subarray(offset, offset + exports.WORD_SIZE));\nexports.uint256 = uint256;\n/**\n * Handle decoding of solidity's dynamic `string` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst string = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return memory.toString(\"utf8\", start, end);\n};\nexports.string = string;\n/**\n * Handle decoding of solidity's `bool` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bool = (memory, offset) => memory[offset + exports.WORD_SIZE - 1] !== 0;\nexports.bool = bool;\n/**\n * Handle decoding of solidity's `address` type from EVM memory.\n * @param memory\n * @param offset\n * @returns A 20 byte hex encoded string, prefixed with 0x.\n */\nconst address = (memory, offset) => `0x${memory.toString(\"hex\", offset + 12, offset + exports.WORD_SIZE)}`;\nexports.address = address;\n/**\n * Handle decoding of solidity's dynamic `bytes` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bytes = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return handleBytes(memory, start, end);\n};\nexports.bytes = bytes;\nexports.Handlers = {\n    address: exports.address,\n    bool: exports.bool,\n    bytes: exports.bytes,\n    int256: exports.int256,\n    string: exports.string,\n    uint256: exports.uint256\n};\n//# sourceMappingURL=handlers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nconst handlers_1 = require(\"./handlers\");\nconst signatures_1 = require(\"./signatures\");\nconst CONSOLE_ADDRESS = 0x636f6e736f6c652e6c6f67n;\n/**\n * Returns arguments passed to console.sol's `console.log` if the given\n * `@ethereumjs/vm` step event's `opcode`, `stack`, and `memory` fields contain\n * valid `console.log` data.\n *\n * The event's `opcode.name` field must be `\"STATICCALL\"` and the `toAddress` on\n * the `stack` must be the `console.log` address:\n * `0x000000000000000000636f6e736f6c652e6c6f67`.\n *\n * @param event - `@ethereumjs/vm` step event\n * @returns\n */\nconst maybeGetLogs = (event) => {\n    if (event.opcode.name !== \"STATICCALL\")\n        return null;\n    // STATICCALL, which is the OPCODE that is used to initiate a console.log, has\n    // 6 params, but we only care about these 3:\n    const stack = event.stack;\n    const [memoryLength, memoryOffset, toAddress] = stack.slice(-4, -1);\n    // only if the toAddress is our console address we should try parsing\n    if (toAddress !== CONSOLE_ADDRESS)\n        return null;\n    // STATICCALL allows for passing in invalid pointers and lengths so we need to\n    // guard against failures with a try/catch\n    try {\n        const memoryStart = Number(memoryOffset);\n        const memoryEnd = memoryStart + Number(memoryLength);\n        const memory = event.memory.subarray(memoryStart, memoryEnd);\n        const method = memory.readUInt32BE(0); // 4 bytes wide\n        const handlers = signatures_1.signatureMap.get(method);\n        if (!handlers)\n            return null;\n        // we skip the first 4 bytes, as that is our signature\n        const values = memory.subarray(4);\n        return handlers.map((handler, index) => {\n            const offset = index * handlers_1.WORD_SIZE;\n            return handler(values, offset);\n        });\n    }\n    catch {\n        return null;\n    }\n};\nexports.maybeGetLogs = maybeGetLogs;\n//# sourceMappingURL=maybe-get-logs.js.map","\"use strict\";\n/*\n * This file was automatically generated by `./src/chains/ethereum/console.log/scripts/generate.ts`; do not edit. */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signatureMap = void 0;\nconst handlers_1 = require(\"./handlers\");\nexports.signatureMap = new Map([\n    // log()\n    [1368866505, []],\n    // log(address)\n    [741264322, [handlers_1.address]],\n    // log(bool)\n    [843419373, [handlers_1.bool]],\n    // log(string)\n    [1093685164, [handlers_1.string]],\n    // log(uint256)\n    [4163653873, [handlers_1.uint256]],\n    // log(uint)\n    [4122065833, [handlers_1.uint256]],\n    // log(bytes)\n    [199720790, [handlers_1.bytes]],\n    // log(int256)\n    [760966329, [handlers_1.int256]],\n    // log(int)\n    [1309416733, [handlers_1.int256]],\n    // log(bytes1)\n    [1847107880, [(0, handlers_1.fixedBytes)(1)]],\n    // log(bytes2)\n    [3921027734, [(0, handlers_1.fixedBytes)(2)]],\n    // log(bytes3)\n    [763578662, [(0, handlers_1.fixedBytes)(3)]],\n    // log(bytes4)\n    [3764340945, [(0, handlers_1.fixedBytes)(4)]],\n    // log(bytes5)\n    [2793701517, [(0, handlers_1.fixedBytes)(5)]],\n    // log(bytes6)\n    [2927928721, [(0, handlers_1.fixedBytes)(6)]],\n    // log(bytes7)\n    [1322614312, [(0, handlers_1.fixedBytes)(7)]],\n    // log(bytes8)\n    [1334060334, [(0, handlers_1.fixedBytes)(8)]],\n    // log(bytes9)\n    [2428341456, [(0, handlers_1.fixedBytes)(9)]],\n    // log(bytes10)\n    [20780939, [(0, handlers_1.fixedBytes)(10)]],\n    // log(bytes11)\n    [67127854, [(0, handlers_1.fixedBytes)(11)]],\n    // log(bytes12)\n    [2258660029, [(0, handlers_1.fixedBytes)(12)]],\n    // log(bytes13)\n    [2488442420, [(0, handlers_1.fixedBytes)(13)]],\n    // log(bytes14)\n    [2456219775, [(0, handlers_1.fixedBytes)(14)]],\n    // log(bytes15)\n    [3667227872, [(0, handlers_1.fixedBytes)(15)]],\n    // log(bytes16)\n    [1717330180, [(0, handlers_1.fixedBytes)(16)]],\n    // log(bytes17)\n    [866084666, [(0, handlers_1.fixedBytes)(17)]],\n    // log(bytes18)\n    [3302112666, [(0, handlers_1.fixedBytes)(18)]],\n    // log(bytes19)\n    [1584093747, [(0, handlers_1.fixedBytes)(19)]],\n    // log(bytes20)\n    [1367925737, [(0, handlers_1.fixedBytes)(20)]],\n    // log(bytes21)\n    [3923391840, [(0, handlers_1.fixedBytes)(21)]],\n    // log(bytes22)\n    [3589990556, [(0, handlers_1.fixedBytes)(22)]],\n    // log(bytes23)\n    [2879508237, [(0, handlers_1.fixedBytes)(23)]],\n    // log(bytes24)\n    [4055063348, [(0, handlers_1.fixedBytes)(24)]],\n    // log(bytes25)\n    [193248344, [(0, handlers_1.fixedBytes)(25)]],\n    // log(bytes26)\n    [4172368369, [(0, handlers_1.fixedBytes)(26)]],\n    // log(bytes27)\n    [976705501, [(0, handlers_1.fixedBytes)(27)]],\n    // log(bytes28)\n    [3358255854, [(0, handlers_1.fixedBytes)(28)]],\n    // log(bytes29)\n    [1265222613, [(0, handlers_1.fixedBytes)(29)]],\n    // log(bytes30)\n    [3994207469, [(0, handlers_1.fixedBytes)(30)]],\n    // log(bytes31)\n    [3263516050, [(0, handlers_1.fixedBytes)(31)]],\n    // log(bytes32)\n    [666357637, [(0, handlers_1.fixedBytes)(32)]],\n    // log(address,address)\n    [3673216170, [handlers_1.address, handlers_1.address]],\n    // log(address,bool)\n    [1974863315, [handlers_1.address, handlers_1.bool]],\n    // log(address,string)\n    [1973388987, [handlers_1.address, handlers_1.string]],\n    // log(address,uint256)\n    [2198464680, [handlers_1.address, handlers_1.uint256]],\n    // log(address,uint)\n    [574869411, [handlers_1.address, handlers_1.uint256]],\n    // log(bool,address)\n    [2235320393, [handlers_1.bool, handlers_1.address]],\n    // log(bool,bool)\n    [705760899, [handlers_1.bool, handlers_1.bool]],\n    // log(bool,string)\n    [2414527781, [handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256)\n    [965833939, [handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint)\n    [910912146, [handlers_1.bool, handlers_1.uint256]],\n    // log(string,address)\n    [832238387, [handlers_1.string, handlers_1.address]],\n    // log(string,bool)\n    [3283441205, [handlers_1.string, handlers_1.bool]],\n    // log(string,string)\n    [1264337527, [handlers_1.string, handlers_1.string]],\n    // log(string,uint256)\n    [3054400204, [handlers_1.string, handlers_1.uint256]],\n    // log(string,uint)\n    [2534451664, [handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address)\n    [1764191366, [handlers_1.uint256, handlers_1.address]],\n    // log(uint,address)\n    [1491830284, [handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool)\n    [480083635, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool)\n    [510514412, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string)\n    [1681903839, [handlers_1.uint256, handlers_1.string]],\n    // log(uint,string)\n    [262402885, [handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256)\n    [4133908826, [handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint)\n    [1812949376, [handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address)\n    [25986242, [handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,bool)\n    [4070990470, [handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,string)\n    [7426238, [handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,uint256)\n    [402547077, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,uint)\n    [1815506290, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address)\n    [4044790253, [handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool)\n    [3951234194, [handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,string)\n    [555898316, [handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,uint256)\n    [2622462459, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,uint)\n    [742821141, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,address)\n    [4035396840, [handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,string,bool)\n    [3473018801, [handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string)\n    [4218888805, [handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,string,uint256)\n    [1742565361, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint)\n    [484110986, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,address)\n    [2076235848, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,address)\n    [2548867988, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,bool)\n    [1736575400, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,bool)\n    [3846889796, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,string)\n    [2717051050, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,string)\n    [3136907337, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256)\n    [3063663350, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint)\n    [2273710942, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address)\n    [3530962535, [handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,address,bool)\n    [415876934, [handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,string)\n    [3734671984, [handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,address,uint256)\n    [1601936123, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,uint)\n    [3950005167, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address)\n    [276362893, [handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool)\n    [1349555864, [handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,string)\n    [626391622, [handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,uint256)\n    [317855234, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,uint)\n    [2954061243, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,address)\n    [2509355347, [handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,string,bool)\n    [3686056519, [handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string)\n    [2960557183, [handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,string,uint256)\n    [278130193, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint)\n    [3224906412, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,address)\n    [143587794, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,address)\n    [3302110471, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,bool)\n    [3906927529, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,bool)\n    [464374251, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,string)\n    [3288086896, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,string)\n    [3359211184, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256)\n    [923808615, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint)\n    [995886048, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address)\n    [4243355104, [handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,address,bool)\n    [3374145236, [handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,address,string)\n    [3773410639, [handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,address,uint256)\n    [220641573, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,uint)\n    [130552343, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address)\n    [2469116728, [handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool)\n    [2232122070, [handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,string)\n    [3801674877, [handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,uint256)\n    [3378075862, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,uint)\n    [689682896, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,address)\n    [2515337621, [handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,bool)\n    [2967534005, [handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string)\n    [753761519, [handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,uint256)\n    [1478619041, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint)\n    [4083337817, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,address)\n    [478069832, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,address)\n    [3817119609, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,bool)\n    [3396809649, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,bool)\n    [4043501061, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,string)\n    [1500569737, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,string)\n    [2750793529, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256)\n    [3393701099, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint)\n    [2526862595, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address)\n    [3170737120, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address)\n    [2104993307, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,bool)\n    [2607726658, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,bool)\n    [2060456590, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,string)\n    [1674265081, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,address,string)\n    [3464692859, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,uint256)\n    [1520131797, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,uint)\n    [2286109610, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,address)\n    [889741179, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,address)\n    [1112473535, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool)\n    [544310864, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool)\n    [3587091680, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,string)\n    [2239189025, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,string)\n    [2332955902, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,uint256)\n    [537493524, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,uint)\n    [1515034914, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,address)\n    [2063255897, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,string,address)\n    [529592906, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,bool)\n    [1290643290, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,bool)\n    [1185403086, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string)\n    [2970968351, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string)\n    [1062716053, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,uint256)\n    [933920076, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,uint)\n    [1533929535, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,address)\n    [1553380145, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,address)\n    [3191032091, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,bool)\n    [1197922930, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,bool)\n    [1733758967, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,string)\n    [1909476082, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,string)\n    [2104037094, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256)\n    [3522001468, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint)\n    [3884059252, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address,address)\n    [1717301556, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,address,bool)\n    [238520724, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,address,string)\n    [4161329696, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,address,uint256)\n    [2485456247, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,address,uint)\n    [3982404743, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,bool,address)\n    [2669396846, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,address,bool,bool)\n    [752096074, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,address,bool,string)\n    [2858762440, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,address,bool,uint256)\n    [963766156, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,bool,uint)\n    [2513854225, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,string,address)\n    [2406706454, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,address,string,bool)\n    [1863997774, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,address,string,string)\n    [566079269, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,address,string,uint256)\n    [4011651047, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,string,uint)\n    [69767936, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,uint256,address)\n    [2376523509, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint,address)\n    [3603321462, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint256,bool)\n    [2604815586, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint,bool)\n    [3270936812, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint256,string)\n    [4256496016, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint,string)\n    [2647731885, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint256,uint256)\n    [3193255041, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,uint,uint)\n    [1425929188, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,address,address)\n    [1711502813, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(address,bool,address,bool)\n    [2801077007, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(address,bool,address,string)\n    [769095910, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(address,bool,address,uint256)\n    [2807847390, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address,uint)\n    [3698398930, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,bool,address)\n    [3476636805, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool,bool)\n    [3401856121, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,bool,string)\n    [3754205928, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,bool,uint256)\n    [2353946086, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,bool,uint)\n    [3484780374, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,string,address)\n    [436029782, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(address,bool,string,bool)\n    [1353532957, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(address,bool,string,string)\n    [1197235251, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(address,bool,string,uint256)\n    [2162598411, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,string,uint)\n    [2652011374, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,uint256,address)\n    [3438776481, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint,address)\n    [227337758, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint256,bool)\n    [3294903840, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint,bool)\n    [2244855215, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint256,string)\n    [178704301, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint,string)\n    [2606272204, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint256,uint256)\n    [946861556, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,uint,uint)\n    [3255869470, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,address,address)\n    [221706784, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(address,string,address,bool)\n    [233909110, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(address,string,address,string)\n    [4158874181, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(address,string,address,uint256)\n    [1166009295, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,address,uint)\n    [2350461865, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,bool,address)\n    [542667202, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(address,string,bool,bool)\n    [1595759775, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(address,string,bool,string)\n    [3154862590, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(address,string,bool,uint256)\n    [1365129398, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,bool,uint)\n    [3877655068, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,string,address)\n    [2689478535, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(address,string,string,bool)\n    [900007711, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string,string)\n    [1560462603, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(address,string,string,uint256)\n    [362776871, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,string,uint)\n    [2706362425, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint256,address)\n    [1662531192, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint,address)\n    [3755464715, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint256,bool)\n    [251125840, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint,bool)\n    [2116357467, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint256,string)\n    [1149776040, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint,string)\n    [1561552329, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint256,uint256)\n    [499704248, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,uint,uint)\n    [2764647008, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint256,address,address)\n    [1200430178, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint,address,address)\n    [3961816175, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint256,address,bool)\n    [2713504179, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint,address,bool)\n    [4051804649, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint256,address,string)\n    [497649386, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint,address,string)\n    [1567749022, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint256,address,uint256)\n    [269444366, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint,address,uint)\n    [2782496616, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint256,bool,address)\n    [2736520652, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint,bool,address)\n    [602229106, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint256,bool,bool)\n    [1005970743, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint,bool,bool)\n    [4272018778, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint256,bool,string)\n    [3316483577, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint,bool,string)\n    [2391690869, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint256,bool,uint256)\n    [586594713, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint,bool,uint)\n    [1770996626, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint256,string,address)\n    [1547898183, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint,string,address)\n    [3698927108, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint256,string,bool)\n    [3474460764, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint,string,bool)\n    [2751614737, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint256,string,string)\n    [2292761606, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint,string,string)\n    [2119616147, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint256,string,uint256)\n    [3204577425, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint,string,uint)\n    [4111650715, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,uint256,address)\n    [551786573, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,uint,address)\n    [519451700, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,uint256,bool)\n    [1727118439, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,uint,bool)\n    [3964381346, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,uint256,string)\n    [1244184599, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,uint,string)\n    [2301889963, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256,uint256)\n    [888202806, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint,uint)\n    [1024368100, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address,address)\n    [487903233, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(bool,address,address,bool)\n    [1180699616, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,address,string)\n    [3625099623, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(bool,address,address,uint256)\n    [208064958, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,address,uint)\n    [1384430956, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,bool,address)\n    [474063670, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(bool,address,bool,bool)\n    [1788626827, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(bool,address,bool,string)\n    [1248250676, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(bool,address,bool,uint256)\n    [126031106, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,bool,uint)\n    [1287000017, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,string,address)\n    [1870422078, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(bool,address,string,bool)\n    [3804222987, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(bool,address,string,string)\n    [2805734838, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(bool,address,string,uint256)\n    [3256837319, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,string,uint)\n    [194640930, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,uint256,address)\n    [325780957, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint,address)\n    [1760647349, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint256,bool)\n    [3590430492, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint,bool)\n    [4002252402, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint256,string)\n    [1374724088, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint,string)\n    [2691192883, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint256,uint256)\n    [2079424929, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,uint,uint)\n    [2617143996, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,address,address)\n    [4102557348, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,bool,address,bool)\n    [3231908568, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,bool,address,string)\n    [2695133539, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,bool,address,uint256)\n    [1276263767, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address,uint)\n    [1620281063, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,bool,address)\n    [2352126746, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool,bool)\n    [992632032, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,bool,string)\n    [719587540, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,bool,uint256)\n    [1836074433, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,bool,uint)\n    [3259532109, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,string,address)\n    [4188875657, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,bool,string,bool)\n    [3092715066, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,bool,string,string)\n    [1830717265, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,bool,string,uint256)\n    [3819555375, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,string,uint)\n    [395003525, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,uint256,address)\n    [1420274080, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint,address)\n    [201299213, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint256,bool)\n    [1637764366, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint,bool)\n    [2874982852, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint256,string)\n    [2111099104, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint,string)\n    [1348569399, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint256,uint256)\n    [196087467, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,uint,uint)\n    [1181212302, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,address,address)\n    [724244700, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(bool,string,address,bool)\n    [1842623690, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(bool,string,address,string)\n    [316065672, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(bool,string,address,uint256)\n    [2781534868, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,address,uint)\n    [453743963, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,bool,address)\n    [1401816747, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(bool,string,bool,bool)\n    [3697185627, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(bool,string,bool,string)\n    [1211958294, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(bool,string,bool,uint256)\n    [369533843, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,bool,uint)\n    [2372902053, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,string,address)\n    [2547225816, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(bool,string,string,bool)\n    [508266469, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string,string)\n    [392356650, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(bool,string,string,uint256)\n    [2078327787, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,string,uint)\n    [1574643090, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint256,address)\n    [362193358, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint,address)\n    [1529002296, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint256,bool)\n    [1796103507, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint,bool)\n    [549177775, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint256,string)\n    [450457062, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint,string)\n    [2007084013, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint256,uint256)\n    [679886795, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,uint,uint)\n    [2387273838, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint256,address,address)\n    [653615272, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint,address,address)\n    [2318373034, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint256,address,bool)\n    [3032683775, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint,address,bool)\n    [1705899016, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint256,address,string)\n    [464760986, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint,address,string)\n    [403247937, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint256,address,uint256)\n    [355982471, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint,address,uint)\n    [3399820138, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint256,bool,address)\n    [2597139990, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint,bool,address)\n    [1114097656, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint256,bool,bool)\n    [3468031191, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint,bool,bool)\n    [2650928961, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint256,bool,string)\n    [2437143473, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint,bool,string)\n    [3067439572, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256,bool,uint256)\n    [2140912802, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint,bool,uint)\n    [3554563475, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint256,string,address)\n    [4275904511, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint,string,address)\n    [2781285673, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint256,string,bool)\n    [3857124139, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint,string,bool)\n    [2446522387, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint256,string,string)\n    [4122747465, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint,string,string)\n    [3542771016, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint256,string,uint256)\n    [1779538402, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint,string,uint)\n    [1098907931, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,uint256,address)\n    [14518201, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,uint,address)\n    [4049711649, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,uint256,bool)\n    [3197649747, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,uint,bool)\n    [2753397214, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,uint256,string)\n    [2389310301, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,uint,string)\n    [3657852616, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256,uint256)\n    [927708338, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint,uint)\n    [853517604, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address,address)\n    [3985582326, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(string,address,address,bool)\n    [3047013728, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(string,address,address,string)\n    [2148146279, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(string,address,address,uint256)\n    [2398352281, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,address,uint)\n    [1857524797, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,bool,address)\n    [573965245, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(string,address,bool,bool)\n    [2038975531, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(string,address,bool,string)\n    [72663161, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(string,address,bool,uint256)\n    [1050642026, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,bool,uint)\n    [3318856587, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,string,address)\n    [2864486961, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(string,address,string,bool)\n    [1595265676, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(string,address,string,string)\n    [609847026, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(string,address,string,uint256)\n    [2446397742, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,string,uint)\n    [2405583849, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,uint256,address)\n    [1677429701, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint,address)\n    [2741431424, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint256,bool)\n    [4232594928, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint,bool)\n    [1522647356, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint256,string)\n    [1514632754, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint,string)\n    [1280700980, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint256,uint256)\n    [4176812830, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,uint,uint)\n    [3668153533, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,address,address)\n    [870964509, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(string,bool,address,bool)\n    [2508990662, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(string,bool,address,string)\n    [764294052, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(string,bool,address,uint256)\n    [1560853253, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address,uint)\n    [685723286, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,bool,address)\n    [1905304873, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool,bool)\n    [2304440517, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,bool,string)\n    [2636305885, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,bool,uint256)\n    [2386524329, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,bool,uint)\n    [2155164136, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,string,address)\n    [3764542249, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(string,bool,string,bool)\n    [1066037277, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(string,bool,string,string)\n    [2821114603, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(string,bool,string,uint256)\n    [620303461, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,string,uint)\n    [885731469, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,uint256,address)\n    [2472413631, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint,address)\n    [1909687565, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint256,bool)\n    [2331496330, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint,bool)\n    [1019590099, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint256,string)\n    [1949134567, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint,string)\n    [1119461927, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint256,uint256)\n    [1689631591, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,uint,uint)\n    [1572859960, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,address,address)\n    [1134328815, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,string,address,bool)\n    [1556958775, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,string,address,string)\n    [3944480640, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,string,address,uint256)\n    [2093204999, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,address,uint)\n    [1250010474, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,bool,address)\n    [3279013851, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,string,bool,bool)\n    [1081628777, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,string,bool,string)\n    [1585754346, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,string,bool,uint256)\n    [3601791698, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,bool,uint)\n    [2256636538, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,string,address)\n    [1834430276, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,string,bool)\n    [739726573, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string,string)\n    [3731419658, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,string,uint256)\n    [2393878571, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,string,uint)\n    [2681211381, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint256,address)\n    [270792626, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint,address)\n    [1565476480, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint256,bool)\n    [3282609748, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint,bool)\n    [3864418506, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint256,string)\n    [1562023706, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint,string)\n    [2366909661, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint256,uint256)\n    [4099767596, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,uint,uint)\n    [3587119056, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint256,address,address)\n    [1587722158, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint,address,address)\n    [3939013249, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint256,address,bool)\n    [2182163010, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint,address,bool)\n    [285649143, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint256,address,string)\n    [2684039059, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint,address,string)\n    [844415720, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint256,address,uint256)\n    [1325727174, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint,address,uint)\n    [1481210622, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint256,bool,address)\n    [3773389720, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint,bool,address)\n    [3847527825, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint256,bool,bool)\n    [894187222, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint,bool,bool)\n    [3816813520, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint256,bool,string)\n    [2885106328, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint,bool,string)\n    [1993105508, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint256,bool,uint256)\n    [3827003247, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint,bool,uint)\n    [1427009269, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint256,string,address)\n    [2084975268, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint,string,address)\n    [3144824297, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint256,string,bool)\n    [2099530013, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint,string,bool)\n    [3919545039, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint256,string,string)\n    [1522028063, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint,string,string)\n    [1821956834, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint256,string,uint256)\n    [3330189777, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint,string,uint)\n    [2697245221, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,uint256,address)\n    [3793609336, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,uint,address)\n    [3201771711, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,uint256,bool)\n    [1982258066, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,uint,bool)\n    [4147936829, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,uint256,string)\n    [2236298390, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,uint,string)\n    [2773406909, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256,uint256)\n    [2812835923, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint,uint)\n    [149837414, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address,address)\n    [612938772, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address,address)\n    [1430734329, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,address,bool)\n    [153090805, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,address,bool)\n    [22350596, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,address,string)\n    [52195187, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint,address,address,string)\n    [2034490470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,address,uint256)\n    [1936653238, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,address,uint)\n    [2587672470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,address,bool,address)\n    [4017276179, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint,address,bool,address)\n    [3056677012, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint256,address,bool,bool)\n    [3813741583, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint,address,bool,bool)\n    [2116501773, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,address,bool,string)\n    [2432370346, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint,address,bool,string)\n    [1676730946, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint256,address,bool,uint256)\n    [1522374954, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,address,bool,uint)\n    [2064181483, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,address,string,address)\n    [2629472255, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint,address,string,address)\n    [3420819197, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint256,address,string,bool)\n    [3425872647, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint,address,string,bool)\n    [581204390, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint256,address,string,string)\n    [1041403043, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint,address,string,string)\n    [2373420580, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint256,address,string,uint256)\n    [1182952285, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint,address,string,uint)\n    [2697204968, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address,uint256,address)\n    [364980149, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint,address,uint,address)\n    [4256361684, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,address,uint256,bool)\n    [1601452668, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,address,uint,bool)\n    [435581801, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,address,uint256,string)\n    [3719324961, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint,address,uint,string)\n    [1054063912, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,address,uint256,uint256)\n    [211605953, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,address,uint,uint)\n    [3399106228, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,bool,address,address)\n    [2716814523, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint,bool,address,address)\n    [2263728396, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint256,bool,address,bool)\n    [1162695845, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint,bool,address,bool)\n    [2449150530, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint256,bool,address,string)\n    [2917159623, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint,bool,address,string)\n    [2721084958, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint256,bool,address,uint256)\n    [125994997, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint,bool,address,uint)\n    [1102442299, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,bool,address)\n    [1768164185, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,bool,address)\n    [1392910941, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool,bool)\n    [3069540257, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool,bool)\n    [1315722005, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,bool,string)\n    [3722155361, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,bool,string)\n    [831186331, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,bool,uint256)\n    [1952763427, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,bool,uint)\n    [3173363033, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,bool,string,address)\n    [4015165464, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint,bool,string,address)\n    [1231956916, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint256,bool,string,bool)\n    [3952250239, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint,bool,string,bool)\n    [879671495, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint256,bool,string,string)\n    [1757984957, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint,bool,string,string)\n    [2754870525, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint256,bool,string,uint256)\n    [740099910, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint,bool,string,uint)\n    [2438978344, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,bool,uint256,address)\n    [2295029825, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint,bool,uint,address)\n    [1329595790, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool,uint256,bool)\n    [2443193898, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool,uint,bool)\n    [3534472445, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,bool,uint256,string)\n    [3724797812, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint,bool,uint,string)\n    [3906845782, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,bool,uint256,uint256)\n    [3333212072, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,bool,uint,uint)\n    [1451396516, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,string,address,address)\n    [1634266465, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint,string,address,address)\n    [2141537675, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint256,string,address,bool)\n    [2428701270, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint,string,address,bool)\n    [4181720887, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint256,string,address,string)\n    [2621104033, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint,string,address,string)\n    [4170733439, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint256,string,address,uint256)\n    [3906142605, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint,string,address,uint)\n    [2565338099, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,string,bool,address)\n    [2922300801, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint,string,bool,address)\n    [2037328032, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint256,string,bool,bool)\n    [3126025628, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint,string,bool,bool)\n    [1371286465, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,string,bool,string)\n    [3537118157, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint,string,bool,string)\n    [2370346144, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint256,string,bool,uint256)\n    [3472922752, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,string,bool,uint)\n    [2763295359, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,string,address)\n    [3582182914, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint,string,string,address)\n    [3432549024, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,string,bool)\n    [3014047421, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,string,bool)\n    [310782872, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string,string)\n    [564987523, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string,string)\n    [1474103825, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,string,uint256)\n    [2955463101, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,string,uint)\n    [1995203422, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,string,uint256,address)\n    [992115124, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint,string,uint,address)\n    [2877020669, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,string,uint256,bool)\n    [1763348340, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,string,uint,bool)\n    [2270850606, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string,uint256,string)\n    [3082360010, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint,string,uint,string)\n    [2730232985, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,string,uint256,uint256)\n    [2193775476, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,string,uint,uint)\n    [3221501959, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,uint256,address,address)\n    [1453707697, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,uint,address,address)\n    [3398671136, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,uint256,address,bool)\n    [365610102, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,uint,address,bool)\n    [2833785006, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,uint256,address,string)\n    [1826504888, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,uint,address,string)\n    [3600994782, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,uint256,address,uint256)\n    [2297881778, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,uint,address,uint)\n    [1628154048, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,uint256,bool,address)\n    [2592172675, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,uint,bool,address)\n    [3776410703, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,uint256,bool,bool)\n    [2869451494, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,uint,bool,bool)\n    [2495495089, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,uint256,bool,string)\n    [2780101785, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,uint,bool,string)\n    [4024028142, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,uint256,bool,uint256)\n    [3950997458, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,uint,bool,uint)\n    [1818524812, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,uint256,string,address)\n    [1121066423, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,uint,string,address)\n    [1127384482, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,uint256,string,bool)\n    [2062986021, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,uint,string,bool)\n    [2989403910, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,uint256,string,string)\n    [668512210, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,uint,string,string)\n    [2080582194, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,uint256,string,uint256)\n    [1570936811, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,uint,string,uint)\n    [949229117, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,uint256,address)\n    [4202792367, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,uint,address)\n    [3766828905, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,uint256,bool)\n    [3315126661, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,uint,bool)\n    [1683143115, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,uint256,string)\n    [1506790371, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,uint,string)\n    [2024634892, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256,uint256)\n    [423606272, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint,uint)\n    [1554033982, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]]\n]);\n//# sourceMappingURL=signatures.js.map","\"use strict\";\n/*!\n * @ganache/ethereum\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/connector\"), exports);\n__exportStar(require(\"./src/api-types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=api-types.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumApi_getId, _EthereumApi_filters, _EthereumApi_subscriptions, _EthereumApi_options, _EthereumApi_blockchain, _EthereumApi_wallet;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#region Imports\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst eth_sig_util_1 = require(\"eth-sig-util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst gas_estimator_1 = __importDefault(require(\"./helpers/gas-estimator\"));\nconst assert_arg_length_1 = require(\"./helpers/assert-arg-length\");\nconst filter_parsing_1 = require(\"./helpers/filter-parsing\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst miner_1 = require(\"./miner/miner\");\nasync function autofillDefaultTransactionValues(tx, eth_estimateGas, eth_maxPriorityFeePerGas, transaction, blockchain, options) {\n    if (tx.gas.isNull()) {\n        const defaultLimit = options.miner.defaultTransactionGasLimit;\n        if (defaultLimit === utils_1.Quantity.Empty) {\n            // if the default limit is `Quantity.Empty` use a gas estimate\n            tx.gas = await eth_estimateGas(transaction, ethereum_utils_1.Tag.latest);\n        }\n        else {\n            tx.gas = defaultLimit;\n        }\n    }\n    if (\"gasPrice\" in tx && tx.gasPrice.isNull()) {\n        tx.gasPrice = options.miner.defaultGasPrice;\n    }\n    if (\"maxFeePerGas\" in tx && tx.maxFeePerGas.isNull()) {\n        const block = blockchain.blocks.latest;\n        tx.maxFeePerGas = utils_1.Quantity.from(ethereum_block_1.Block.calcNBlocksMaxBaseFee(3, block.header));\n    }\n    if (\"maxPriorityFeePerGas\" in tx && tx.maxPriorityFeePerGas.isNull()) {\n        tx.maxPriorityFeePerGas = await eth_maxPriorityFeePerGas();\n    }\n}\nconst version = process.env.VERSION || \"DEV\";\n//#endregion\n//#region Constants\nconst CLIENT_VERSION = `Ganache/v${version}/EthereumJS TestRPC/v${version}/ethereum-js`;\nconst PROTOCOL_VERSION = utils_1.Data.from(\"0x3f\");\nconst RPC_MODULES = {\n    eth: \"1.0\",\n    net: \"1.0\",\n    rpc: \"1.0\",\n    web3: \"1.0\",\n    evm: \"1.0\",\n    personal: \"1.0\"\n};\n//#endregion\n//#region helpers\n/**\n * Combines RuntimeErrors for a list of rejected or reverted transactions.\n * @param transactions Array of transactions with errors to assert.\n */\nfunction assertExceptionalTransactions(transactions) {\n    let baseError = null;\n    let errors;\n    const data = {};\n    transactions.forEach(transaction => {\n        if (transaction.execException) {\n            if (baseError) {\n                baseError = ethereum_utils_1.VM_EXCEPTIONS;\n                errors.push(`${transaction.hash.toString()}: ${transaction.execException}\\n`);\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n            else {\n                baseError = ethereum_utils_1.VM_EXCEPTION;\n                errors = [transaction.execException.message];\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n        }\n    });\n    if (baseError) {\n        const err = new Error(baseError + errors.join(\"\\n\"));\n        err.data = data;\n        throw err;\n    }\n}\n//#endregion helpers\nclass EthereumApi {\n    /**\n     * This is the Ethereum API that the provider interacts with.\n     * The only methods permitted on the prototype are the supported json-rpc\n     * methods.\n     * @param options -\n     * @param wallet -\n     * @param emitter -\n     */\n    constructor(options, wallet, blockchain) {\n        _EthereumApi_getId.set(this, (id => () => utils_1.Quantity.from(++id))(0));\n        _EthereumApi_filters.set(this, new Map());\n        _EthereumApi_subscriptions.set(this, new Map());\n        _EthereumApi_options.set(this, void 0);\n        _EthereumApi_blockchain.set(this, void 0);\n        _EthereumApi_wallet.set(this, void 0);\n        __classPrivateFieldSet(this, _EthereumApi_options, options, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_wallet, wallet, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_blockchain, blockchain, \"f\");\n    }\n    //#region db\n    /**\n     * Stores a string in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param value - String to store.\n     * @returns returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putString\", [\"testDb\", \"testKey\", \"testValue\"] ));\n     * ```\n     */\n    async db_putString(dbName, key, value) {\n        return false;\n    }\n    /**\n     * Returns string from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored string.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getString\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getString(dbName, key) {\n        return \"\";\n    }\n    /**\n     * Stores binary data in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param data - Data to store.\n     * @returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putHex\", [\"testDb\", \"testKey\", \"0x0\"] ));\n     * ```\n     */\n    async db_putHex(dbName, key, data) {\n        return false;\n    }\n    /**\n     * Returns binary data from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored data.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getHex\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getHex(dbName, key) {\n        return \"0x00\";\n    }\n    //#endregion\n    //#region bzz\n    /**\n     * Returns the kademlia table in a readable table format.\n     * @returns Returns the kademlia table in a readable table format.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_hive\"));\n     * ```\n     */\n    async bzz_hive() {\n        return [];\n    }\n    /**\n     * Returns details about the swarm node.\n     * @returns Returns details about the swarm node.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_info\"));\n     * ```\n     */\n    async bzz_info() {\n        return [];\n    }\n    async evm_mine(arg) {\n        // `MINE_ONLY_ONE_BLOCK` refers to the number of blocks mined per call to `blockchain.mine()`\n        const MINE_ONLY_ONE_BLOCK = true;\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const vmErrorsOnRPCResponse = options.chain.vmErrorsOnRPCResponse;\n        // Since `typeof null === \"object\"` we have to guard against that\n        if (arg !== null && typeof arg === \"object\") {\n            let { blocks, timestamp } = arg;\n            if (blocks == null) {\n                blocks = 1;\n            }\n            // TODO(perf): add an option to mine a bunch of blocks in a batch so\n            // we can save them all to the database in one go.\n            // Developers like to move the blockchain forward by thousands of blocks\n            // at a time and doing this would make it way faster\n            for (let i = 0; i < blocks; i++) {\n                const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n                if (vmErrorsOnRPCResponse) {\n                    assertExceptionalTransactions(transactions);\n                }\n            }\n        }\n        else {\n            const timestamp = arg;\n            const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n            if (vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(transactions);\n            }\n        }\n        return \"0x0\";\n    }\n    /**\n     * Sets the given account's nonce to the specified value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param nonce - The nonce value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountNonce\", [address, nonce] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountNonce(address, nonce) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.nonce = utils_1.Quantity.toBigInt(nonce);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's balance to the specified WEI value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param balance - The balance value, in WEI, to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const balance = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountBalance\", [address, balance] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountBalance(address, balance) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.balance = utils_1.Quantity.toBigInt(balance);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's code to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param code - The code to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountCode\", [address, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountCode(address, code) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const codeBuffer = utils_1.Data.toBuffer(code);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        // The ethereumjs-vm StateManager does not allow to set empty code,\n        // therefore we will manually set the code hash when \"clearing\" the contract code\n        await eei.checkpoint();\n        if (codeBuffer.length > 0) {\n            await eei.putContractCode(vmAddress, codeBuffer);\n        }\n        else {\n            const account = await eei.getAccount(vmAddress);\n            account.codeHash = util_1.KECCAK256_NULL;\n            await eei.putAccount(vmAddress, account);\n        }\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's storage slot to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param slot - The storage slot that should be set.\n     * @param value - The value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\";\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountStorageAt\", [address, slot, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountStorageAt(address, slot, value) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffer = utils_1.Data.toBuffer(slot);\n        const valueBuffer = utils_1.Data.toBuffer(value);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        await eei.checkpoint();\n        await eei.putContractStorage(vmAddress, slotBuffer, valueBuffer);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Jump forward in time by the given amount of time, in seconds.\n     * @param seconds - Number of seconds to jump forward in time by. Must be greater than or equal to `0`.\n     * @returns Returns the total time adjustment, in seconds.\n     * @example\n     * ```javascript\n     * const seconds = 10;\n     * const timeAdjustment = await provider.send(\"evm_increaseTime\", [seconds] );\n     * console.log(timeAdjustment);\n     * ```\n     */\n    async evm_increaseTime(seconds) {\n        const milliseconds = (typeof seconds === \"number\" ? seconds : utils_1.Quantity.toNumber(seconds)) *\n            1000;\n        return Math.floor(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").increaseTime(milliseconds) / 1000);\n    }\n    /**\n     * Sets the internal clock time to the given timestamp.\n     *\n     * Warning: This will allow you to move *backwards* in time, which may cause\n     * new blocks to appear to be mined before old blocks. This will result in\n     * an invalid state.\n     *\n     * @param time - JavaScript timestamp (millisecond precision).\n     * @returns The amount of *seconds* between the given timestamp and now.\n     * @example\n     * ```javascript\n     * const currentDate = Date.now();\n     * setTimeout(async () => {\n     *   const time = await provider.send(\"evm_setTime\", [currentDate] );\n     *   console.log(time); // should be about two seconds ago\n     * }, 1000);\n     * ```\n     */\n    async evm_setTime(time) {\n        let timestamp;\n        switch (typeof time) {\n            case \"object\":\n                timestamp = time.getTime();\n                break;\n            case \"number\":\n                timestamp = time;\n                break;\n            default:\n                timestamp = utils_1.Quantity.toNumber(time);\n                break;\n        }\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const offsetMilliseconds = blockchain.setTimeDiff(timestamp);\n        // convert offsetMilliseconds to seconds:\n        return Math.floor(offsetMilliseconds / 1000);\n    }\n    /**\n     * Revert the state of the blockchain to a previous snapshot. Takes a single\n     * parameter, which is the snapshot id to revert to. This deletes the given\n     * snapshot, as well as any snapshots taken after (e.g.: reverting to id 0x1\n     * will delete snapshots with ids 0x1, 0x2, etc.)\n     *\n     * @param snapshotId - The snapshot id to revert.\n     * @returns `true` if a snapshot was reverted, otherwise `false`.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     * console.log({isReverted: isReverted});\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_revert(snapshotId) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").revert(utils_1.Quantity.from(snapshotId));\n    }\n    /**\n     * Snapshot the state of the blockchain at the current block. Takes no\n     * parameters. Returns the id of the snapshot that was created. A snapshot can\n     * only be reverted once. After a successful `evm_revert`, the same snapshot\n     * id cannot be used again. Consider creating a new snapshot after each\n     * `evm_revert` if you need to revert to the same point multiple times.\n     *\n     * @returns The hex-encoded identifier for this snapshot.\n     *\n     * @example\n     * ```javascript\n     * const provider = ganache.provider();\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_snapshot() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").snapshot());\n    }\n    /**\n     * Adds any arbitrary account to the `personal` namespace.\n     *\n     * Note: accounts already known to the `personal` namespace and accounts\n     * returned by `eth_accounts` cannot be re-added using this method.\n     * @param address - The address of the account to add to the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to encrypt the account's private key.\n     * NOTE: this passphrase will be needed for all `personal` namespace calls\n     * that require a password.\n     * @returns `true` if  the account was successfully added. `false` if the\n     * account is already in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_addAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_addAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addUnknownAccount(addy, passphrase);\n    }\n    /**\n     * Removes an account from the `personal` namespace.\n     *\n     * Note: accounts not known to the `personal` namespace cannot be removed\n     * using this method.\n     * @param address - The address of the account to remove from the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to decrypt the account's private key.\n     * @returns `true` if the account was successfully removed. `false` if the\n     * account was not in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_removeAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_removeAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").removeKnownAccount(addy, passphrase);\n    }\n    //#endregion evm\n    //#region miner\n    /**\n     * Resume the CPU mining process with the given number of threads.\n     *\n     * Note: `threads` is ignored.\n     * @param threads - Number of threads to resume the CPU mining process with.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_start\");\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_start(threads = 1) {\n        if (__classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.instamine === \"eager\") {\n            const resumption = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n            // resumption can be undefined if the blockchain isn't currently paused\n            if (resumption &&\n                resumption.transactions != null &&\n                __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(resumption.transactions);\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n        }\n        return true;\n    }\n    /**\n     * Stop the CPU mining operation.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_stop() {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").pause();\n        return true;\n    }\n    /**\n     * Sets the default accepted gas price when mining transactions.\n     * Any transactions that don't specify a gas price will use this amount.\n     * Transactions that are below this limit are excluded from the mining process.\n     * @param number - Default accepted gas price.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setGasPrice\", [300000] ));\n     * ```\n     */\n    async miner_setGasPrice(number) {\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice = utils_1.Quantity.from(number);\n        return true;\n    }\n    /**\n     * Sets the etherbase, where mining rewards will go.\n     * @param address - The address where the mining rewards will go.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(await provider.send(\"miner_setEtherbase\", [account] ));\n     * ```\n     */\n    async miner_setEtherbase(address) {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase = ethereum_address_1.Address.from(address);\n        return true;\n    }\n    /**\n     * Set the extraData block header field a miner can include.\n     * @param extra - The `extraData` to include.\n     * @returns If successfully set returns `true`, otherwise returns an error.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setExtra\", [\"0x0\"] ));\n     * ```\n     */\n    async miner_setExtra(extra) {\n        const bytes = utils_1.Data.from(extra);\n        const length = bytes.toBuffer().length;\n        if (length > 32) {\n            throw new Error(`extra exceeds max length. ${length} > 32`);\n        }\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.extraData = bytes;\n        return true;\n    }\n    //#endregion\n    //#region web3\n    /**\n     * Returns the current client version.\n     * @returns The current client version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"web3_clientVersion\"));\n     * ```\n     */\n    async web3_clientVersion() {\n        return CLIENT_VERSION;\n    }\n    /**\n     * Returns Keccak-256 (not the standardized SHA3-256) of the given data.\n     * @param data - the data to convert into a SHA3 hash.\n     * @returns The SHA3 result of the given string.\n     * @example\n     * ```javascript\n     * const data = \"hello trufflers\";\n     * const sha3 = await provider.send(\"web3_sha3\", [data] );\n     * console.log(sha3);\n     * ```\n     */\n    async web3_sha3(data) {\n        return utils_1.Data.from((0, utils_1.keccak)(utils_1.Data.toBuffer(data)));\n    }\n    //#endregion\n    //#region net\n    /**\n     * Returns the current network id.\n     * @returns The current network id. This value should NOT be JSON-RPC\n     * Quantity/Data encoded.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_version\"));\n     * ```\n     */\n    async net_version() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.networkId.toString();\n    }\n    /**\n     * Returns `true` if client is actively listening for network connections.\n     * @returns `true` when listening, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_listening\"));\n     * ```\n     */\n    async net_listening() {\n        return true;\n    }\n    /**\n     * Returns number of peers currently connected to the client.\n     * @returns Number of connected peers.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_peerCount\"));\n     * ```\n     */\n    async net_peerCount() {\n        return utils_1.Quantity.Zero;\n    }\n    //#endregion\n    //#region eth\n    /**\n     * Generates and returns an estimate of how much gas is necessary to allow the\n     * transaction to complete. The transaction will not be added to the\n     * blockchain. Note that the estimate may be significantly more than the\n     * amount of gas actually used by the transaction, for a variety of reasons\n     * including EVM mechanics and node performance.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns The amount of gas used.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from, to }, \"latest\" ] });\n     * console.log(gasEstimate);\n     * ```\n     */\n    async eth_estimateGas(transaction, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const generateVM = async () => {\n            // note(hack): blockchain.vm.copy() doesn't work so we just do it this way\n            // /shrug\n            const vm = await blockchain.createVmFromStateTrie(blockchain.trie.copy(false), options.chain.allowUnlimitedContractSize, false);\n            return vm;\n        };\n        return new Promise((resolve, reject) => {\n            const { coinbase } = blockchain;\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n            if (tx.from == null) {\n                tx.from = coinbase;\n            }\n            if (tx.gas.isNull()) {\n                // eth_estimateGas isn't subject to regular transaction gas limits\n                tx.gas = options.miner.callGasLimit;\n            }\n            const block = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from((parentHeader.number.toBigInt() || 0n) + 1n), parentHeader.parentHash, new ethereum_address_1.Address(parentHeader.miner.toBuffer()), tx.gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), 0n // no baseFeePerGas for estimates\n            );\n            const runArgs = {\n                tx: tx.toVmTransaction(),\n                block,\n                skipBalance: true,\n                skipNonce: true\n            };\n            (0, gas_estimator_1.default)(generateVM, runArgs, (err, result) => {\n                if (err)\n                    reject(err);\n                resolve(utils_1.Quantity.from(result.gasEstimate));\n            });\n        });\n    }\n    /**\n     * Returns the current ethereum protocol version.\n     * @returns The current ethereum protocol version.\n     * @example\n     * ```javascript\n     * const version = await provider.request({ method: \"eth_protocolVersion\", params: [] });\n     * console.log(version);\n     * ```\n     */\n    async eth_protocolVersion() {\n        return PROTOCOL_VERSION;\n    }\n    /**\n     * Returns an object containing data about the sync status or `false` when not syncing.\n     *\n     * @returns An object with sync status data or `false`, when not syncing.\n     *\n     * * `startingBlock`: \\{bigint\\} The block at which the import started (will\n     *     only be reset, after the sync reached his head).\n     * * `currentBlock`: \\{bigint\\} The current block, same as `eth_blockNumber`.\n     * * `highestBlock`: \\{bigint\\} The estimated highest block.\n     *\n     * @example\n     * ```javascript\n     * const result = await provider.request({ method: \"eth_syncing\", params: [] });\n     * console.log(result);\n     * ```\n     */\n    async eth_syncing() {\n        return false;\n    }\n    /**\n     * Returns the client coinbase address.\n     * @returns The current coinbase address.\n     * @example\n     * ```javascript\n     * const coinbaseAddress = await provider.request({ method: \"eth_coinbase\" });\n     * console.log(coinbaseAddress);\n     * ```\n     */\n    async eth_coinbase() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase;\n    }\n    /**\n     * Returns information about a block by block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.request({ method: \"eth_getBlockByNumber\", params: [\"0x0\", false] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByNumber(number, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .get(number)\n            .catch(_ => null);\n        // @ts-ignore\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the details for the account at the specified address and block\n     * number, the account's Merkle proof, and the storage values for the\n     * specified storage keys with their Merkle-proofs.\n     *\n     * @param address - Address of the account\n     * @param storageKeys - Array of storage keys to be proofed.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\", or\n     * \"pending\".\n     * @returns An object containing the details for the account at the specified\n     * address and block number, the account's Merkle proof, and the\n     * storage-values for the specified storage keys with their Merkle-proofs:\n     * * `balance`: `QUANTITY` - the balance of the account.\n     * * `codeHash`: `DATA` - 32 Bytes - hash of the account. A simple account\n     *   without code will return\n     *   `\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\"`\n     * * `nonce`: `QUANTITY` - the nonce of the account.\n     * * `storageHash`: `DATA` - 32 Bytes - SHA3 of the StorageRoot. All storage\n     *   will deliver a MerkleProof starting with this rootHash.\n     * * `accountProof`: `Array` - Array of rlp-serialized MerkleTree-Nodes,\n     *   starting with the stateRoot-NODE, following the path of the SHA3\n     *   (address) as key.\n     * * `storageProof`: `Array` - Array of storage entries as requested. Each\n     *   entry is an object with the following properties:\n     *   * `key`: `DATA` - the requested storage key.\n     *   * `value`: `QUANTITY` - the storage value.\n     *   * `proof`: `Array` - Array of rlp-serialized MerkleTree-Nodes, starting\n     *     with the storageHash-Node, following the path of the SHA3 (key) as\n     *     path.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const proof = await provider.request({ method: \"eth_getProof\", params: [txReceipt.contractAddress, [\"0x0\", \"0x1\"], \"latest\"] });\n     * console.log(proof);\n     * ```\n     */\n    async eth_getProof(address, storageKeys, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (blockchain.fallback) {\n            throw new Error(\"eth_getProof is not supported on a forked network. See https://github.com/trufflesuite/ganache/issues/3234 for details.\");\n        }\n        const targetBlock = await blockchain.blocks.get(blockNumber);\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffers = storageKeys.map(slotHex => utils_1.Data.toBuffer(slotHex, 32));\n        const stateManagerCopy = blockchain.vm.stateManager.copy();\n        await stateManagerCopy.setStateRoot(targetBlock.header.stateRoot.toBuffer());\n        const proof = await stateManagerCopy.getProof(vmAddress, slotBuffers);\n        return {\n            address: vmAddress,\n            balance: utils_1.Quantity.from(proof.balance),\n            codeHash: utils_1.Data.from(proof.codeHash),\n            nonce: utils_1.Quantity.from(proof.nonce),\n            storageHash: utils_1.Data.from(proof.storageHash),\n            accountProof: proof.accountProof.map(p => utils_1.Data.from(p)),\n            storageProof: proof.storageProof.map(storageProof => ({\n                key: utils_1.Data.from(storageProof.key),\n                proof: storageProof.proof.map(p => utils_1.Data.from(p)),\n                value: utils_1.Quantity.from(storageProof.value)\n            }))\n        };\n    }\n    /**\n     * Returns information about a block by block hash.\n     * @param hash - Hash of a block.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const block = await provider.request({ method: \"eth_getBlockByHash\", params: [txReceipt.blockHash, true] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByHash(hash, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @returns Integer of the number of transactions in the block.\n     * @example\n     * ```javascript\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByNumber\", params: [\"0x0\"] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByNumber(blockNumber) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blocks.getEffectiveNumber(blockNumber);\n        const rawBlock = await blocks.getRawByBlockNumber(blockNum);\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns Number of transactions in the block.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByHash\", params: [txReceipt.blockHash] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByHash(hash) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = await blocks.getNumberFromHash(hash);\n        if (!blockNum)\n            return null;\n        const rawBlock = await blocks.getRawByBlockNumber(utils_1.Quantity.from(blockNum));\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns a list of available compilers.\n     * @returns List of available compilers.\n     * @example\n     * ```javascript\n     * const compilers = await provider.send(\"eth_getCompilers\");\n     * console.log(compilers);\n     * ```\n     */\n    async eth_getCompilers() {\n        return [];\n    }\n    /**\n     * Returns information about a transaction by block hash and transaction index position.\n     * @param hash - Hash of a block.\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockHashAndIndex\", params: [ blockHash, transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockHashAndIndex(hash, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns information about a transaction by block number and transaction index position.\n     * @param number - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const { transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockNumberAndIndex\", params: [ \"latest\", transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockNumberAndIndex(number, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks.get(number).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockHash\", [blockHash] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockHash(hash) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockNumber\", [\"latest\"] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockNumber(blockNumber) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param hash - Hash of a block.\n     * @param index - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const block = await provider.send(\"eth_getUncleByBlockHashAndIndex\", [blockHash, \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockHashAndIndex(hash, index) {\n        return null;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param uncleIndex - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.send(\"eth_getUncleByBlockNumberAndIndex\", [\"latest\", \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockNumberAndIndex(blockNumber, uncleIndex) {\n        return null;\n    }\n    /**\n     * Returns: An Array with the following elements\n     * 1: `DATA`, 32 Bytes - current block header pow-hash\n     * 2: `DATA`, 32 Bytes - the seed hash used for the DAG.\n     * 3: `DATA`, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\n     *\n     * @returns The hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"eth_getWork\", [] ));\n     * ```\n     */\n    async eth_getWork() {\n        return [];\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce - The nonce found (64 bits).\n     * @param powHash - The header's pow-hash (256 bits).\n     * @param digest - The mix digest (256 bits).\n     * @returns `true` if the provided solution is valid, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0xe0df4bd14ab39a71\";\n     * const powHash = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const digest = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitWork\", params: [nonce, powHash, digest] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitWork(nonce, powHash, digest) {\n        return false;\n    }\n    /**\n     * Used for submitting mining hashrate.\n     *\n     * @param hashRate - A hexadecimal string representation (32 bytes) of the hash rate.\n     * @param clientID - A random hexadecimal(32 bytes) ID identifying the client.\n     * @returns `true` if submitting went through successfully and `false` otherwise.\n     * @example\n     * ```javascript\n     * const hashRate = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const clientId = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitHashrate\", params: [hashRate, clientId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitHashrate(hashRate, clientID) {\n        return false;\n    }\n    /**\n     * Returns `true` if client is actively mining new blocks.\n     * @returns returns `true` if the client is mining, otherwise `false`.\n     * @example\n     * ```javascript\n     * const isMining = await provider.request({ method: \"eth_mining\", params: [] });\n     * console.log(isMining);\n     * ```\n     */\n    async eth_mining() {\n        // we return the blockchain's started state\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted();\n    }\n    /**\n     * Returns the number of hashes per second that the node is mining with.\n     * @returns Number of hashes per second.\n     * @example\n     * ```javascript\n     * const hashrate = await provider.request({ method: \"eth_hashrate\", params: [] });\n     * console.log(hashrate);\n     * ```\n     */\n    async eth_hashrate() {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the current price per gas in wei.\n     * @returns Integer of the current gas price in wei.\n     * @example\n     * ```javascript\n     * const gasPrice = await provider.request({ method: \"eth_gasPrice\", params: [] });\n     * console.log(gasPrice);\n     * ```\n     */\n    async eth_gasPrice() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice;\n    }\n    /**\n     * Returns a `maxPriorityFeePerGas` value suitable for quick transaction inclusion.\n     * @returns The maxPriorityFeePerGas in wei.\n     * @example\n     * ```javascript\n     * const suggestedTip = await provider.request({ method: \"eth_maxPriorityFeePerGas\", params: [] });\n     * console.log(suggestedTip);\n     * ```\n     */\n    async eth_maxPriorityFeePerGas() {\n        return utils_1.Quantity.Gwei;\n    }\n    /**\n     * Returns a list of addresses owned by client.\n     * @returns Array of 20 Bytes - addresses owned by the client.\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(accounts);\n     * ```\n     */\n    async eth_accounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Returns the number of the most recent block.\n     * @returns The current block number the client is on.\n     * @example\n     * ```javascript\n     * const blockNumber = await provider.request({ method: \"eth_blockNumber\" });\n     * console.log(blockNumber);\n     * ```\n     */\n    async eth_blockNumber() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks.latest.header.number;\n    }\n    /**\n     * Returns the currently configured chain id, a value used in\n     * replay-protected transaction signing as introduced by EIP-155.\n     * @returns The chain id as a string.\n     * @EIP [155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)\n     *\n     * @example\n     * ```javascript\n     * const chainId = await provider.send(\"eth_chainId\");\n     * console.log(chainId);\n     * ```\n     */\n    async eth_chainId() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.chainId);\n    }\n    /**\n     * Returns the balance of the account of given address.\n     * @param address - Address to check for balance.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns Integer of the account balance in wei.\n     *\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const balance = await provider.request({ method: \"eth_getBalance\", params: [accounts[0], \"latest\"] });\n     * console.log(balance);\n     * ```\n     */\n    async eth_getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getBalance(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns code at a given address.\n     *\n     * @param address - Address.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\" or \"pending\".\n     * @returns The code from the given address.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const code = await provider.request({ method: \"eth_getCode\", params: [txReceipt.contractAddress, \"latest\"] });\n     * console.log(code);\n     * ```\n     */\n    async eth_getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { accounts } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        return accounts.getCode(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns the value from a storage position at a given address.\n     * @param address - Address of the storage.\n     * @param position - Integer of the position in the storage.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @returns The value in storage at the requested position.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storageValue = await provider.request({ method: \"eth_getStorageAt\", params: [txReceipt.contractAddress, \"0x0\", \"latest\"] });\n     * console.log(storageValue);\n     * ```\n     */\n    async eth_getStorageAt(address, position, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blockchain.blocks.getEffectiveNumber(blockNumber);\n        const block = await blockchain.blocks.getRawByBlockNumber(blockNum);\n        if (!block)\n            throw new Error(\"header not found\");\n        const [[, , , blockStateRoot]] = (0, rlp_1.decode)(block);\n        const trie = blockchain.trie.copy(false);\n        trie.setContext(blockStateRoot, null, blockNum);\n        const posBuff = utils_1.Quantity.toBuffer(position);\n        const length = posBuff.length;\n        let paddedPosBuff;\n        if (length < 32) {\n            // storage locations are 32 bytes wide, so we need to expand any value\n            // given to 32 bytes.\n            paddedPosBuff = Buffer.allocUnsafe(32).fill(0);\n            posBuff.copy(paddedPosBuff, 32 - length);\n        }\n        else if (length === 32) {\n            paddedPosBuff = posBuff;\n        }\n        else {\n            // if the position value we're passed is > 32 bytes, truncate it. This is\n            // what geth does.\n            paddedPosBuff = posBuff.slice(-32);\n        }\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        const addressData = await trie.get(addressBuf);\n        // An address's stateRoot is stored in the 3rd rlp entry\n        const addressStateRoot = (0, rlp_1.decode)(addressData)[2];\n        trie.setContext(addressStateRoot, addressBuf, blockNum);\n        const value = await trie.get(paddedPosBuff);\n        return utils_1.Data.from((0, rlp_1.decode)(value), 32);\n    }\n    /**\n     * Returns the information about a transaction requested by transaction hash.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByHash\", params: [ txHash ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByHash(transactionHash) {\n        const { transactions } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const hashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // we must check the database before checking the pending cache, because the\n        // cache is updated _after_ the transaction is already in the database, and\n        // the database contains block info whereas the pending cache doesn't.\n        const transaction = await transactions.get(hashBuffer);\n        if (transaction === null) {\n            // if we can't find it in the list of pending transactions, check the db!\n            const tx = transactions.transactionPool.find(hashBuffer);\n            return tx ? tx.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common) : null;\n        }\n        else {\n            return transaction.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common);\n        }\n    }\n    /**\n     * Returns the receipt of a transaction by transaction hash.\n     *\n     * Note: The receipt is not available for pending transactions.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns Returns the receipt of a transaction by transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [ txHash ] });\n     * console.log(txReceipt);\n     * ```\n     */\n    async eth_getTransactionReceipt(transactionHash) {\n        const { transactions, transactionReceipts, blocks, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const dataHash = utils_1.Data.from(transactionHash);\n        const txHash = dataHash.toBuffer();\n        const transactionPromise = transactions.get(txHash);\n        const receiptPromise = transactionReceipts.get(txHash);\n        const blockPromise = transactionPromise.then(t => t ? blocks.get(t.blockNumber.toBuffer()) : null);\n        const [transaction, receipt, block] = await Promise.all([\n            transactionPromise,\n            receiptPromise,\n            blockPromise\n        ]);\n        if (transaction) {\n            return receipt.toJSON(block, transaction, common);\n        }\n        // if we are performing \"strict\" instamining, then check to see if the\n        // transaction is pending so as to warn about the v7 instamine changes\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        if (options.miner.blockTime <= 0 &&\n            options.miner.instamine === \"strict\" &&\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted()) {\n            const tx = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").transactions.transactionPool.find(txHash);\n            if (tx != null) {\n                options.logging.logger.log(\" > Ganache `eth_getTransactionReceipt` notice: the transaction with hash\\n\" +\n                    ` > \\`${dataHash.toString()}\\` has not\\n` +\n                    \" > yet been mined.\" +\n                    \" See https://trfl.io/v7-instamine for additional information.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates new message call transaction or a contract creation, if the data field contains code.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, privateKey);\n    }\n    /**\n     * Signs a transaction that can be submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to }] });\n     * console.log(signedTx)\n     * ```\n     */\n    async eth_signTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        tx.signAndHash(privateKey.toBuffer());\n        return utils_1.Data.from(tx.serialized);\n    }\n    /**\n     * Creates new message call transaction or a contract creation for signed transactions.\n     * @param transaction - The signed transaction data.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const txHash = await provider.send(\"eth_sendRawTransaction\", [signedTx] );\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendRawTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromString(transaction, blockchain.common);\n        return blockchain.queueTransaction(tx);\n    }\n    /**\n     * The sign method calculates an Ethereum specific signature with:\n     * `sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`.\n     *\n     * By adding a prefix to the message makes the calculated signature\n     * recognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n     *  (e.g. transaction) and use the signature to impersonate the victim.\n     *\n     * Note the address to sign with must be unlocked.\n     *\n     * @param address - Address to sign with.\n     * @param message - Message to sign.\n     * @returns Signature - a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const msg = \"0x307866666666666666666666\";\n     * const signature = await provider.request({ method: \"eth_sign\", params: [account, msg] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_sign(address, message) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        const messageHash = (0, util_1.hashPersonalMessage)(utils_1.Data.toBuffer(message));\n        const { v, r, s } = (0, utils_1.ecsign)(messageHash, privateKey.toBuffer());\n        return (0, util_1.toRpcSig)(v, r, s);\n    }\n    /**\n     * Identical to eth_signTypedData_v4.\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData(address, typedData) {\n        return this.eth_signTypedData_v4(address, typedData);\n    }\n    /**\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData_v4\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData_v4(address, typedData) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        if (typeof typedData === \"string\") {\n            throw new Error(\"cannot sign data; string sent, expected object\");\n        }\n        if (!typedData.types) {\n            throw new Error(\"cannot sign data; types missing\");\n        }\n        if (!typedData.types.EIP712Domain) {\n            throw new Error(\"cannot sign data; EIP712Domain definition missing\");\n        }\n        if (!typedData.domain) {\n            throw new Error(\"cannot sign data; domain missing\");\n        }\n        if (!typedData.primaryType) {\n            throw new Error(\"cannot sign data; primaryType missing\");\n        }\n        if (!typedData.message) {\n            throw new Error(\"cannot sign data; message missing\");\n        }\n        return (0, eth_sig_util_1.signTypedData_v4)(privateKey.toBuffer(), { data: typedData });\n    }\n    eth_subscribe(subscriptionName, options) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        switch (subscriptionName) {\n            case \"newHeads\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n                    const value = block;\n                    const header = value.header;\n                    const result = {\n                        logsBloom: header.logsBloom,\n                        miner: header.miner,\n                        difficulty: header.difficulty,\n                        totalDifficulty: header.totalDifficulty,\n                        extraData: header.extraData,\n                        gasLimit: header.gasLimit,\n                        gasUsed: header.gasUsed,\n                        hash: block.hash(),\n                        mixHash: block.header.mixHash,\n                        nonce: header.nonce,\n                        number: header.number,\n                        parentHash: header.parentHash,\n                        receiptsRoot: header.receiptsRoot,\n                        stateRoot: header.stateRoot,\n                        timestamp: header.timestamp,\n                        transactionsRoot: header.transactionsRoot,\n                        sha3Uncles: header.sha3Uncles\n                    };\n                    if (header.baseFeePerGas !== undefined) {\n                        result.baseFeePerGas = header.baseFeePerGas;\n                    }\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"logs\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const { addresses, topics } = options\n                    ? (0, filter_parsing_1.parseFilterDetails)(options)\n                    : { addresses: [], topics: [] };\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"blockLogs\", (blockLogs) => {\n                    for (const log of blockLogs.filter(addresses, topics)) {\n                        promiEvent.emit(\"message\", {\n                            type: \"eth_subscription\",\n                            data: {\n                                result: log,\n                                subscription: subscription.toString()\n                            }\n                        });\n                    }\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"newPendingTransactions\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n                    const result = transaction.hash.toString();\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"syncing\": {\n                // ganache doesn't sync, so doing nothing is perfectly valid.\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\").set(subscription.toString(), () => { });\n                return promiEvent;\n            }\n            default:\n                throw new ethereum_utils_1.CodedError(`no \\\"${subscriptionName}\\\" subscription in eth namespace`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Cancel a subscription to a particular event. Returns a boolean indicating\n     * if the subscription was successfully cancelled.\n     *\n     * @param subscriptionId - The ID of the subscription to unsubscribe to.\n     * @returns `true` if subscription was cancelled successfully, otherwise `false`.\n     * @example\n     * ```javascript\n     * const subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const result = await provider.request({ method: \"eth_unsubscribe\", params: [subscriptionId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_unsubscribe(subscriptionId) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        const unsubscribe = subscriptions.get(subscriptionId);\n        if (unsubscribe) {\n            subscriptions.delete(subscriptionId);\n            unsubscribe();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Creates a filter in the node, to notify when a new block arrives. To check\n     * if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newBlockFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newBlockFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n            value.updates.push(block.hash());\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.block\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter in the node, to notify when new pending transactions\n     * arrive. To check if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newPendingTransactionFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newPendingTransactionFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n            value.updates.push(transaction.hash);\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.pendingTransaction\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter object, based on filter options, to notify when the state\n     * changes (logs). To check if the state has changed, call\n     * `eth_getFilterChanges`.\n     *\n     * If the from `fromBlock` or `toBlock` option are equal to \"latest\" the\n     * filter continually append logs for whatever block is seen as latest at the\n     * time the block was mined, not just for the block that was \"latest\" when the\n     * filter was created.\n     *\n     * ### A note on specifying topic filters:\n     * Topics are order-dependent. A transaction with a log with topics [A, B]\n     * will be matched by the following topic filters:\n     *  * `[]` “anything”\n     *  * `[A]` “A in first position (and anything after)”\n     *  * `[null, B]` “anything in first position AND B in second position (and\n     * anything after)”\n     *  * `[A, B]` “A in first position AND B in second position (and anything\n     * after)”\n     *  * `[[A, B], [A, B]]` “(A OR B) in first position AND (A OR B) in second\n     * position (and anything after)”\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     *\n     * @param filter - The filter options as seen in source.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newFilter(filter) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (filter == null)\n            filter = {};\n        const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter || {});\n        const unsubscribe = blockchain.on(\"blockLogs\", (blockLogs) => {\n            const blockNumber = blockLogs.blockNumber;\n            // every time we get a blockLogs message we re-check what the filter's\n            // range is. We do this because \"latest\" isn't the latest block at the\n            // time the filter was set up, rather it is the actual latest *mined*\n            // block (that is: not pending)\n            const { fromBlock, toBlock } = (0, filter_parsing_1.parseFilterRange)(filter, blockchain);\n            if (fromBlock <= blockNumber && toBlock >= blockNumber) {\n                value.updates.push(...blockLogs.filter(addresses, topics));\n            }\n        });\n        const value = { updates: [], unsubscribe, filter, type: ethereum_utils_1.FilterTypes.log };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Polling method for a filter, which returns an array of logs, block hashes,\n     * or transaction hashes, depending on the filter type, which occurred since\n     * last poll.\n     *\n     * @param filterId - The filter id.\n     * @returns An array of logs, block hashes, or transaction hashes, depending\n     * on the filter type, which occurred since last poll.\n     *\n     * For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newPendingTransactionFilter` the return are transaction hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newFilter` the return are log objects with the following parameters:\n     * * `removed`: `TAG` - `true` when the log was removed, `false` if its a valid log.\n     * * `logIndex`: `QUANTITY` - Integer of the log index position in the block. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - Integer of the transactions index position. `null` when pending.\n     * * `transactionHash`: `DATA`, 32 Bytes - Hash of the transaction where the log was. `null` when pending.\n     * * `blockHash`: `DATA`, 32 Bytes - Hash of the block where the log was. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The block number where the log was in. `null` when pending.\n     * * `address`: `DATA`, 20 Bytes - The address from which the log originated.\n     * * `data`: `DATA` - Contains one or more 32 Bytes non-indexed arguments of the log.\n     * * `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments.\n     *\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * const subscriptionId = await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const changes = await provider.request({ method: \"eth_getFilterChanges\", params: [filterId] });\n     * console.log(changes);\n     *\n     * await provider.send(\"eth_unsubscribe\", [subscriptionId]);\n     * ```\n     */\n    async eth_getFilterChanges(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter) {\n            const updates = filter.updates;\n            filter.updates = [];\n            return updates;\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is\n     * no longer needed.\n     *\n     * @param filterId - The filter id.\n     * @returns `true` if the filter was successfully uninstalled, otherwise\n     * `false`.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * const result = await provider.request({ method: \"eth_uninstallFilter\", params: [filterId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_uninstallFilter(filterId) {\n        const id = utils_1.Quantity.toString(filterId);\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(id);\n        if (!filter)\n            return false;\n        filter.unsubscribe();\n        return __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").delete(id);\n    }\n    /**\n     * Returns an array of all logs matching filter with given id.\n     *\n     * @param filterId - The filter id.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const logs = await provider.request({ method: \"eth_getFilterLogs\", params: [filterId] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getFilterLogs(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter && filter.type === ethereum_utils_1.FilterTypes.log) {\n            return this.eth_getLogs(filter.filter);\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Returns an array of all logs matching a given filter object.\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     * * `blockHash`: `DATA`, 32 Bytes (optional) - Hash of the block to restrict logs from. If `blockHash` is present,\n     * then neither `fromBlock` or `toBlock` are allowed.\n     *\n     * @param filter - The filter options as seen in source.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * const txHash = await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const { contractAddress } = await provider.send(\"eth_getTransactionReceipt\", [txHash] );\n     *\n     * const logs = await provider.request({ method: \"eth_getLogs\", params: [{ address: contractAddress }] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getLogs(filter) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blockLogs.getLogs(filter);\n    }\n    /**\n     * Returns the number of transactions sent from an address.\n     *\n     * @param address - `DATA`, 20 Bytes - The address to get number of transactions sent from\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * @returns Number of transactions sent from this address.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const txCount = await provider.request({ method: \"eth_getTransactionCount\", params: [ from, \"latest\" ] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getTransactionCount(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getNonce(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Executes a new message call immediately without creating a transaction on the block chain.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * State Override object - An address-to-state mapping, where each entry specifies some\n     * state to be ephemerally overridden prior to executing the call. Each address maps to an\n     * object containing:\n     * * `balance`: `QUANTITY` (optional) - The balance to set for the account before executing the call.\n     * * `nonce`: `QUANTITY` (optional) - The nonce to set for the account before executing the call.\n     * * `code`: `DATA` (optional) - The EVM bytecode to set for the account before executing the call.\n     * * `state`: `OBJECT` (optional*) - Key-value mapping to override *all* slots in the account storage before executing the call.\n     * * `stateDiff`: `OBJECT` (optional*) - Key-value mapping to override *individual* slots in the account storage before executing the call.\n     * * *Note - `state` and `stateDiff` fields are mutually exclusive.\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @param overrides - State overrides to apply during the simulation.\n     *\n     * @returns The return value of executed contract.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const txObj = { from, gas: \"0x5b8d80\", gasPrice: \"0x1dfd14000\", value:\"0x0\", data: simpleSol };\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\"\n     * const overrides = { [from]: { balance: \"0x3e8\", nonce: \"0x5\", code: \"0xbaddad42\", stateDiff: { [slot]: \"0x00000000000000000000000000000000000000000000000000000000baddad42\"}}};\n     * const result = await provider.request({ method: \"eth_call\", params: [txObj, \"latest\", overrides] });\n     * console.log(result);\n     * ```\n     */\n    async eth_call(transaction, blockNumber = ethereum_utils_1.Tag.latest, overrides = {}) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const common = blockchain.common;\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        let gas;\n        if (typeof transaction.gasLimit === \"undefined\") {\n            if (typeof transaction.gas !== \"undefined\") {\n                gas = utils_1.Quantity.from(transaction.gas);\n            }\n            else {\n                // eth_call isn't subject to regular transaction gas limits by default\n                gas = options.miner.callGasLimit;\n            }\n        }\n        else {\n            gas = utils_1.Quantity.from(transaction.gasLimit);\n        }\n        let data;\n        if (typeof transaction.data === \"undefined\") {\n            if (typeof transaction.input !== \"undefined\") {\n                data = utils_1.Data.from(transaction.input);\n            }\n        }\n        else {\n            data = utils_1.Data.from(transaction.data);\n        }\n        // eth_call doesn't validate that the transaction has a sufficient\n        // \"effectiveGasPrice\". however, if `maxPriorityFeePerGas` or\n        // `maxFeePerGas` values are set, the baseFeePerGas is used to calculate\n        // the effectiveGasPrice, which is used to calculate tx costs/refunds.\n        const baseFeePerGasBigInt = parentBlock.header.baseFeePerGas\n            ? parentBlock.header.baseFeePerGas.toBigInt()\n            : undefined;\n        let gasPrice;\n        const hasGasPrice = typeof transaction.gasPrice !== \"undefined\";\n        // if the original block didn't have a `baseFeePerGas` (baseFeePerGasBigInt\n        // is undefined) then EIP-1559 was not active on that block and we can't use\n        // type 2 fee values (as they rely on the baseFee)\n        if (!common.isActivatedEIP(1559) || baseFeePerGasBigInt === undefined) {\n            gasPrice = utils_1.Quantity.from(hasGasPrice ? 0 : transaction.gasPrice);\n        }\n        else {\n            const hasMaxFeePerGas = typeof transaction.maxFeePerGas !== \"undefined\";\n            const hasMaxPriorityFeePerGas = typeof transaction.maxPriorityFeePerGas !== \"undefined\";\n            if (hasGasPrice && (hasMaxFeePerGas || hasMaxPriorityFeePerGas)) {\n                throw new Error(\"both gasPrice and (maxFeePerGas or maxPriorityFeePerGas) specified\");\n            }\n            // User specified 1559 gas fields (or none), use those\n            let maxFeePerGas = 0n;\n            let maxPriorityFeePerGas = 0n;\n            if (hasMaxFeePerGas) {\n                maxFeePerGas = BigInt(transaction.maxFeePerGas);\n            }\n            if (hasMaxPriorityFeePerGas) {\n                maxPriorityFeePerGas = BigInt(transaction.maxPriorityFeePerGas);\n            }\n            if (maxPriorityFeePerGas > 0 || maxFeePerGas > 0) {\n                const a = maxFeePerGas - baseFeePerGasBigInt;\n                const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n                gasPrice = utils_1.Quantity.from(baseFeePerGasBigInt + tip);\n            }\n            else {\n                gasPrice = utils_1.Quantity.from(0);\n            }\n        }\n        const block = new ethereum_block_1.RuntimeBlock(parentHeader.number, parentHeader.parentHash, blockchain.coinbase, gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), baseFeePerGasBigInt);\n        const simulatedTransaction = {\n            gas,\n            // if we don't have a from address, our caller sut be the configured coinbase address\n            from: transaction.from == null\n                ? blockchain.coinbase\n                : ethereum_address_1.Address.from(transaction.from),\n            to: transaction.to == null ? null : ethereum_address_1.Address.from(transaction.to),\n            gasPrice,\n            value: transaction.value == null ? null : utils_1.Quantity.from(transaction.value),\n            data,\n            block\n        };\n        return blockchain.simulateTransaction(simulatedTransaction, parentBlock, overrides);\n    }\n    /**\n     * Returns a collection of historical block gas data and optional effective fee spent per unit of gas for a given percentile of block gas usage.\n     *\n     * @param blockCount - Range of blocks between 1 and 1024. Will return less than the requested range if not all blocks are available.\n     * @param newestBlock - Highest block of the requested range.\n     * @param rewardPercentiles - A monotonically increasing list of percentile values. For each block in the requested range,\n     * the transactions will be sorted in ascending order by effective tip per gas and the corresponding effective tip for the percentile\n     * will be determined, accounting for gas consumed.\n     * @returns transaction base fee per gas and effective priority fee per gas for the requested/supported block range\n     *\n     * * `oldestBlock`:  - Lowest number block of the returned range.\n     * * `baseFeePerGas`:  - An array of block base fees per gas. This includes the next block after the newest of the returned range,\n     * because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.\n     * * `gasUsedRatio`:  - An array of block gas used ratios. These are calculated as the ratio of `gasUsed` and `gasLimit`.\n     * * `reward`:  - An array of effective priority fee per gas data points from a single block. All zeroes are returned if the\n     * block is empty.\n     *\n     * @EIP [1559 - Fee market change](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md)\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to }] });\n     * const feeHistory = await provider.request({ method: \"eth_feeHistory\", params: [\"0x1\", \"0x1\", [10, 100]] });\n     * console.log(feeHistory);\n     * ```\n     */\n    async eth_feeHistory(blockCount, newestBlock, rewardPercentiles) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const MIN_BLOCKS = 1;\n        const MAX_BLOCKS = 1024;\n        const PRECISION_FLOAT = 1e14;\n        const PAD_PRECISION = 16;\n        const PRECISION_BIG_INT = BigInt(1e16);\n        const newestBlockNumber = blockchain.blocks\n            .getEffectiveNumber(newestBlock)\n            .toBigInt();\n        // blockCount must be within MIN_BLOCKS and MAX_BLOCKS. blockCount > newestBlock is\n        // technically valid per the spec but we cannot go past the Genesis Block. Values\n        // above MAX_BLOCKS are technically within spec, however we cap totalBlocks because\n        // of the resource needs and potential abuse of a very large blockCount.\n        const totalBlocks = Number((0, utils_1.min)((0, utils_1.max)(utils_1.Quantity.toBigInt(blockCount), MIN_BLOCKS), newestBlockNumber + 1n, MAX_BLOCKS));\n        const baseFeePerGas = new Array(totalBlocks);\n        const gasUsedRatio = new Array(totalBlocks);\n        let reward;\n        // percentiles must be unique and in ascending order between 0 and 100\n        if (rewardPercentiles.length > 0) {\n            const ERR_INVALID_PERCENTILE = \"invalid reward percentile: percentiles must be unique and in ascending order\";\n            if (rewardPercentiles[0] < 0)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[0]}`);\n            if (rewardPercentiles[rewardPercentiles.length - 1] > 100)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[rewardPercentiles.length - 1]}`);\n            for (let i = 1; i < rewardPercentiles.length; i++) {\n                if (rewardPercentiles[i] <= rewardPercentiles[i - 1]) {\n                    throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[i]} ${rewardPercentiles[i - 1]}`);\n                }\n            }\n            reward = new Array(totalBlocks);\n        }\n        // totalBlocks is inclusive of newestBlock\n        const oldestBlockNumber = newestBlockNumber - BigInt(totalBlocks - 1);\n        let currentBlock;\n        let currentPosition = 0;\n        while (currentPosition < totalBlocks) {\n            currentBlock = await blockchain.blocks.get(utils_1.Quantity.toBuffer(oldestBlockNumber + BigInt(currentPosition)));\n            baseFeePerGas[currentPosition] = currentBlock.header.baseFeePerGas;\n            const gasUsed = currentBlock.header.gasUsed.toBigInt();\n            const gasLimit = currentBlock.header.gasLimit.toBigInt();\n            if (gasUsed === gasLimit) {\n                gasUsedRatio[currentPosition] = 1;\n            }\n            else {\n                gasUsedRatio[currentPosition] = Number(`0.${((gasUsed * PRECISION_BIG_INT) / gasLimit)\n                    .toString()\n                    .padStart(PAD_PRECISION, \"0\")}`);\n            }\n            // For each percentile, find the cost of the unit of gas at that percentage\n            if (reward !== undefined) {\n                const transactions = currentBlock.getTransactions();\n                // If there are no transactions, all reward percentiles are 0.\n                if (transactions.length === 0) {\n                    reward[currentPosition] = rewardPercentiles.map(() => utils_1.Quantity.Zero);\n                }\n                else {\n                    // For all transactions, effectiveGasReward = normalized fee per unit of gas\n                    // earned by the miner regardless of transaction type\n                    const baseFee = baseFeePerGas[currentPosition].toBigInt();\n                    const receipts = await Promise.all(transactions.map(tx => blockchain.transactionReceipts.get(tx.hash.toBuffer())));\n                    // Effective Reward is the amount paid per unit of gas\n                    const effectiveRewardAndGasUsed = transactions\n                        .map((tx, idx) => {\n                        let effectiveGasReward;\n                        if (\"maxPriorityFeePerGas\" in tx) {\n                            const maxPriorityFeePerGas = tx.maxPriorityFeePerGas.toBigInt();\n                            effectiveGasReward = BigInt((0, utils_1.min)(tx.maxFeePerGas.toBigInt() - baseFee, maxPriorityFeePerGas));\n                        }\n                        else {\n                            effectiveGasReward = tx.gasPrice.toBigInt() - baseFee;\n                        }\n                        return {\n                            effectiveGasReward: effectiveGasReward,\n                            gasUsed: utils_1.Quantity.toBigInt(receipts[idx].gasUsed)\n                        };\n                    })\n                        .sort((a, b) => {\n                        if (a.effectiveGasReward > b.effectiveGasReward)\n                            return 1;\n                        if (a.effectiveGasReward < b.effectiveGasReward)\n                            return -1;\n                        return 0;\n                    });\n                    // All of the block transactions are ordered, ascending, from least to greatest by\n                    // the fee the tx paid per unit of gas. For each percentile of block gas consumed,\n                    // what was the fee paid for the unit of gas at that percentile.\n                    reward[currentPosition] = rewardPercentiles.map(percentile => {\n                        let totalGasUsed = 0n;\n                        const targetGas = (gasUsed * BigInt(percentile * PRECISION_FLOAT)) /\n                            PRECISION_BIG_INT;\n                        for (const values of effectiveRewardAndGasUsed) {\n                            totalGasUsed = totalGasUsed + values.gasUsed;\n                            if (targetGas <= totalGasUsed) {\n                                return utils_1.Quantity.from(values.effectiveGasReward);\n                            }\n                        }\n                    });\n                }\n            }\n            currentPosition++;\n        }\n        // baseFeePerGas is calculated based on the header of the previous block, including the block after newestBlock.\n        baseFeePerGas[totalBlocks] = utils_1.Quantity.from(ethereum_block_1.Block.calcNextBaseFee(currentBlock));\n        return {\n            oldestBlock: utils_1.Quantity.from(oldestBlockNumber),\n            baseFeePerGas,\n            gasUsedRatio,\n            reward\n        };\n    }\n    //#endregion\n    //#region debug\n    /**\n     * Attempt to run the transaction in the exact same manner as it was executed\n     * on the network. It will replay any transaction that may have been executed\n     * prior to this one before it will finally attempt to execute the transaction\n     * that corresponds to the given hash.\n     *\n     * In addition to the hash of the transaction you may give it a secondary\n     * optional argument, which specifies the options for this specific call.\n     * The possible options are:\n     *\n     * * `disableStorage`: \\{boolean\\} Setting this to `true` will disable storage capture (default = `false`).\n     * * `disableMemory`: \\{boolean\\} Setting this to `true` will disable memory capture (default = `false`).\n     * * `disableStack`: \\{boolean\\} Setting this to `true` will disable stack capture (default = `false`).\n     *\n     * @param transactionHash - Hash of the transaction to trace.\n     * @param options - See options in source.\n     * @returns Returns the `gas`, `structLogs`, and `returnValue` for the traced transaction.\n     *\n     * The `structLogs` are an array of logs, which contains the following fields:\n     * * `depth`: The execution depth.\n     * * `error`: Information about an error, if one occurred.\n     * * `gas`: The number of gas remaining.\n     * * `gasCost`: The cost of gas in wei.\n     * * `memory`: An array containing the contract's memory data.\n     * * `op`: The current opcode.\n     * * `pc`: The current program counter.\n     * * `stack`: The EVM execution stack.\n     * * `storage`: An object containing the contract's storage data.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\n     * console.log(transactionTrace);\n     * ```\n     */\n    async debug_traceTransaction(transactionHash, options) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").traceTransaction(transactionHash, options || {});\n    }\n    // TODO: example doesn't return correct value\n    // Issue: https://github.com/trufflesuite/ganache/issues/3203\n    /**\n     * Attempts to replay the transaction as it was executed on the network and\n     * return storage data given a starting key and max number of entries to return.\n     *\n     * @param blockHash - Hash of a block.\n     * @param transactionIndex - Integer of the transaction index position.\n     * @param contractAddress - Address of the contract.\n     * @param startKey - Hash of the start key for grabbing storage entries.\n     * @param maxResult - Integer of maximum number of storage entries to return.\n     * @returns Returns a storage object with the keys being keccak-256 hashes of the storage keys,\n     * and the values being the raw, unhashed key and value for that specific storage slot. Also\n     * returns a next key which is the keccak-256 hash of the next key in storage for continuous downloading.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const initialTxHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const {contractAddress} = await provider.request({ method: \"eth_getTransactionReceipt\", params: [initialTxHash] });\n     *\n     * // set value to 19\n     * const data = \"0x552410770000000000000000000000000000000000000000000000000000000000000019\";\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to: contractAddress, data }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storage = await provider.request({ method: \"debug_storageRangeAt\", params: [blockHash, transactionIndex, contractAddress, \"0x01\", 1] });\n     * console.log(storage);\n     * ```\n     */\n    async debug_storageRangeAt(blockHash, transactionIndex, contractAddress, startKey, maxResult) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").storageRangeAt(blockHash, utils_1.Quantity.toNumber(transactionIndex), contractAddress, startKey, utils_1.Quantity.toNumber(maxResult));\n    }\n    //#endregion\n    //#region personal\n    /**\n     * Returns all the Ethereum account addresses of all keys that have been\n     * added.\n     * @returns The Ethereum account addresses of all keys that have been added.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"personal_listAccounts\"));\n     * ```\n     */\n    async personal_listAccounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Generates a new account with private key. Returns the address of the new\n     * account.\n     * @param passphrase - The passphrase to encrypt the private key with.\n     * @returns The new account's address.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const address = await provider.send(\"personal_newAccount\", [passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_newAccount(passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet.createRandomAccount();\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase.\n     *\n     * @param rawKey - The raw, unencrypted private key to import.\n     * @param passphrase - The passphrase to encrypt with.\n     * @returns Returns the address of the new account.\n     * @example\n     * ```javascript\n     * const rawKey = \"0x0123456789012345678901234567890123456789012345678901234567890123\";\n     * const passphrase = \"passphrase\";\n     *\n     * const address = await provider.send(\"personal_importRawKey\",[rawKey, passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_importRawKey(rawKey, passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet_1.default.createAccountFromPrivateKey(utils_1.Data.from(rawKey));\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Locks the account. The account can no longer be used to send transactions.\n     * @param address - The account address to be locked.\n     * @returns Returns `true` if the account was locked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.send(\"personal_listAccounts\");\n     * const isLocked = await provider.send(\"personal_lockAccount\", [account] );\n     * console.log(isLocked);\n     * ```\n     */\n    async personal_lockAccount(address) {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").lockAccount(address.toLowerCase());\n    }\n    /**\n     * Unlocks the account for use.\n     *\n     * The unencrypted key will be held in memory until the unlock duration\n     * expires. The unlock duration defaults to 300 seconds. An explicit duration\n     * of zero seconds unlocks the key until geth exits.\n     *\n     * The account can be used with `eth_sign` and `eth_sendTransaction` while it is\n     * unlocked.\n     * @param address - 20 Bytes - The address of the account to unlock.\n     * @param passphrase - Passphrase to unlock the account.\n     * @param duration - (default: 300) Duration in seconds how long the account\n     * should remain unlocked for. Set to 0 to disable automatic locking.\n     * @returns `true` if it worked. Throws an error or returns `false` if it did not.\n     * @example\n     * ```javascript\n     * // generate an account\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const isUnlocked = await provider.send(\"personal_unlockAccount\", [newAccount, passphrase] );\n     * console.log(isUnlocked);\n     * ```\n     */\n    async personal_unlockAccount(address, passphrase, duration = 300) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockAccount(addy, passphrase, duration);\n    }\n    /**\n     * Validate the given passphrase and submit transaction.\n     *\n     * The transaction is the same argument as for `eth_sendTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified, signed and\n     * send onto the network. The account is not unlocked globally in the node\n     * and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param txData - The transaction call object as seen in source.\n     * @param passphrase - The passphrase to decrpyt the private key belonging to `tx.from`.\n     * @returns The transaction hash or if unsuccessful an error.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const [to] = await provider.send(\"personal_listAccounts\");\n     *\n     * // use account and passphrase to send the transaction\n     * const txHash = await provider.send(\"personal_sendTransaction\", [{ from: newAccount, to, gasLimit: \"0x5b8d80\" }, passphrase] );\n     * console.log(txHash);\n     * ```\n     */\n    async personal_sendTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        const from = tx.from;\n        if (from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, utils_1.Data.from(secretKey));\n    }\n    /**\n     * Validates the given passphrase and signs a transaction that can be\n     * submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * The transaction is the same argument as for `eth_signTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified and signed.\n     * The account is not unlocked globally in the node and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\";\n     * const from = await provider.send(\"personal_newAccount\", [passphrase] );\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const signedTx = await provider.request({ method: \"personal_signTransaction\", params: [{ from, to }, passphrase] });\n     * console.log(signedTx)\n     * ```\n     */\n    async personal_signTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        tx.signAndHash(secretKey);\n        return utils_1.Data.from(tx.serialized);\n    }\n    //#endregion\n    //#region rpc\n    /**\n     * Returns object of RPC modules.\n     * @returns RPC modules.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"rpc_modules\"));\n     * ```\n     */\n    async rpc_modules() {\n        return RPC_MODULES;\n    }\n    //#endregion\n    //#region shh\n    /**\n     * Creates new whisper identity in the client.\n     *\n     * @returns - The address of the new identity.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newIdentity\"));\n     * ```\n     */\n    async shh_newIdentity() {\n        return \"0x00\";\n    }\n    /**\n     * Checks if the client hold the private keys for a given identity.\n     *\n     * @param address - The identity address to check.\n     * @returns Returns `true` if the client holds the private key for that identity, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_hasIdentity\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_hasIdentity(address) {\n        return false;\n    }\n    /**\n     * Creates a new group.\n     *\n     * @returns The address of the new group.\n     */\n    async shh_newGroup() {\n        return \"0x00\";\n    }\n    /**\n     * Adds a whisper identity to the group.\n     *\n     * @param address - The identity address to add to a group.\n     * @returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_addToGroup\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_addToGroup(address) {\n        return false;\n    }\n    /**\n     * Creates filter to notify, when client receives whisper message matching the filter options.\n     *\n     * @param to - (optional) Identity of the receiver. When present it will try to decrypt any incoming message\n     *  if the client holds the private key to this identity.\n     * @param topics - Array of topics which the incoming message's topics should match.\n     * @returns Returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newFilter\", [\"0x0\", []] ));\n     * ```\n     */\n    async shh_newFilter(to, topics) {\n        return false;\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n     * Additionally filters timeout when they aren't requested with `shh_getFilterChanges` for a period of time.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns `true` if the filter was successfully uninstalled, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_uninstallFilter\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_uninstallFilter(id) {\n        return false;\n    }\n    /**\n     * Polling method for whisper filters. Returns new messages since the last call of this method.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getFilterChanges\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getFilterChanges(id) {\n        return [];\n    }\n    /**\n     * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns See: `shh_getFilterChanges`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getMessages\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getMessages(id) {\n        return false;\n    }\n    /**\n     * Creates a whisper message and injects it into the network for distribution.\n     *\n     * @param postData -\n     * @returns Returns `true` if the message was sent, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_post\", [{}] ));\n     * ```\n     */\n    async shh_post(postData) {\n        return false;\n    }\n    /**\n     * Returns the current whisper protocol version.\n     *\n     * @returns The current whisper protocol version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_version\"));\n     * ```\n     */\n    async shh_version() {\n        return \"2\";\n    }\n    //#endregion\n    //#region txpool\n    /**\n     * Returns the current content of the transaction pool.\n     *\n     * @returns The transactions currently pending or queued in the transaction pool.\n     * @example\n     * ```javascript\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const pendingTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x0\" }] });\n     * const queuedTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x2\" }] });\n     * const pool = await provider.send(\"txpool_content\");\n     * console.log(pool);\n     * ```\n     */\n    async txpool_content() {\n        const { transactions, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const { transactionPool: { executables, origins } } = transactions;\n        const processMap = (map) => {\n            let res = {};\n            for (let [_, { array, length }] of map) {\n                for (let i = 0; i < length; ++i) {\n                    const transaction = array[i];\n                    const from = transaction.from.toString();\n                    if (res[from] === undefined) {\n                        res[from] = {};\n                    }\n                    // The nonce keys are actual decimal numbers (as strings) and not\n                    // hex literals (based on what geth returns).\n                    const nonce = transaction.nonce.toBigInt().toString();\n                    res[from][nonce] = transaction.toJSON(common);\n                }\n            }\n            return res;\n        };\n        return {\n            pending: processMap(executables.pending),\n            queued: processMap(origins)\n        };\n    }\n}\n_EthereumApi_getId = new WeakMap(), _EthereumApi_filters = new WeakMap(), _EthereumApi_subscriptions = new WeakMap(), _EthereumApi_options = new WeakMap(), _EthereumApi_blockchain = new WeakMap(), _EthereumApi_wallet = new WeakMap();\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_hive\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_info\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_mine\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountNonce\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"evm_setAccountStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_increaseTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_setTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_revert\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"miner_start\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"miner_stop\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setGasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setEtherbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setExtra\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"web3_clientVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"web3_sha3\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_listening\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_peerCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_estimateGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_protocolVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_syncing\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_coinbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getProof\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getCompilers\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_submitWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_submitHashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_mining\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_hashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_gasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_maxPriorityFeePerGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_accounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_blockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_chainId\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionReceipt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendRawTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_sign\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData_v4\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_subscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_unsubscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newBlockFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newPendingTransactionFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"eth_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getTransactionCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 3)\n], EthereumApi.prototype, \"eth_call\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_feeHistory\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"personal_listAccounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_newAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_importRawKey\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_lockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"personal_unlockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"rpc_modules\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_hasIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_addToGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"shh_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getMessages\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_post\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"txpool_content\", null);\nexports.default = EthereumApi;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Blockchain_state, _Blockchain_miner, _Blockchain_blockBeingSavedPromise, _Blockchain_timer, _Blockchain_emitStepEvent, _Blockchain_database, _Blockchain_options, _Blockchain_instamine, _Blockchain_saveNewBlock, _Blockchain_emitNewBlock, _Blockchain_getTransactionLogOutput, _Blockchain_handleNewBlockData, _Blockchain_readyNextBlock, _Blockchain_isPaused, _Blockchain_commitAccounts, _Blockchain_initializeGenesisBlock, _Blockchain_timeAdjustment, _Blockchain_adjustedTime, _Blockchain_deleteBlockData, _Blockchain_snapshots, _Blockchain_traceTransaction, _Blockchain_prepareNextBlock;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\nconst os_1 = require(\"os\");\nconst miner_1 = __importStar(require(\"./miner/miner\"));\nconst database_1 = __importDefault(require(\"./database\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst common_1 = require(\"@ethereumjs/common\");\nconst vm_1 = require(\"@ethereumjs/vm\");\nconst evm_1 = require(\"@ethereumjs/evm\");\nconst utils_1 = require(\"@ganache/utils\");\nconst account_manager_1 = __importDefault(require(\"./data-managers/account-manager\"));\nconst block_manager_1 = __importDefault(require(\"./data-managers/block-manager\"));\nconst blocklog_manager_1 = __importDefault(require(\"./data-managers/blocklog-manager\"));\nconst transaction_manager_1 = __importDefault(require(\"./data-managers/transaction-manager\"));\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst run_call_1 = require(\"./helpers/run-call\");\nconst state_manager_1 = require(\"./forking/state-manager\");\nconst statemanager_1 = require(\"@ethereumjs/statemanager\");\nconst trie_1 = require(\"./helpers/trie\");\nconst trie_2 = require(\"./forking/trie\");\nconst precompiles_1 = require(\"./helpers/precompiles\");\nconst transaction_receipt_manager_1 = __importDefault(require(\"./data-managers/transaction-receipt-manager\"));\nconst provider_events_1 = require(\"./provider-events\");\nconst mcl_wasm_1 = __importDefault(require(\"mcl-wasm\"));\nconst console_log_1 = require(\"@ganache/console.log\");\nconst mclInitPromise = mcl_wasm_1.default.init(mcl_wasm_1.default.BLS12_381).then(() => {\n    mcl_wasm_1.default.setMapToMode(mcl_wasm_1.default.IRTF); // set the right map mode; otherwise mapToG2 will return wrong values.\n    mcl_wasm_1.default.verifyOrderG1(true); // subgroup checks for G1\n    mcl_wasm_1.default.verifyOrderG2(true); // subgroup checks for G2\n});\nvar Status;\n(function (Status) {\n    // Flags\n    Status[Status[\"started\"] = 1] = \"started\";\n    Status[Status[\"starting\"] = 2] = \"starting\";\n    Status[Status[\"stopped\"] = 4] = \"stopped\";\n    Status[Status[\"stopping\"] = 8] = \"stopping\";\n    Status[Status[\"paused\"] = 16] = \"paused\"; // 0001 0000\n})(Status = exports.Status || (exports.Status = {}));\n/**\n * Sets the provided VM state manager's state root *without* first\n * checking for checkpoints or flushing the existing cache.\n *\n * Useful if you know the state manager is not in a checkpoint and its internal\n * cache is safe to discard.\n *\n * @param stateManager -\n * @param stateRoot -\n */\nfunction setStateRootSync(stateManager, stateRoot) {\n    stateManager._trie.root(stateRoot);\n    stateManager._cache.clear();\n    stateManager._storageTries = {};\n}\nfunction makeTrie(blockchain, trieDB, root) {\n    if (blockchain.fallback) {\n        return new trie_2.ForkTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n    else {\n        return new trie_1.GanacheTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n}\nfunction createCommon(chainId, networkId, hardfork) {\n    const common = common_1.Common.custom({\n        name: \"ganache\",\n        networkId: networkId,\n        chainId: chainId,\n        comment: \"Local test network\",\n        defaultHardfork: hardfork\n    }, \n    // if we were given a chain id that matches a real chain, use it\n    // NOTE: I don't think Common serves a purpose other than instructing the\n    // VM what hardfork is in use. But just incase things change in the future\n    // its configured \"more correctly\" here.\n    { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n    // the VM likes to listen to \"hardforkChanged\" events from common, but:\n    //  a) we don't currently support changing hardforks\n    //  b) it can cause `MaxListenersExceededWarning`.\n    // Since we don't need it we overwrite .on to make it be quiet.\n    common.on = () => { };\n    return common;\n}\nclass Blockchain extends emittery_1.default {\n    /**\n     * Initializes the underlying Database and handles synchronization between\n     * the API and the database.\n     *\n     * Emits a `ready` event once the database and all dependencies are fully\n     * initialized.\n     * @param options -\n     */\n    constructor(options, coinbase, fallback) {\n        super();\n        _Blockchain_state.set(this, Status.starting);\n        _Blockchain_miner.set(this, void 0);\n        _Blockchain_blockBeingSavedPromise.set(this, void 0);\n        /**\n         * When not instamining (blockTime > 0) this value holds the timeout timer.\n         */\n        _Blockchain_timer.set(this, null);\n        /**\n         * Because step events are expensive to create and emit, CPU-wise, we do it\n         * conditionally.\n         */\n        _Blockchain_emitStepEvent.set(this, false);\n        _Blockchain_database.set(this, void 0);\n        _Blockchain_options.set(this, void 0);\n        _Blockchain_instamine.set(this, void 0);\n        _Blockchain_saveNewBlock.set(this, ({ block, serialized, storageKeys, transactions }) => {\n            const { blocks } = this;\n            blocks.latest = block;\n            return __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const blockHash = block.hash();\n                const blockHeader = block.header;\n                const blockNumberQ = blockHeader.number;\n                const blockNumber = blockNumberQ.toBuffer();\n                const blockLogs = ethereum_utils_1.BlockLogs.create(blockHash);\n                const timestamp = blockHeader.timestamp;\n                const timestampStr = new Date(timestamp.toNumber() * 1000).toString();\n                const logOutput = [];\n                transactions.forEach((tx, i) => {\n                    const hash = tx.hash.toBuffer();\n                    const index = utils_1.Quantity.from(i);\n                    // save transaction to the database\n                    const serialized = tx.serializeForDb(blockHash, blockNumberQ, index);\n                    this.transactions.set(hash, serialized);\n                    // save receipt to the database\n                    const receipt = tx.getReceipt();\n                    const encodedReceipt = receipt.serialize(true);\n                    this.transactionReceipts.set(hash, encodedReceipt);\n                    // collect block logs\n                    tx.getLogs().forEach(blockLogs.append.bind(blockLogs, index, tx.hash));\n                    // prepare log output\n                    logOutput.push(__classPrivateFieldGet(this, _Blockchain_getTransactionLogOutput, \"f\").call(this, hash, receipt, blockHeader.number, timestampStr, tx.execException));\n                });\n                // save storage keys to the database\n                storageKeys.forEach(value => {\n                    this.storageKeys.put(value.hashedKey, value.key);\n                });\n                blockLogs.blockNumber = blockHeader.number;\n                // save block logs to the database\n                this.blockLogs.set(blockNumber, blockLogs.serialize());\n                // save block to the database\n                blocks.putBlock(blockNumber, blockHash, serialized);\n                // update the \"latest\" index\n                blocks.updateLatestIndex(blockNumber);\n                // output to the log, if we have data to output\n                if (logOutput.length > 0)\n                    __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(logOutput.join(os_1.EOL));\n                return { block, blockLogs, transactions };\n            });\n        });\n        /**\n         * Emit the block now that everything has been fully saved to the database\n         */\n        _Blockchain_emitNewBlock.set(this, async (blockInfo) => {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const { block, blockLogs, transactions } = blockInfo;\n            transactions.forEach(transaction => {\n                transaction.finalize(\"confirmed\", transaction.execException);\n            });\n            if (options.miner.instamine === \"eager\") {\n                // in eager instamine mode we must delay the broadcast of new blocks\n                await new Promise(resolve => {\n                    // we delay emitting blocks and blockLogs because we need to allow for:\n                    // ```\n                    //  await provider.request({\"method\": \"eth_sendTransaction\"...)\n                    //  await provider.once(\"message\") // <- should work\n                    // ```\n                    // If we don't have this delay here the messages will be sent before\n                    // the call has a chance to listen to the event.\n                    setImmediate(async () => {\n                        // emit block logs first so filters can pick them up before\n                        // block listeners are notified\n                        await Promise.all([\n                            this.emit(\"blockLogs\", blockLogs),\n                            this.emit(\"block\", block)\n                        ]);\n                        resolve(void 0);\n                    });\n                });\n            }\n            else {\n                // emit block logs first so filters can pick them up before\n                // block listeners are notified\n                await Promise.all([\n                    this.emit(\"blockLogs\", blockLogs),\n                    this.emit(\"block\", block)\n                ]);\n            }\n            return blockInfo;\n        });\n        _Blockchain_getTransactionLogOutput.set(this, (hash, receipt, blockNumber, timestamp, error) => {\n            let str = `${os_1.EOL}  Transaction: ${utils_1.Data.from(hash)}${os_1.EOL}`;\n            const contractAddress = receipt.contractAddress;\n            if (contractAddress != null) {\n                str += `  Contract created: ${ethereum_address_1.Address.from(contractAddress)}${os_1.EOL}`;\n            }\n            str += `  Gas usage: ${utils_1.Quantity.toNumber(receipt.raw[1])}\n  Block number: ${blockNumber.toNumber()}\n  Block time: ${timestamp}${os_1.EOL}`;\n            if (error) {\n                str += `  Runtime error: ${error.data.message}${os_1.EOL}`;\n                if (error.data.reason) {\n                    str += `  Revert reason: ${error.data.reason}${os_1.EOL}`;\n                }\n            }\n            return str;\n        });\n        _Blockchain_handleNewBlockData.set(this, async (blockData) => {\n            __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(() => {\n                const saveBlockProm = __classPrivateFieldGet(this, _Blockchain_saveNewBlock, \"f\").call(this, blockData);\n                saveBlockProm.then(__classPrivateFieldGet(this, _Blockchain_emitNewBlock, \"f\"));\n                // blockBeingSavedPromise should await the block being _saved_, but doesn't\n                // need to await the block being emitted.\n                return saveBlockProm;\n            }), \"f\");\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        });\n        _Blockchain_readyNextBlock.set(this, (previousBlock, timestamp) => {\n            const previousHeader = previousBlock.header;\n            const previousNumber = previousHeader.number.toBigInt() || 0n;\n            const minerOptions = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner;\n            if (timestamp == null) {\n                timestamp = __classPrivateFieldGet(this, _Blockchain_adjustedTime, \"f\").call(this, previousHeader.timestamp);\n            }\n            return new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from(previousNumber + 1n), previousBlock.hash(), this.coinbase, minerOptions.blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, previousHeader.totalDifficulty, this.getMixHash(previousBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(previousBlock));\n        });\n        this.isStarted = () => {\n            return __classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.started;\n        };\n        this.mine = async (maxTransactions, onlyOneBlock = false, timestamp) => {\n            const nextBlock = __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\").call(this, this.blocks.latest, timestamp);\n            const transactions = await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").mine(nextBlock, maxTransactions, onlyOneBlock);\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n            if (__classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement !== \"clock\") {\n                // if block time is incremental, adjustments should only apply once,\n                // otherwise they accumulate with each block.\n                __classPrivateFieldSet(this, _Blockchain_timeAdjustment, 0, \"f\");\n            }\n            else if (timestamp !== undefined) {\n                // when miner.timestampIncrement is a number, the previous block timestamp\n                // is used as a reference for the next block, so this call is not\n                // required.\n                this.setTimeDiff(timestamp * 1000);\n            }\n            return {\n                transactions,\n                blockNumber: nextBlock.header.number\n            };\n        };\n        _Blockchain_isPaused.set(this, () => {\n            return (__classPrivateFieldGet(this, _Blockchain_state, \"f\") & Status.paused) !== 0;\n        });\n        this.createVmFromStateTrie = async (stateTrie, allowUnlimitedContractSize, activatePrecompile, common) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            // ethereumjs-vm wants to \"copy\" the blockchain when `vm.copy` is called.\n            blockchain.copy = () => {\n                return blockchain;\n            };\n            common = common || this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: stateTrie,\n                    prefixCodeHashes: false\n                })\n                : new statemanager_1.DefaultStateManager({ trie: stateTrie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({ common, allowUnlimitedContractSize, eei });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            if (activatePrecompile) {\n                await (0, precompiles_1.activatePrecompiles)(vm.eei);\n                if (common.isActivatedEIP(2537)) {\n                    // BLS12-381 curve, not yet included in any supported hardforks\n                    // but probably will be in the Shanghai hardfork\n                    // TODO: remove above comment once Shanghai is supported!\n                    await mclInitPromise; // ensure that mcl is initialized!\n                }\n            }\n            // skip `vm.init`, since we don't use any of it\n            vm._isInitialized = true;\n            return vm;\n        };\n        _Blockchain_commitAccounts.set(this, (accounts) => {\n            return Promise.all(accounts.map(account => this.trie.put(account.address.toBuffer(), account.serialize())));\n        });\n        _Blockchain_initializeGenesisBlock.set(this, async (timestamp, blockGasLimit, initialAccounts) => {\n            if (this.fallback != null) {\n                const { block: fallbackBlock } = this.fallback;\n                const { miner: minerOptions } = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n                // commit accounts, but for forking.\n                const stateManager = this.vm.stateManager;\n                await stateManager.checkpoint();\n                initialAccounts.forEach(account => {\n                    this.vm.eei.putAccount(account.address, account);\n                });\n                await stateManager.commit();\n                // create the genesis block\n                let baseFeePerGas;\n                if (this.common.isActivatedEIP(1559)) {\n                    if (fallbackBlock.header.baseFeePerGas === undefined) {\n                        baseFeePerGas = ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS;\n                    }\n                    else {\n                        baseFeePerGas = fallbackBlock.header.baseFeePerGas.toBigInt();\n                    }\n                }\n                const genesis = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from(fallbackBlock.header.number.toBigInt() + 1n), fallbackBlock.hash(), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, fallbackBlock.header.totalDifficulty, this.getMixHash(fallbackBlock.hash().toBuffer()), baseFeePerGas);\n                // store the genesis block in the database\n                const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, minerOptions.extraData, [], new Map());\n                const hash = block.hash();\n                return this.blocks\n                    .putBlock(block.header.number.toBuffer(), hash, serialized)\n                    .then(_ => ({\n                    block,\n                    blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n                }));\n            }\n            await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n            // README: block `0` is weird in that a `0` _should_ be hashed as `[]`,\n            // instead of `[0]`, so we set it to `Quantity.Empty` instead of\n            // `Quantity.Zero` here. A few lines down in this function we swap\n            // this `Quantity.Empty` for `Quantity.Zero`. This is all so we don't\n            // have to have a \"treat empty as 0` check in every function that uses the\n            // \"latest\" block (which this genesis block will be for brief moment).\n            const rawBlockNumber = utils_1.Quantity.Empty;\n            // create the genesis block\n            const baseFeePerGas = this.common.isActivatedEIP(1559)\n                ? ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS\n                : undefined;\n            const genesis = new ethereum_block_1.RuntimeBlock(rawBlockNumber, utils_1.Data.from(utils_1.BUFFER_32_ZERO), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, utils_1.Quantity.Zero, // we start the totalDifficulty at 0\n            // we use the initial trie root as the genesis block's mixHash as it\n            // is deterministic based on initial wallet conditions\n            this.isPostMerge ? (0, utils_1.keccak)(this.trie.root()) : utils_1.BUFFER_32_ZERO, baseFeePerGas);\n            // store the genesis block in the database\n            const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.extraData, [], new Map());\n            // README: set the block number to an actual 0 now.\n            block.header.number = utils_1.Quantity.Zero;\n            const hash = block.hash();\n            return this.blocks\n                .putBlock(block.header.number.toBuffer(), hash, serialized)\n                .then(_ => ({\n                block,\n                blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n            }));\n        });\n        /**\n         * The number of milliseconds time should be adjusted by when computing the\n         * \"time\" for a block.\n         */\n        _Blockchain_timeAdjustment.set(this, 0);\n        /**\n         * Returns the timestamp, adjusted by the timeAdjustment offset, in seconds.\n         * @param precedingTimestamp - the timestamp of the block to be used as the\n         * time source if `timestampIncrement` is not \"clock\".\n         */\n        _Blockchain_adjustedTime.set(this, (precedingTimestamp) => {\n            const timeAdjustment = __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\");\n            const timestampIncrement = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement;\n            if (timestampIncrement === \"clock\") {\n                return Math.floor((Date.now() + timeAdjustment) / 1000);\n            }\n            else {\n                return (precedingTimestamp.toNumber() +\n                    Math.floor(timeAdjustment / 1000) +\n                    timestampIncrement.toNumber());\n            }\n        });\n        _Blockchain_deleteBlockData.set(this, async (blocksToDelete, newLatestBlockNumber) => {\n            // if we are forking we need to make sure we clean up the forking related\n            // metadata that isn't stored in the trie\n            if (\"revertMetaData\" in this.trie) {\n                await this.trie.revertMetaData(blocksToDelete[blocksToDelete.length - 1].header.number, blocksToDelete[0].header.number);\n            }\n            await __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const { blocks, transactions, transactionReceipts, blockLogs } = this;\n                // point to the new \"latest\" again\n                blocks.updateLatestIndex(newLatestBlockNumber);\n                // clean up old blocks\n                blocksToDelete.forEach(block => {\n                    block.getTransactions().forEach(tx => {\n                        const txHash = tx.hash.toBuffer();\n                        transactions.del(txHash);\n                        transactionReceipts.del(txHash);\n                    });\n                    const blockNum = block.header.number.toBuffer();\n                    blocks.del(blockNum);\n                    blocks.del(block.hash().toBuffer());\n                    blockLogs.del(blockNum);\n                });\n            });\n        });\n        // TODO(stability): this.#snapshots is a potential unbound memory suck. Caller\n        // could call `evm_snapshot` over and over to grow the snapshot stack\n        // indefinitely. `this.#snapshots.blocks` is even worse. To solve this we\n        // might need to store in the db. An unlikely real problem, but possible.\n        _Blockchain_snapshots.set(this, {\n            snaps: [],\n            blocks: null,\n            unsubscribeFromBlocks: null\n        });\n        _Blockchain_traceTransaction.set(this, async (transaction, trie, newBlock, options, keys, contractAddress) => {\n            let currentDepth = -1;\n            const storageStack = [];\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            const common = this.fallback\n                ? this.fallback.getCommonForBlockNumber(this.common, BigInt(newBlock.header.number.toString()))\n                : this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: trie,\n                    prefixCodeHashes: false\n                })\n                : new statemanager_1.DefaultStateManager({ trie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({\n                common,\n                allowUnlimitedContractSize: __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.allowUnlimitedContractSize,\n                eei\n            });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            const storage = {};\n            let gas = 0n;\n            const structLogs = [];\n            const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n            const transactionEventContext = {};\n            const stepListener = async (event, next) => {\n                // See these docs:\n                // https://github.com/ethereum/go-ethereum/wiki/Management-APIs\n                if (__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\")) {\n                    this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(transactionEventContext, event));\n                }\n                const gasLeft = event.gasLeft;\n                const totalGasUsedAfterThisStep = transaction.gasLimit - gasLeft;\n                const gasUsedPreviousStep = totalGasUsedAfterThisStep - gas;\n                gas += gasUsedPreviousStep;\n                const memory = [];\n                if (options.disableMemory !== true) {\n                    // We get the memory as one large array.\n                    // Let's cut it up into 32 byte chunks as required by the spec.\n                    let index = 0;\n                    while (index < event.memory.length) {\n                        const slice = event.memory.slice(index, index + 32);\n                        memory.push(TraceData.from(Buffer.from(slice)));\n                        index += 32;\n                    }\n                }\n                const stack = [];\n                if (options.disableStack !== true) {\n                    for (const stackItem of event.stack) {\n                        stack.push(TraceData.from(utils_1.Quantity.toBuffer(stackItem)));\n                    }\n                }\n                const structLog = {\n                    depth: event.depth + 1,\n                    error: \"\",\n                    gas: utils_1.Quantity.from(gasLeft),\n                    gasCost: 0,\n                    memory,\n                    op: event.opcode.name,\n                    pc: event.pc,\n                    stack,\n                    storage: null\n                };\n                // The gas difference calculated for each step is indicative of gas consumed in\n                // the previous step. Gas consumption in the final step will always be zero.\n                if (structLogs.length) {\n                    structLogs[structLogs.length - 1].gasCost = Number(gasUsedPreviousStep);\n                }\n                if (options.disableStorage === true) {\n                    // Add the struct log as is - nothing more to do.\n                    structLogs.push(structLog);\n                    next();\n                }\n                else {\n                    const { depth: eventDepth } = event;\n                    if (currentDepth > eventDepth) {\n                        storageStack.pop();\n                    }\n                    else if (currentDepth < eventDepth) {\n                        storageStack.push(new ethereum_utils_1.TraceStorageMap());\n                    }\n                    currentDepth = eventDepth;\n                    switch (event.opcode.name) {\n                        case \"SSTORE\": {\n                            const key = stack[stack.length - 1];\n                            const value = stack[stack.length - 2];\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            // Tell vm to move on to the next instruction. See below.\n                            structLogs.push(structLog);\n                            next();\n                            // assign after callback because this storage change actually takes\n                            // effect _after_ this opcode executes\n                            storageStack[eventDepth].set(key, value);\n                            break;\n                        }\n                        case \"SLOAD\": {\n                            const key = stack[stack.length - 1];\n                            const result = await vm.stateManager.getContractStorage(event.address, key.toBuffer());\n                            const value = TraceData.from(result);\n                            storageStack[eventDepth].set(key, value);\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                            break;\n                        }\n                        default:\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                    }\n                }\n            };\n            // Don't even let the vm try to flush the block's _cache to the stateTrie.\n            // When forking some of the data that the traced function may request will\n            // exist only on the main chain. Because we pretty much lie to the VM by\n            // telling it we DO have data in our Trie, when we really don't, it gets\n            // lost during the commit phase when it traverses the \"borrowed\" datum's\n            // trie (as it may not have a valid root). Because this is a trace, and we\n            // don't need to commit the data, duck punching the `flush` method (the\n            // simplest method I could find) is fine.\n            // Remove this and you may see the infamous\n            // `Uncaught TypeError: Cannot read property 'pop' of undefined` error!\n            vm.stateManager._cache.flush = async () => { };\n            // Process the block without committing the data.\n            // The vmerr key on the result appears to be removed.\n            // The previous implementation had specific error handling.\n            // It's possible we've removed handling specific cases in this implementation.\n            // e.g., the previous incantation of RuntimeError\n            await vm.stateManager.checkpoint();\n            try {\n                for (let i = 0, l = newBlock.transactions.length; i < l; i++) {\n                    const tx = newBlock.transactions[i];\n                    if (tx === transaction) {\n                        if (keys && contractAddress) {\n                            const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n                            await Promise.all(keys.map(async (key) => {\n                                // get the raw key using the hashed key\n                                const rawKey = await database.storageKeys.get(key);\n                                const result = await vm.stateManager.getContractStorage(new ethereum_address_1.Address(contractAddress), rawKey);\n                                storage[utils_1.Data.toString(key, key.length)] = {\n                                    key: utils_1.Data.from(rawKey, rawKey.length),\n                                    value: utils_1.Data.from(result, 32)\n                                };\n                            }));\n                            break;\n                        }\n                        else {\n                            vm.evm.events.on(\"step\", stepListener);\n                            // force the loop to break after running this transaction by setting\n                            // the current iteration past the end\n                            i = l;\n                        }\n                    }\n                    this.emit(\"ganache:vm:tx:before\", {\n                        context: transactionEventContext\n                    });\n                    await vm.runTx({ tx, block: newBlock });\n                    this.emit(\"ganache:vm:tx:after\", {\n                        context: transactionEventContext\n                    });\n                }\n                vm.evm.events.removeListener(\"step\", stepListener);\n            }\n            finally {\n                await vm.stateManager.revert();\n            }\n            // send state results back\n            return {\n                gas: utils_1.Quantity.from(gas),\n                structLogs,\n                returnValue: \"\",\n                storage\n            };\n        });\n        _Blockchain_prepareNextBlock.set(this, (targetBlock, parentBlock, transactionHash) => {\n            // Prepare the \"next\" block with necessary transactions\n            const newBlock = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from((parentBlock.header.number.toBigInt() || 0n) + 1n), parentBlock.hash(), ethereum_address_1.Address.from(parentBlock.header.miner.toString()), parentBlock.header.gasLimit, utils_1.Quantity.Zero, \n            // make sure we use the same timestamp as the target block\n            targetBlock.header.timestamp, this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, parentBlock.header.totalDifficulty, this.getMixHash(parentBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(parentBlock));\n            newBlock.transactions = [];\n            newBlock.uncleHeaders = [];\n            const transactions = targetBlock.getTransactions();\n            for (const tx of transactions) {\n                newBlock.transactions.push(tx.toVmTransaction());\n                // After including the target transaction, that's all we need to do.\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    break;\n                }\n            }\n            return newBlock;\n        });\n        __classPrivateFieldSet(this, _Blockchain_options, options, \"f\");\n        this.fallback = fallback;\n        this.coinbase = coinbase;\n        __classPrivateFieldSet(this, _Blockchain_instamine, !options.miner.blockTime || options.miner.blockTime <= 0, \"f\");\n        __classPrivateFieldSet(this, _Blockchain_database, new database_1.default(options.database, this), \"f\");\n    }\n    async initialize(initialAccounts) {\n        const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        try {\n            let common;\n            if (this.fallback) {\n                await this.fallback.initialize();\n                await database.initialize();\n                common = this.common = this.fallback.common;\n                options.fork.blockNumber = this.fallback.blockNumber.toNumber();\n                options.chain.networkId = Number(common.networkId());\n                options.chain.chainId = Number(common.chainId());\n            }\n            else {\n                await database.initialize();\n                common = this.common = createCommon(options.chain.chainId, options.chain.networkId, options.chain.hardfork);\n            }\n            this.isPostMerge = this.common.gteHardfork(\"merge\");\n            const blocks = (this.blocks = await block_manager_1.default.initialize(this, common, database.blockIndexes, database.blocks));\n            this.blockLogs = new blocklog_manager_1.default(database.blockLogs, this);\n            this.transactions = new transaction_manager_1.default(options.miner, common, this, database.transactions);\n            this.transactionReceipts = new transaction_receipt_manager_1.default(database.transactionReceipts, this);\n            this.accounts = new account_manager_1.default(this);\n            this.storageKeys = database.storageKeys;\n            // if we have a latest block, use it to set up the trie.\n            const { latest } = blocks;\n            {\n                let stateRoot;\n                if (latest) {\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, Promise.resolve({\n                        block: latest,\n                        blockLogs: null\n                    }), \"f\");\n                    ({ stateRoot } = latest.header);\n                }\n                else {\n                    stateRoot = null;\n                }\n                this.trie = makeTrie(this, database.trie, stateRoot);\n            }\n            // create VM and listen to step events\n            this.vm = await this.createVmFromStateTrie(this.trie, options.chain.allowUnlimitedContractSize, true);\n            {\n                // Grab current time once to be used in all references to \"now\", to avoid\n                // any discrepancies. See https://github.com/trufflesuite/ganache/issues/3271\n                const startTime = new Date();\n                // if we don't have a time from the user get one now\n                if (options.chain.time == null)\n                    options.chain.time = startTime;\n                // create first block\n                const timestamp = options.chain.time.getTime();\n                const firstBlockTime = Math.floor(timestamp / 1000);\n                // if we are using clock time we need to record the time offset so\n                // other blocks can have timestamps relative to our initial time.\n                if (options.miner.timestampIncrement === \"clock\") {\n                    __classPrivateFieldSet(this, _Blockchain_timeAdjustment, timestamp - +startTime, \"f\");\n                }\n                // if we don't already have a latest block, create a genesis block!\n                if (!latest) {\n                    if (initialAccounts.length > 0) {\n                        await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n                    }\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_initializeGenesisBlock, \"f\").call(this, firstBlockTime, options.miner.blockGasLimit, initialAccounts), \"f\");\n                    blocks.earliest = blocks.latest =\n                        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(({ block }) => block);\n                }\n            }\n            {\n                // configure and start miner\n                const txPool = this.transactions.transactionPool;\n                const minerOpts = options.miner;\n                const miner = (__classPrivateFieldSet(this, _Blockchain_miner, new miner_1.default(minerOpts, txPool.executables, this.vm, __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\")), \"f\"));\n                //#region re-emit miner events:\n                miner.on(\"ganache:vm:tx:before\", event => {\n                    this.emit(\"ganache:vm:tx:before\", event);\n                });\n                miner.on(\"ganache:vm:tx:step\", event => {\n                    if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                        return;\n                    this.emit(\"ganache:vm:tx:step\", event);\n                });\n                miner.on(\"ganache:vm:tx:after\", event => {\n                    this.emit(\"ganache:vm:tx:after\", event);\n                });\n                miner.on(\"ganache:vm:tx:console.log\", event => {\n                    options.logging.logger.log(...event.logs);\n                    this.emit(\"ganache:vm:tx:console.log\", event);\n                });\n                //#endregion\n                //#region automatic mining\n                const nullResolved = Promise.resolve(null);\n                const mineAll = (maxTransactions, onlyOneBlock) => __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)\n                    ? nullResolved\n                    : this.mine(maxTransactions, onlyOneBlock);\n                if (instamine) {\n                    // insta mining\n                    // whenever the transaction pool is drained mine the txs into blocks\n                    // only one transaction should be added per block\n                    txPool.on(\"drain\", mineAll.bind(null, miner_1.Capacity.Single));\n                }\n                else {\n                    // interval mining\n                    const wait = () => (__classPrivateFieldSet(this, _Blockchain_timer, setTimeout(next, minerOpts.blockTime * 1e3), \"f\"));\n                    // when interval mining, only one block should be mined. the block\n                    // can, however, be filled\n                    const next = () => {\n                        mineAll(miner_1.Capacity.FillBlock, true).then(wait);\n                    };\n                    wait();\n                }\n                //#endregion\n                miner.on(\"block\", __classPrivateFieldGet(this, _Blockchain_handleNewBlockData, \"f\"));\n                this.once(\"stop\").then(() => miner.clearListeners());\n            }\n        }\n        catch (e) {\n            // we failed to start up :-( bail!\n            __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n            // ignore errors while stopping here, since we are already in an\n            // exceptional case\n            await this.stop().catch(_ => { });\n            throw e;\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.started, \"f\");\n        this.emit(\"ready\");\n    }\n    getMixHash(data) {\n        // mixHash is used as an RNG post merge hardfork\n        return this.isPostMerge ? (0, utils_1.keccak)(data) : utils_1.BUFFER_32_ZERO;\n    }\n    pause() {\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") | Status.paused, \"f\");\n    }\n    resume(_threads = 1) {\n        if (!__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Warning: startMining called when miner was already started\");\n            return;\n        }\n        // toggles the `paused` bit\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") ^ Status.paused, \"f\");\n        // if we are instamining mine a block right away\n        if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return this.mine(miner_1.Capacity.FillBlock);\n        }\n    }\n    /**\n     * @param milliseconds - the number of milliseconds to adjust the time by.\n     * Negative numbers are treated as 0.\n     * @returns the total time offset *in milliseconds*\n     */\n    increaseTime(milliseconds) {\n        if (milliseconds < 0) {\n            milliseconds = 0;\n        }\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\") + milliseconds, \"f\"));\n    }\n    /**\n     * Adjusts the internal time adjustment such that the provided time is considered the \"current\" time.\n     * @param newTime - the time (in milliseconds) that will be considered the \"current\" time\n     * @returns the total time offset *in milliseconds*\n     */\n    setTimeDiff(newTime) {\n        // when using clock time use Date.now(), otherwise use the timestamp of the\n        // current latest block\n        const currentTime = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement === \"clock\"\n            ? Date.now()\n            : this.blocks.latest.header.timestamp.toNumber() * 1000;\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, newTime - currentTime, \"f\"));\n    }\n    snapshot() {\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        // Subscription ids are based on the number of active snapshots. Weird? Yes.\n        // But it's the way it's been since the beginning so it just hasn't been\n        // changed. Feel free to change it so ids are unique if it bothers you\n        // enough.\n        const id = snaps.push({\n            block: this.blocks.latest,\n            timeAdjustment: __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\")\n        });\n        // start listening to new blocks if this is the first snapshot\n        if (id === 1) {\n            snapshots.unsubscribeFromBlocks = this.on(\"block\", block => {\n                snapshots.blocks = {\n                    current: block.hash().toBuffer(),\n                    next: snapshots.blocks\n                };\n            });\n        }\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Saved snapshot #\" + id);\n        return id;\n    }\n    async revert(snapshotId) {\n        if (snapshotId.isNull()) {\n            throw new Error(\"invalid snapshotId\");\n        }\n        const rawValue = snapshotId.toBigInt();\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Reverting to snapshot #\" + snapshotId);\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        const snapshotIndex = Number(rawValue - 1n);\n        const snapshot = snaps[snapshotIndex];\n        if (!snapshot) {\n            return false;\n        }\n        // pause processing new transactions...\n        await this.transactions.pause();\n        // then pause the miner, too.\n        await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause();\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        // Pending transactions are always removed when you revert, even if they\n        // were present before the snapshot was created. Ideally, we'd remove only\n        // the new transactions.. but we'll leave that for another day.\n        this.transactions.clear();\n        const blocks = this.blocks;\n        const currentHash = blocks.latest.hash().toBuffer();\n        const snapshotBlock = snapshot.block;\n        const snapshotHeader = snapshotBlock.header;\n        const snapshotHash = snapshotBlock.hash().toBuffer();\n        // remove this and all stored snapshots after this snapshot\n        snaps.splice(snapshotIndex);\n        // if there are no more listeners, stop listening to new blocks\n        if (snaps.length === 0) {\n            snapshots.unsubscribeFromBlocks();\n        }\n        // if the snapshot's hash is different than the latest block's hash we've\n        // got new blocks to clean up.\n        if (!currentHash.equals(snapshotHash)) {\n            // if we've added blocks since we snapshotted we need to delete them and put\n            // some things back the way they were.\n            const blockPromises = [];\n            let blockList = snapshots.blocks;\n            while (blockList !== null) {\n                if (blockList.current.equals(snapshotHash))\n                    break;\n                blockPromises.push(blocks.getByHash(blockList.current));\n                blockList = blockList.next;\n            }\n            snapshots.blocks = blockList;\n            const blockData = await Promise.all(blockPromises);\n            await __classPrivateFieldGet(this, _Blockchain_deleteBlockData, \"f\").call(this, blockData, snapshotHeader.number.toBuffer());\n            setStateRootSync(this.vm.stateManager, snapshotHeader.stateRoot.toBuffer());\n            blocks.latest = snapshotBlock;\n        }\n        // put our time adjustment back\n        __classPrivateFieldSet(this, _Blockchain_timeAdjustment, snapshot.timeAdjustment, \"f\");\n        // resume mining\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").resume();\n        // resume processing transactions\n        this.transactions.resume();\n        return true;\n    }\n    async queueTransaction(transaction, secretKey) {\n        // NOTE: this.transactions.add *must* be awaited before returning the\n        // `transaction.hash()`, as the transactionPool may change the transaction\n        // (and thus its hash!)\n        // It may also throw Errors that must be returned to the caller.\n        const isExecutable = (await this.transactions.add(transaction, secretKey)) === true;\n        if (isExecutable) {\n            process.nextTick(this.emit.bind(this), \"pendingTransaction\", transaction);\n        }\n        const hash = transaction.hash;\n        if (__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this) || !__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return hash;\n        }\n        else {\n            if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\") && __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.instamine === \"eager\") {\n                // in eager instamine mode we must wait for the transaction to be saved\n                // before we can return the hash\n                const { status, error } = await transaction.once(\"finalized\");\n                // in eager instamine mode we must throw on all rejected transaction\n                // errors. We must also throw on `confirmed` transactions when\n                // vmErrorsOnRPCResponse is enabled.\n                if (error &&\n                    (status === \"rejected\" || __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.vmErrorsOnRPCResponse))\n                    throw error;\n            }\n            return hash;\n        }\n    }\n    async simulateTransaction(transaction, parentBlock, overrides) {\n        let result;\n        const data = transaction.data;\n        let gasLimit = transaction.gas.toBigInt();\n        // subtract out the transaction's base fee from the gas limit before\n        // simulating the tx, because `runCall` doesn't account for raw gas costs.\n        const hasToAddress = transaction.to != null;\n        const to = hasToAddress ? new ethereum_address_1.Address(transaction.to.toBuffer()) : null;\n        const common = this.fallback\n            ? this.fallback.getCommonForBlockNumber(this.common, BigInt(transaction.block.header.number.toString()))\n            : this.common;\n        const gasLeft = gasLimit - (0, ethereum_transaction_1.calculateIntrinsicGas)(data, hasToAddress, common);\n        const transactionContext = {};\n        this.emit(\"ganache:vm:tx:before\", {\n            context: transactionContext\n        });\n        if (gasLeft >= 0n) {\n            const stateTrie = this.trie.copy(false);\n            stateTrie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const vm = await this.createVmFromStateTrie(stateTrie, options.chain.allowUnlimitedContractSize, false, // precompiles have already been initialized in the stateTrie\n            common);\n            // take a checkpoint so the `runCall` never writes to the trie. We don't\n            // commit/revert later because this stateTrie is ephemeral anyway.\n            await vm.eei.checkpoint();\n            vm.evm.events.on(\"step\", (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs) {\n                    options.logging.logger.log(...logs);\n                    this.emit(\"ganache:vm:tx:console.log\", {\n                        context: transactionContext,\n                        logs\n                    });\n                }\n                if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                    return;\n                const ganacheStepEvent = (0, provider_events_1.makeStepEvent)(transactionContext, event);\n                this.emit(\"ganache:vm:tx:step\", ganacheStepEvent);\n            });\n            const caller = transaction.from.toBuffer();\n            const callerAddress = new ethereum_address_1.Address(caller);\n            if (common.isActivatedEIP(2929)) {\n                const eei = vm.eei;\n                // handle Berlin hardfork warm storage reads\n                (0, precompiles_1.warmPrecompiles)(eei);\n                eei.addWarmedAddress(caller);\n                if (to)\n                    eei.addWarmedAddress(to.buf);\n            }\n            // If there are any overrides requested for eth_call, apply\n            // them now before running the simulation.\n            await (0, run_call_1.applySimulationOverrides)(stateTrie, vm, overrides);\n            // we need to update the balance and nonce of the sender _before_\n            // we run this transaction so that things that rely on these values\n            // are correct (like contract creation!).\n            const fromAccount = await vm.eei.getAccount(callerAddress);\n            fromAccount.nonce += 1n;\n            const txCost = gasLimit * transaction.gasPrice.toBigInt();\n            const startBalance = fromAccount.balance;\n            // TODO: should we throw if insufficient funds?\n            fromAccount.balance = txCost > startBalance ? 0n : startBalance - txCost;\n            await vm.eei.putAccount(callerAddress, fromAccount);\n            // finally, run the call\n            result = await vm.evm.runCall({\n                caller: callerAddress,\n                data: transaction.data && transaction.data.toBuffer(),\n                gasPrice: transaction.gasPrice.toBigInt(),\n                gasLimit: gasLeft,\n                to,\n                value: transaction.value == null ? 0n : transaction.value.toBigInt(),\n                block: transaction.block\n            });\n        }\n        else {\n            result = {\n                execResult: {\n                    runState: { programCounter: 0 },\n                    exceptionError: new evm_1.EvmError(evm_1.EvmErrorMessage.OUT_OF_GAS),\n                    returnValue: utils_1.BUFFER_EMPTY\n                }\n            };\n        }\n        this.emit(\"ganache:vm:tx:after\", {\n            context: transactionContext\n        });\n        if (result.execResult.exceptionError) {\n            throw new ethereum_utils_1.CallError(result);\n        }\n        else {\n            return utils_1.Data.from(result.execResult.returnValue || \"0x\");\n        }\n    }\n    /**\n     * traceTransaction\n     *\n     * Run a previously-run transaction in the same state in which it occurred at the time it was run.\n     * This will return the vm-level trace output for debugging purposes.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Rerun every transaction in that block prior to and including the requested transaction\n     *  4. Send trace results back.\n     *\n     * @param transactionHash -\n     * @param options -\n     */\n    async traceTransaction(transactionHash, options) {\n        const transactionHashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // #1 - get block via transaction object\n        const transaction = await this.transactions.get(transactionHashBuffer);\n        if (!transaction) {\n            throw new Error(\"Unknown transaction \" + transactionHash);\n        }\n        const targetBlock = await this.blocks.getByHash(transaction.blockHash.toBuffer());\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, transactionHashBuffer);\n        // #2 - Set state root of original block\n        //\n        // TODO: Forking needs the forked block number passed during this step:\n        // https://github.com/trufflesuite/ganache/blob/develop/lib/blockchain_double.js#L917\n        const trie = this.trie.copy();\n        trie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n        // #3 - Rerun every transaction in block prior to and including the requested transaction\n        const { gas, structLogs, returnValue, storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, newBlock.transactions[transaction.index.toNumber()], trie, newBlock, options);\n        // #4 - Send results back\n        return { gas, structLogs, returnValue, storage };\n    }\n    /**\n     * storageRangeAt\n     *\n     * Returns a contract's storage given a starting key and max number of\n     * entries to return.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Use contract address storage trie to get the storage keys from the transaction\n     *  4. Sort and filter storage keys using the startKey and maxResult\n     *  5. Rerun every transaction in that block prior to and including the requested transaction\n     *  6. Send storage results back\n     *\n     * @param blockHash -\n     * @param txIndex -\n     * @param contractAddress -\n     * @param startKey -\n     * @param maxResult -\n     */\n    async storageRangeAt(blockHash, txIndex, contractAddress, startKey, maxResult) {\n        // #1 - get block information\n        const targetBlock = await this.blocks.getByHash(blockHash);\n        // get transaction using txIndex\n        const transactions = targetBlock.getTransactions();\n        const transaction = transactions[txIndex];\n        if (!transaction) {\n            throw new Error(`transaction index ${txIndex} is out of range for block ${blockHash}`);\n        }\n        // #2 - set state root of block\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const trie = makeTrie(this, __classPrivateFieldGet(this, _Blockchain_database, \"f\").trie, parentBlock.header.stateRoot);\n        // get the contractAddress account storage trie\n        const contractAddressBuffer = ethereum_address_1.Address.from(contractAddress).toBuffer();\n        const addressData = await trie.get(contractAddressBuffer);\n        if (!addressData) {\n            throw new Error(`account ${contractAddress} doesn't exist`);\n        }\n        // #3 - use the contractAddress storage trie to get relevant hashed keys\n        const getStorageKeys = () => {\n            const storageTrie = trie.copy(false);\n            // An address's stateRoot is stored in the 3rd rlp entry\n            storageTrie.setContext((0, rlp_1.decode)(addressData)[2], contractAddressBuffer, parentBlock.header.number);\n            return new Promise((resolve, reject) => {\n                const startKeyBuffer = utils_1.Data.toBuffer(startKey);\n                const compare = (a, b) => a.compare(b) < 0;\n                const keys = [];\n                const handleData = ({ key }) => {\n                    // ignore anything that comes before our starting point\n                    if (startKeyBuffer.compare(key) > 0)\n                        return;\n                    // #4 - sort and filter keys\n                    // insert the key exactly where it needs to go in the array\n                    const position = (0, utils_1.findInsertPosition)(keys, key, compare);\n                    // ignore if the value couldn't possibly be relevant\n                    if (position > maxResult)\n                        return;\n                    keys.splice(position, 0, key);\n                };\n                const handleEnd = () => {\n                    if (keys.length > maxResult) {\n                        // we collected too much data, so we've got to trim it a bit\n                        resolve({\n                            // only take the maximum number of entries requested\n                            keys: keys.slice(0, maxResult),\n                            // assign nextKey\n                            nextKey: utils_1.Data.from(keys[maxResult])\n                        });\n                    }\n                    else {\n                        resolve({\n                            keys,\n                            nextKey: null\n                        });\n                    }\n                };\n                const rs = storageTrie.createReadStream();\n                rs.on(\"data\", handleData).on(\"error\", reject).on(\"end\", handleEnd);\n            });\n        };\n        const { keys, nextKey } = await getStorageKeys();\n        // #5 -  rerun every transaction in that block prior to and including the requested transaction\n        // prepare block to be run in traceTransaction\n        const transactionHashBuffer = transaction.hash.toBuffer();\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, transactionHashBuffer);\n        // get storage data given a set of keys\n        const options = {\n            disableMemory: true,\n            disableStack: true,\n            disableStorage: false\n        };\n        const { storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, newBlock.transactions[transaction.index.toNumber()], trie, newBlock, options, keys, contractAddressBuffer);\n        // #6 - send back results\n        return {\n            storage,\n            nextKey\n        };\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Blockchain_emitStepEvent, enable, \"f\");\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").toggleStepEvent(enable);\n    }\n    /**\n     * Gracefully shuts down the blockchain service and all of its dependencies.\n     */\n    async stop() {\n        // If the blockchain is still initializing we don't want to shut down\n        // yet because there may still be database calls in flight. Leveldb may\n        // cause a segfault due to a race condition between a db write and the close\n        // call.\n        if (__classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.starting) {\n            await this.once(\"ready\");\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n        // stop the polling miner, if necessary\n        clearTimeout(__classPrivateFieldGet(this, _Blockchain_timer, \"f\"));\n        // clean up listeners\n        if (this.vm) {\n            this.vm.events.removeAllListeners();\n            this.vm.evm && this.vm.evm.events.removeAllListeners();\n        }\n        // pause processing new transactions...\n        this.transactions && (await this.transactions.pause());\n        // then pause the miner, too.\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause());\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        this.fallback && (await this.fallback.close());\n        await this.emit(\"stop\");\n        __classPrivateFieldGet(this, _Blockchain_database, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_database, \"f\").close());\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopped, \"f\");\n    }\n}\nexports.default = Blockchain;\n_Blockchain_state = new WeakMap(), _Blockchain_miner = new WeakMap(), _Blockchain_blockBeingSavedPromise = new WeakMap(), _Blockchain_timer = new WeakMap(), _Blockchain_emitStepEvent = new WeakMap(), _Blockchain_database = new WeakMap(), _Blockchain_options = new WeakMap(), _Blockchain_instamine = new WeakMap(), _Blockchain_saveNewBlock = new WeakMap(), _Blockchain_emitNewBlock = new WeakMap(), _Blockchain_getTransactionLogOutput = new WeakMap(), _Blockchain_handleNewBlockData = new WeakMap(), _Blockchain_readyNextBlock = new WeakMap(), _Blockchain_isPaused = new WeakMap(), _Blockchain_commitAccounts = new WeakMap(), _Blockchain_initializeGenesisBlock = new WeakMap(), _Blockchain_timeAdjustment = new WeakMap(), _Blockchain_adjustedTime = new WeakMap(), _Blockchain_deleteBlockData = new WeakMap(), _Blockchain_snapshots = new WeakMap(), _Blockchain_traceTransaction = new WeakMap(), _Blockchain_prepareNextBlock = new WeakMap();\n//# sourceMappingURL=blockchain.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Connector_provider, _Connector_handle;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst provider_1 = require(\"./provider\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bufferify_1 = require(\"./helpers/bufferify\");\nfunction isHttp(connection) {\n    return (connection.constructor.name === \"uWS.HttpRequest\" ||\n        connection.constructor.name === \"HttpRequest\");\n}\nclass Connector extends emittery_1.default {\n    constructor(providerOptions = null, executor) {\n        super();\n        _Connector_provider.set(this, void 0);\n        this.BUFFERIFY_THRESHOLD = Connector.BUFFERIFY_THRESHOLD;\n        _Connector_handle.set(this, (payload, connection) => {\n            const method = payload.method;\n            if (method === \"eth_subscribe\") {\n                if (isHttp(connection)) {\n                    return Promise.reject(new ethereum_utils_1.CodedError(\"notifications not supported\", utils_1.JsonRpcErrorCode.METHOD_NOT_SUPPORTED));\n                }\n            }\n            const params = payload.params;\n            return __classPrivateFieldGet(this, _Connector_provider, \"f\")._requestRaw({ method, params });\n        });\n        __classPrivateFieldSet(this, _Connector_provider, new provider_1.EthereumProvider(providerOptions, executor), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\");\n    }\n    async connect() {\n        await __classPrivateFieldGet(this, _Connector_provider, \"f\").initialize();\n        // no need to wait for #provider.once(\"connect\") as the initialize()\n        // promise has already accounted for that after the promise is resolved\n        await this.emit(\"ready\");\n    }\n    parse(message) {\n        try {\n            return JSON.parse(message);\n        }\n        catch (e) {\n            throw new ethereum_utils_1.CodedError(e.message, utils_1.JsonRpcErrorCode.PARSE_ERROR);\n        }\n    }\n    handle(payload, connection) {\n        if (Array.isArray(payload)) {\n            // handle batch transactions\n            const promises = payload.map(payload => __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection)\n                .then(({ value }) => value)\n                .catch(e => e));\n            return Promise.resolve({ value: Promise.all(promises) });\n        }\n        else {\n            return __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection);\n        }\n    }\n    format(results, payload) {\n        if (Array.isArray(payload)) {\n            return JSON.stringify(payload.map((payload, i) => {\n                const result = results[i];\n                if (result instanceof Error) {\n                    return (0, utils_1.makeError)(payload.id, result);\n                }\n                else {\n                    return (0, utils_1.makeResponse)(payload.id, result);\n                }\n            }));\n        }\n        else {\n            const json = (0, utils_1.makeResponse)(payload.id, results);\n            if (payload.method === \"debug_traceTransaction\" &&\n                typeof results === \"object\" &&\n                Array.isArray(results.structLogs) &&\n                // for \"large\" debug_traceTransaction results we convert to individual\n                // parts of the response to Buffers, yielded via a Generator function,\n                // instead of using JSON.stringify. This is necessary because we:\n                //   * avoid V8's maximum string length limit of 1GB\n                //   * avoid and the max Buffer length limit of ~2GB (on 64bit\n                //     architectures).\n                //   * avoid heap allocation failures due to trying to hold too much\n                //     data in memory (which can happen if we don't immediately consume\n                //     the `format` result -- by buffering everything into one array,\n                //     for example)\n                //\n                // We don't do this for everything because the bufferfication is so very\n                // very slow.\n                //\n                // TODO(perf): an even better way of solving this would be to convert\n                // `debug_traceTransaction` to a generator that yields chunks (of\n                // Buffer) as soon as they're available. We could then `write` these\n                // individual chunks immediately and our memory use would stay\n                // relatively low and constant.\n                results.structLogs.length > this.BUFFERIFY_THRESHOLD) {\n                return (0, bufferify_1.bufferify)(json, \"\");\n            }\n            else {\n                return JSON.stringify(json);\n            }\n        }\n    }\n    formatError(error, payload) {\n        const json = (0, utils_1.makeError)(payload && payload.id ? payload.id : null, error);\n        return JSON.stringify(json);\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\").disconnect();\n    }\n}\nexports.Connector = Connector;\n_Connector_provider = new WeakMap(), _Connector_handle = new WeakMap();\nConnector.BUFFERIFY_THRESHOLD = 100000;\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AccountManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass AccountManager {\n    constructor(blockchain) {\n        _AccountManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _AccountManager_blockchain, blockchain, \"f\");\n    }\n    async get(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const raw = await this.getRaw(address, blockNumber);\n        if (raw == null)\n            return null;\n        return ethereum_utils_1.Account.fromBuffer(raw);\n    }\n    async getRaw(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), null, number);\n        // get the account from the trie\n        return await trieCopy.get(address.toBuffer());\n    }\n    async getStorageAt(address, key, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), address.toBuffer(), number);\n        // get the account from the trie\n        return await trieCopy.get(key);\n    }\n    async getNonce(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [nonce] = (0, rlp_1.decode)(data);\n        return nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce);\n    }\n    async getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [, balance] = (0, rlp_1.decode)(data);\n        return balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance);\n    }\n    async getNonceAndBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return { nonce: utils_1.Quantity.Zero, balance: utils_1.Quantity.Zero };\n        const [nonce, balance] = (0, rlp_1.decode)(data);\n        return {\n            nonce: nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce),\n            balance: balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance)\n        };\n    }\n    async getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Data.Empty;\n        const [, , , codeHash] = (0, rlp_1.decode)(data);\n        if (codeHash.equals(util_1.KECCAK256_NULL))\n            return utils_1.Data.Empty;\n        else\n            return __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\").trie.database().get(codeHash).then(utils_1.Data.from);\n    }\n}\nexports.default = AccountManager;\n_AccountManager_blockchain = new WeakMap();\n//# sourceMappingURL=account-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockManager_blockchain, _BlockManager_common, _BlockManager_blockIndexes;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst LATEST_INDEX_KEY = utils_1.BUFFER_ZERO;\nconst NOTFOUND = 404;\nconst EMPTY_BUFFER = Buffer.from([]);\nclass BlockManager extends manager_1.default {\n    constructor(blockchain, common, blockIndexes, base) {\n        super(base, ethereum_block_1.Block, common);\n        _BlockManager_blockchain.set(this, void 0);\n        _BlockManager_common.set(this, void 0);\n        _BlockManager_blockIndexes.set(this, void 0);\n        this.fromFallback = async (tagOrBlockNumber) => {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            let blockNumber;\n            if (typeof tagOrBlockNumber === \"string\") {\n                blockNumber = tagOrBlockNumber;\n            }\n            else if (!fallback.isValidForkBlockNumber(tagOrBlockNumber)) {\n                // don't get the block if the requested block is _after_ our fallback's\n                // blocknumber because it doesn't exist in our local chain.\n                return null;\n            }\n            else {\n                blockNumber = tagOrBlockNumber.toString();\n            }\n            const json = await fallback.request(\"eth_getBlockByNumber\", [\n                blockNumber,\n                true\n            ]);\n            if (json == null) {\n                return null;\n            }\n            else {\n                const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), BigInt(json.number));\n                return BlockManager.rawFromJSON(json, common);\n            }\n        };\n        __classPrivateFieldSet(this, _BlockManager_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_common, common, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_blockIndexes, blockIndexes, \"f\");\n    }\n    static async initialize(blockchain, common, blockIndexes, base) {\n        const bm = new BlockManager(blockchain, common, blockIndexes, base);\n        await bm.updateTaggedBlocks();\n        return bm;\n    }\n    static rawFromJSON(json, common) {\n        const header = [\n            utils_1.Data.toBuffer(json.parentHash),\n            utils_1.Data.toBuffer(json.sha3Uncles),\n            ethereum_address_1.Address.from(json.miner).toBuffer(),\n            utils_1.Data.toBuffer(json.stateRoot),\n            utils_1.Data.toBuffer(json.transactionsRoot),\n            utils_1.Data.toBuffer(json.receiptsRoot),\n            utils_1.Data.toBuffer(json.logsBloom),\n            utils_1.Quantity.toBuffer(json.difficulty),\n            utils_1.Quantity.toBuffer(json.number),\n            utils_1.Quantity.toBuffer(json.gasLimit),\n            utils_1.Quantity.toBuffer(json.gasUsed),\n            utils_1.Quantity.toBuffer(json.timestamp),\n            utils_1.Data.toBuffer(json.extraData),\n            utils_1.Data.toBuffer(json.mixHash),\n            utils_1.Data.toBuffer(json.nonce)\n        ];\n        // only add baseFeePerGas if the block's JSON already has it\n        if (json.baseFeePerGas !== undefined) {\n            header[15] = utils_1.Data.toBuffer(json.baseFeePerGas);\n        }\n        const totalDifficulty = utils_1.Quantity.toBuffer(json.totalDifficulty);\n        const txs = [];\n        const extraTxs = [];\n        json.transactions.forEach((tx, index) => {\n            const blockExtra = [\n                ethereum_address_1.Address.toBuffer(tx.from),\n                utils_1.Quantity.toBuffer(tx.hash)\n            ];\n            const txExtra = [\n                ...blockExtra,\n                utils_1.Data.toBuffer(json.hash),\n                utils_1.Quantity.toBuffer(json.number),\n                index\n            ];\n            const typedTx = ethereum_transaction_1.TransactionFactory.fromRpc(tx, common, txExtra);\n            const raw = typedTx.toEthRawTransaction(typedTx.v.toBuffer(), typedTx.r.toBuffer(), typedTx.s.toBuffer());\n            txs.push(raw);\n            extraTxs.push(blockExtra);\n        });\n        return (0, ethereum_block_1.serialize)([header, txs, [], totalDifficulty, extraTxs]).serialized;\n    }\n    getBlockByTag(tag) {\n        switch (tag) {\n            case \"latest\":\n            case \"finalized\":\n            case \"safe\":\n                return this.latest;\n            case \"pending\":\n                // TODO: build a real pending block!\n                return this.latest; // this.createBlock(this.latest.header);\n            case \"earliest\":\n                return this.earliest;\n            default:\n                // the key is probably a hex string, let nature takes its course.\n                break;\n        }\n    }\n    getEffectiveNumber(tagOrBlockNumber = typeof ethereum_utils_1.Tag.latest) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block) {\n                return block.header.number;\n            }\n        }\n        return utils_1.Quantity.from(tagOrBlockNumber);\n    }\n    async getNumberFromHash(hash) {\n        return __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(utils_1.Data.toBuffer(hash)).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async getByHash(hash) {\n        const number = await this.getNumberFromHash(hash);\n        if (number === null) {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const json = await fallback.request(\"eth_getBlockByHash\", [\n                    utils_1.Data.from(hash),\n                    true\n                ]);\n                if (json) {\n                    const blockNumber = BigInt(json.number);\n                    if (blockNumber <= fallback.blockNumber.toBigInt()) {\n                        const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), blockNumber);\n                        return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n                    }\n                }\n            }\n            return null;\n        }\n        else {\n            return this.get(number);\n        }\n    }\n    async getRawByBlockNumber(blockNumber) {\n        // TODO(perf): make the block's raw fields accessible on latest/earliest/pending so\n        // we don't have to fetch them from the db each time a block tag is used.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3481\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        const numBuf = blockNumber.toBuffer();\n        return this.getRaw(numBuf).then(block => {\n            if (block == null && fallback) {\n                return this.fromFallback(blockNumber);\n            }\n            return block;\n        });\n    }\n    async get(tagOrBlockNumber) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block)\n                return block;\n        }\n        const blockNumber = utils_1.Quantity.from(tagOrBlockNumber);\n        const block = await this.getRaw(blockNumber.toBuffer());\n        const common = __classPrivateFieldGet(this, _BlockManager_common, \"f\");\n        if (block)\n            return new ethereum_block_1.Block(block, common);\n        else {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const block = await this.fromFallback(blockNumber);\n                if (block) {\n                    return new ethereum_block_1.Block(block, fallback.getCommonForBlockNumber(common, blockNumber.toBigInt()));\n                }\n            }\n        }\n        throw new Error(\"header not found\");\n    }\n    /**\n     * Writes the block object to the underlying database.\n     * @param block -\n     */\n    async putBlock(number, hash, serialized) {\n        let key = number;\n        // ensure we can store Block #0 as key \"00\", not \"\"\n        if (EMPTY_BUFFER.equals(key)) {\n            key = Buffer.from([0]);\n        }\n        const secondaryKey = hash.toBuffer();\n        await Promise.all([\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(secondaryKey, key),\n            super.set(key, serialized)\n        ]);\n    }\n    /**\n     * Updates the \"latest\" index to point to the given number.\n     * @param number the block number of the latest block\n     */\n    async updateLatestIndex(number) {\n        await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(LATEST_INDEX_KEY, number);\n    }\n    /**\n     * Updates the this.latest and this.earliest properties with data\n     * from the database.\n     */\n    async updateTaggedBlocks() {\n        const [earliest, latestBlockNumber] = await Promise.all([\n            (async () => {\n                for await (const data of this.base.createValueStream({ limit: 1 })) {\n                    return new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                }\n            })(),\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(LATEST_INDEX_KEY).catch(e => null)\n        ]);\n        if (earliest)\n            this.earliest = earliest;\n        if (latestBlockNumber) {\n            this.latest = await this.get(latestBlockNumber);\n        }\n        else {\n            // TODO: remove this section for the Ganache 8.0 release\n            // Ganache v7.0.0 didn't save a pointer to the latest block correctly, so\n            // when a database was restarted it would pull the wrong block. This code\n            // iterates over all data in the data base and finds the block with the\n            // highest block number and updates the database with the pointer so we\n            // don't have to hit this code again next time.\n            this.latest = await (async () => {\n                let latest;\n                for await (const data of this.base.createValueStream()) {\n                    const block = new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                    if (!latest ||\n                        block.header.number.toBigInt() > latest.header.number.toBigInt()) {\n                        latest = block;\n                    }\n                }\n                return latest;\n            })();\n            if (this.latest) {\n                // update the LATEST_INDEX_KEY index so we don't have to do this next time\n                await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\")\n                    .put(LATEST_INDEX_KEY, this.latest.header.number.toBuffer())\n                    .catch(e => null);\n            }\n        }\n    }\n}\nexports.default = BlockManager;\n_BlockManager_blockchain = new WeakMap(), _BlockManager_common = new WeakMap(), _BlockManager_blockIndexes = new WeakMap();\n//# sourceMappingURL=block-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockLogManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst filter_parsing_1 = require(\"../helpers/filter-parsing\");\nclass BlockLogManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_utils_1.BlockLogs);\n        _BlockLogManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _BlockLogManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const log = await super.get(key);\n        if (log) {\n            log.blockNumber = utils_1.Quantity.from(key);\n        }\n        else if (__classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback) {\n            const block = utils_1.Quantity.from(key);\n            const res = await __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback.request(\"eth_getLogs\", [{ fromBlock: block, toBlock: block }]);\n            return ethereum_utils_1.BlockLogs.fromJSON(res);\n        }\n        return log;\n    }\n    async getLogs(filter) {\n        const blockchain = __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\");\n        if (\"blockHash\" in filter) {\n            const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter);\n            const blockNumber = await blockchain.blocks.getNumberFromHash(filter.blockHash);\n            if (!blockNumber)\n                return [];\n            const logs = await this.get(blockNumber);\n            return logs ? [...logs.filter(addresses, topics)] : [];\n        }\n        else {\n            const { addresses, topics, fromBlock, toBlockNumber } = (0, filter_parsing_1.parseFilter)(filter, blockchain);\n            const pendingLogsPromises = [\n                this.get(fromBlock.toBuffer())\n            ];\n            const fromBlockNumber = fromBlock.toNumber();\n            // if we have a range of blocks to search, do that here:\n            if (fromBlockNumber !== toBlockNumber) {\n                // fetch all the blockLogs in-between `fromBlock` and `toBlock` (excluding\n                // from, because we already started fetching that one)\n                for (let i = fromBlockNumber + 1, l = toBlockNumber + 1; i < l; i++) {\n                    pendingLogsPromises.push(this.get(utils_1.Quantity.toBuffer(i)));\n                }\n            }\n            // now filter and compute all the blocks' blockLogs (in block order)\n            return Promise.all(pendingLogsPromises).then(blockLogsRange => {\n                const filteredBlockLogs = [];\n                blockLogsRange.forEach(blockLogs => {\n                    // TODO(perf): this loops over all addresses for every block.\n                    // Maybe make it loop only once?\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3482\n                    if (blockLogs)\n                        filteredBlockLogs.push(...blockLogs.filter(addresses, topics));\n                });\n                return filteredBlockLogs;\n            });\n        }\n    }\n}\nexports.default = BlockLogManager;\n_BlockLogManager_blockchain = new WeakMap();\n//# sourceMappingURL=blocklog-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Manager_Type, _Manager_options;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst NOTFOUND = 404;\nclass Manager {\n    constructor(base, type, options) {\n        _Manager_Type.set(this, void 0);\n        _Manager_options.set(this, void 0);\n        __classPrivateFieldSet(this, _Manager_Type, type, \"f\");\n        __classPrivateFieldSet(this, _Manager_options, options, \"f\");\n        this.base = base;\n    }\n    getRaw(key) {\n        if (typeof key === \"string\") {\n            key = utils_1.Data.toBuffer(key);\n        }\n        if (key.length === 0) {\n            key = utils_1.BUFFER_ZERO;\n        }\n        return this.base.get(key).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async get(key) {\n        const raw = await this.getRaw(key);\n        if (!raw)\n            return null;\n        return new (__classPrivateFieldGet(this, _Manager_Type, \"f\"))(raw, __classPrivateFieldGet(this, _Manager_options, \"f\"));\n    }\n    set(key, value) {\n        return this.base.put(key, value);\n    }\n    del(key) {\n        return this.base.del(key);\n    }\n}\nexports.default = Manager;\n_Manager_Type = new WeakMap(), _Manager_options = new WeakMap();\n//# sourceMappingURL=manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionManager_queue, _TransactionManager_paused, _TransactionManager_resumer, _TransactionManager_resolver, _TransactionManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst transaction_pool_1 = __importDefault(require(\"../transaction-pool\"));\nconst promise_queue_1 = __importDefault(require(\"@ganache/promise-queue\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\n// since our Manager needs to receive and Instantiable class with a\n// consistent return type and our transaction factory can return\n// any number of transaction types, we pass in this empty\n// no op class to fool the Manager\nclass NoOp {\n}\nclass TransactionManager extends manager_1.default {\n    constructor(options, common, blockchain, base) {\n        super(base, ethereum_transaction_1.TransactionFactory, common);\n        _TransactionManager_queue.set(this, new promise_queue_1.default());\n        _TransactionManager_paused.set(this, false);\n        _TransactionManager_resumer.set(this, void 0);\n        _TransactionManager_resolver.set(this, void 0);\n        _TransactionManager_blockchain.set(this, void 0);\n        this.fromFallback = async (transactionHash) => {\n            const { fallback } = __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\");\n            const tx = await fallback.request(\"eth_getTransactionByHash\", [\n                utils_1.Data.toString(transactionHash)\n            ]);\n            if (tx == null)\n                return null;\n            const blockHash = utils_1.Data.from(tx.blockHash, 32);\n            const blockNumber = utils_1.Quantity.from(tx.blockNumber);\n            const index = utils_1.Quantity.from(tx.transactionIndex);\n            // don't get the transaction if the requested transaction is _after_ our\n            // fallback's blocknumber because it doesn't exist in our local chain.\n            if (!fallback.isValidForkBlockNumber(blockNumber))\n                return null;\n            const extra = [\n                ethereum_address_1.Address.toBuffer(tx.from),\n                utils_1.Data.toBuffer(tx.hash, 32),\n                blockHash.toBuffer(),\n                blockNumber.toBuffer(),\n                index.toBuffer(),\n                utils_1.Quantity.toBuffer(tx.gasPrice)\n            ];\n            const common = fallback.getCommonForBlockNumber(fallback.common, blockNumber.toBigInt());\n            const runTx = ethereum_transaction_1.TransactionFactory.fromRpc(tx, common, extra);\n            return runTx.serializeForDb(blockHash, blockNumber, index);\n        };\n        /**\n         * Resume processing transactions. Has no effect if not paused.\n         */\n        this.resume = () => {\n            if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\"))\n                return;\n            __classPrivateFieldSet(this, _TransactionManager_paused, false, \"f\");\n            __classPrivateFieldGet(this, _TransactionManager_resolver, \"f\").call(this);\n        };\n        __classPrivateFieldSet(this, _TransactionManager_blockchain, blockchain, \"f\");\n        this.transactionPool = new transaction_pool_1.default(options, blockchain);\n    }\n    async getRaw(transactionHash) {\n        return super.getRaw(transactionHash).then(block => {\n            if (block == null && __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\").fallback) {\n                return this.fromFallback(transactionHash);\n            }\n            return block;\n        });\n    }\n    async get(key) {\n        const factory = (await super.get(key));\n        if (!factory)\n            return null;\n        return factory.tx;\n    }\n    /**\n     * Adds the transaction to the transaction pool.\n     *\n     * Returns a promise that is only resolved in the order it was added.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns `true` if the `transaction` is immediately executable, `false` if\n     * it may be valid in the future. Throws if the transaction is invalid.\n     */\n    async add(transaction, secretKey) {\n        if (__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _TransactionManager_resumer, \"f\");\n        }\n        // Because ganache requires determinism, we can't allow varying IO times to\n        // potentially affect the order in which transactions are inserted into the\n        // pool, so we use a FIFO queue to _return_ transaction insertions in the\n        // order the were received.\n        const insertion = this.transactionPool.prepareTransaction(transaction, secretKey);\n        const result = await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").add(insertion);\n        if (result) {\n            this.transactionPool.drain();\n        }\n        return result;\n    }\n    /**\n     * Immediately ignores all transactions that were in the process of being\n     * added to the pool. These transactions' `push` promises will be resolved\n     * immediately with the value `false` and will _not_ be added to the pool.\n     *\n     * Also clears all transactions that were already added to the pool.\n     *\n     * Transactions that are currently in the process of being mined may still be\n     * mined.\n     */\n    clear() {\n        __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").clear(false);\n        this.transactionPool.clear();\n    }\n    /**\n     * Stop processing _new_ transactions; puts new requests in a queue. Has no\n     * affect if already paused.\n     */\n    async pause() {\n        if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            // stop processing new transactions immediately\n            __classPrivateFieldSet(this, _TransactionManager_paused, true, \"f\");\n            __classPrivateFieldSet(this, _TransactionManager_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _TransactionManager_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        // then wait until all async things we were already processing are done\n        // before returning\n        if (__classPrivateFieldGet(this, _TransactionManager_queue, \"f\").isBusy()) {\n            await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").emit(\"idle\");\n        }\n    }\n}\nexports.default = TransactionManager;\n_TransactionManager_queue = new WeakMap(), _TransactionManager_paused = new WeakMap(), _TransactionManager_resumer = new WeakMap(), _TransactionManager_resolver = new WeakMap(), _TransactionManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionReceiptManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nclass TransactionReceiptManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_transaction_1.InternalTransactionReceipt);\n        _TransactionReceiptManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _TransactionReceiptManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const receipt = await super.get(key);\n        if (receipt) {\n            return receipt;\n        }\n        else if (__classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback) {\n            const res = await __classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback.request(\"eth_getTransactionReceipt\", [typeof key === \"string\" ? key : utils_1.Data.from(key)]);\n            if (!res)\n                return null;\n            const status = res.status === \"0x1\" ? utils_1.Quantity.One.toBuffer() : utils_1.BUFFER_ZERO;\n            const cumulativeGasUsed = utils_1.Quantity.toBuffer(res.cumulativeGasUsed);\n            const logsBloom = utils_1.Data.toBuffer(res.logsBloom, 256);\n            const logs = res.logs.map(log => [\n                ethereum_address_1.Address.from(log.address).toBuffer(),\n                log.topics.map(topic => utils_1.Data.toBuffer(topic)),\n                Array.isArray(log.data)\n                    ? log.data.map(data => utils_1.Data.toBuffer(data))\n                    : utils_1.Data.toBuffer(log.data)\n            ]);\n            const gasUsed = utils_1.Quantity.toBuffer(res.gasUsed);\n            const contractAddress = res.contractAddress == null\n                ? utils_1.BUFFER_EMPTY\n                : ethereum_address_1.Address.from(res.contractAddress).toBuffer();\n            return ethereum_transaction_1.InternalTransactionReceipt.fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress);\n        }\n    }\n}\nexports.default = TransactionReceiptManager;\n_TransactionReceiptManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-receipt-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Database_options, _Database_cleanupDirectory, _Database_closed, _Database_rootStore, _Database_cleanup;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst tmp_promise_1 = require(\"tmp-promise\");\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst trie_db_1 = require(\"./trie-db\");\nconst levelup = require(\"levelup\");\n(0, tmp_promise_1.setGracefulCleanup)();\nconst tmpOptions = { prefix: \"ganache_\", unsafeCleanup: true };\nconst noop = () => Promise.resolve();\nclass Database extends emittery_1.default {\n    /**\n     * The Database handles the creation of the database, and all access to it.\n     * Once the database has been fully initialized it will emit a `ready`\n     * event.\n     * @param options - Supports one of two options: `db` (a leveldown compliant\n     * store instance) or `dbPath` (the path to store/read the db instance)\n     * @param blockchain -\n     */\n    constructor(options, blockchain) {\n        super();\n        _Database_options.set(this, void 0);\n        _Database_cleanupDirectory.set(this, noop);\n        _Database_closed.set(this, false);\n        this.directory = null;\n        this.db = null;\n        _Database_rootStore.set(this, void 0);\n        this.initialize = async () => {\n            const levelupOptions = {\n                keyEncoding: \"binary\",\n                valueEncoding: \"binary\"\n            };\n            const store = __classPrivateFieldGet(this, _Database_options, \"f\").db;\n            let db;\n            if (store) {\n                __classPrivateFieldSet(this, _Database_rootStore, (0, encoding_down_1.default)(store, levelupOptions), \"f\");\n                db = levelup(__classPrivateFieldGet(this, _Database_rootStore, \"f\"), {});\n            }\n            else {\n                let directory = __classPrivateFieldGet(this, _Database_options, \"f\").dbPath;\n                if (!directory) {\n                    const dirInfo = await (0, tmp_promise_1.dir)(tmpOptions);\n                    directory = dirInfo.path;\n                    __classPrivateFieldSet(this, _Database_cleanupDirectory, dirInfo.cleanup, \"f\");\n                    // don't continue if we closed while we were waiting for the dir\n                    if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                        return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n                }\n                this.directory = directory;\n                // specify an empty `prefix` for browser-based leveldown (level-js)\n                const leveldownOpts = { prefix: \"\" };\n                const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n                __classPrivateFieldSet(this, _Database_rootStore, store, \"f\");\n                db = levelup(store);\n            }\n            // don't continue if we closed while we were waiting for the db\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            const open = db.open();\n            const sublevelTrie = (0, subleveldown_1.default)(db, \"T\", levelupOptions);\n            this.trie = new trie_db_1.TrieDB(sublevelTrie);\n            this.db = db;\n            await open;\n            // don't continue if we closed while we were waiting for it to open\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            this.blocks = (0, subleveldown_1.default)(db, \"b\", levelupOptions);\n            this.blockIndexes = (0, subleveldown_1.default)(db, \"i\", levelupOptions);\n            this.blockLogs = (0, subleveldown_1.default)(db, \"l\", levelupOptions);\n            this.transactions = (0, subleveldown_1.default)(db, \"t\", levelupOptions);\n            this.transactionReceipts = (0, subleveldown_1.default)(db, \"r\", levelupOptions);\n            this.storageKeys = (0, subleveldown_1.default)(db, \"s\", levelupOptions);\n            return this.emit(\"ready\");\n        };\n        /**\n         * Cleans up the database connections and our tmp directory.\n         */\n        _Database_cleanup.set(this, async () => {\n            const db = this.db;\n            if (db) {\n                await new Promise((resolve, reject) => db.close(err => {\n                    if (err)\n                        return void reject(err);\n                    resolve(void 0);\n                }));\n                await Promise.all([\n                    this.blocks.close(),\n                    this.blockIndexes.close(),\n                    this.blockIndexes.close(),\n                    this.transactionReceipts.close(),\n                    this.transactions.close(),\n                    this.storageKeys.close(),\n                    this.trie.close()\n                ]);\n            }\n            return __classPrivateFieldGet(this, _Database_cleanupDirectory, \"f\").call(this);\n        });\n        __classPrivateFieldSet(this, _Database_options, options, \"f\");\n        this.blockchain = blockchain;\n    }\n    /**\n     * Call `batch` to batch `put` and `del` operations within the same\n     * event loop tick of the provided function. All db operations within the\n     * batch _must_ be executed synchronously.\n     * @param fn - Within this function's event loop tick, all `put` and\n     * `del` database operations are applied in a single atomic operation. This\n     * provides a single write call and if any individual put/del's fail the\n     * entire operation fails and no modifications are made.\n     * @returns a Promise that resolves to the return value\n     * of the provided function.\n     */\n    batch(fn) {\n        const rootDb = __classPrivateFieldGet(this, _Database_rootStore, \"f\").db;\n        const batch = this.db.batch();\n        const originalPut = rootDb.put;\n        const originalDel = rootDb.del;\n        rootDb.put = batch.put.bind(batch);\n        rootDb.del = batch.del.bind(batch);\n        let prom;\n        try {\n            const ret = fn();\n            // PSA: don't let vscode (or yourself) rewrite this to `await` the\n            // `batch.write` call. The `finally` block needs to run _before_ the\n            // write promise has resolved.\n            prom = batch.write().then(() => ret);\n        }\n        finally {\n            rootDb.put = originalPut;\n            rootDb.del = originalDel;\n        }\n        return prom;\n    }\n    /**\n     * Gracefully closes the database and cleans up the file system and waits for\n     * it to fully shut down. Emits a `close` event once complete.\n     * Note: only emits `close` once.\n     */\n    async close() {\n        const wasClosed = __classPrivateFieldGet(this, _Database_closed, \"f\");\n        __classPrivateFieldSet(this, _Database_closed, true, \"f\");\n        await __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n        // only emit `close` once\n        if (!wasClosed) {\n            this.emit(\"close\");\n            return;\n        }\n    }\n}\nexports.default = Database;\n_Database_options = new WeakMap(), _Database_cleanupDirectory = new WeakMap(), _Database_closed = new WeakMap(), _Database_rootStore = new WeakMap(), _Database_cleanup = new WeakMap();\n//# sourceMappingURL=database.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkCache = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst cache_1 = require(\"@ethereumjs/statemanager/dist/cache\");\nclass ForkCache extends cache_1.Cache {\n    constructor(trie) {\n        /**\n         * Looks up address in underlying trie.\n         * @param address - Address of account\n         */\n        const lookupAccount = async (address) => {\n            const rlp = await trie.get(address.buf);\n            return rlp ? util_1.Account.fromRlpSerializedAccount(rlp) : new util_1.Account();\n        };\n        super({ getCb: lookupAccount, putCb: trie.put.bind(trie), deleteCb: trie.del.bind(trie) });\n    }\n}\nexports.ForkCache = ForkCache;\n//# sourceMappingURL=cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Deferred() {\n    const deferred = {};\n    deferred.promise = new Promise((resolve, reject) => {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n}\nexports.default = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Fork_abortController, _Fork_handler, _Fork_options, _Fork_accounts, _Fork_hardfork, _Fork_setCommonFromChain, _Fork_setBlockDataFromChainAndOptions, _Fork_syncAccounts;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fork = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst abort_controller_1 = __importDefault(require(\"abort-controller\"));\nconst common_1 = require(\"@ethereumjs/common\");\nconst http_handler_1 = require(\"./handlers/http-handler\");\nconst ws_handler_1 = require(\"./handlers/ws-handler\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst block_manager_1 = __importDefault(require(\"../data-managers/block-manager\"));\nconst provider_handler_1 = require(\"./handlers/provider-handler\");\nconst persistent_cache_1 = require(\"./persistent-cache/persistent-cache\");\nconst url_1 = require(\"url\");\nasync function fetchChainId(fork) {\n    const chainIdHex = await fork.request(\"eth_chainId\", []);\n    return parseInt(chainIdHex, 16);\n}\nasync function fetchNetworkId(fork) {\n    const networkIdStr = await fork.request(\"net_version\", []);\n    return parseInt(networkIdStr, 10);\n}\nfunction fetchBlockNumber(fork) {\n    // {disableCache: true} required so we never cache the blockNumber, as forking\n    // shouldn't ever cache a method that can change!\n    return fork.request(\"eth_blockNumber\", [], { disableCache: true });\n}\nfunction fetchBlock(fork, blockNumber) {\n    return fork.request(\"eth_getBlockByNumber\", [blockNumber, true]);\n}\nasync function fetchNonce(fork, address, blockNumber) {\n    const nonce = await fork.request(\"eth_getTransactionCount\", [\n        address,\n        blockNumber\n    ]);\n    return utils_1.Quantity.from(nonce);\n}\nclass Fork {\n    constructor(options, accounts) {\n        _Fork_abortController.set(this, new abort_controller_1.default());\n        _Fork_handler.set(this, void 0);\n        _Fork_options.set(this, void 0);\n        _Fork_accounts.set(this, void 0);\n        _Fork_hardfork.set(this, void 0);\n        _Fork_setCommonFromChain.set(this, async (chainIdPromise) => {\n            const [chainId, networkId] = await Promise.all([\n                chainIdPromise,\n                fetchNetworkId(this)\n            ]);\n            this.chainId = chainId;\n            this.common = common_1.Common.custom({\n                name: \"ganache-fork\",\n                defaultHardfork: __classPrivateFieldGet(this, _Fork_hardfork, \"f\"),\n                // use the remote chain's network id mostly because truffle's debugger\n                // needs it to match in order to fetch sources\n                networkId,\n                // we use ganache's own chain id for blocks _after_ the fork to prevent\n                // replay attacks\n                chainId: __classPrivateFieldGet(this, _Fork_options, \"f\").chain.chainId,\n                comment: \"Local test network fork\"\n            }, { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n            // disable listeners to common since we don't actually cause any `emit`s,\n            // but other EVM parts to listen and will make node complain about too\n            // many listeners.\n            this.common.on = () => { };\n        });\n        _Fork_setBlockDataFromChainAndOptions.set(this, async (chainIdPromise) => {\n            const { fork: options } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n            if (options.blockNumber === ethereum_utils_1.Tag.latest) {\n                const [latestBlock, chainId] = await Promise.all([\n                    fetchBlock(this, ethereum_utils_1.Tag.latest),\n                    chainIdPromise\n                ]);\n                let blockNumber = parseInt(latestBlock.number, 16);\n                const effectiveBlockNumber = utils_1.KNOWN_CHAINIDS.has(chainId)\n                    ? Math.max(blockNumber - options.preLatestConfirmations, 0)\n                    : blockNumber;\n                let block;\n                if (effectiveBlockNumber !== blockNumber) {\n                    block = await fetchBlock(this, utils_1.Quantity.from(effectiveBlockNumber));\n                }\n                else {\n                    block = latestBlock;\n                }\n                options.blockNumber = effectiveBlockNumber;\n                this.blockNumber = utils_1.Quantity.from(effectiveBlockNumber);\n                this.stateRoot = utils_1.Data.from(block.stateRoot);\n                await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, this.blockNumber);\n                return block;\n            }\n            else if (Number.isInteger(options.blockNumber) &&\n                options.blockNumber >= 0) {\n                const blockNumber = utils_1.Quantity.from(options.blockNumber);\n                const [block] = await Promise.all([\n                    fetchBlock(this, blockNumber).then(async (block) => {\n                        this.stateRoot = block.stateRoot;\n                        await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, blockNumber);\n                        return block;\n                    }),\n                    fetchBlockNumber(this).then((latestBlockNumberHex) => {\n                        const latestBlockNumberInt = parseInt(latestBlockNumberHex, 16);\n                        // if our block number option is _after_ the current block number\n                        // throw, as it likely wasn't intentional and doesn't make sense.\n                        if (options.blockNumber > latestBlockNumberInt) {\n                            throw new Error(`\\`fork.blockNumber\\` (${options.blockNumber}) must not be greater than the current block number (${latestBlockNumberInt})`);\n                        }\n                        else {\n                            this.blockNumber = blockNumber;\n                        }\n                    })\n                ]);\n                return block;\n            }\n            else {\n                throw new Error(`Invalid value for \\`fork.blockNumber\\` option: \"${options.blockNumber}\". Must be a positive integer or the string \"latest\".`);\n            }\n        });\n        _Fork_syncAccounts.set(this, (blockNumber) => {\n            return Promise.all(__classPrivateFieldGet(this, _Fork_accounts, \"f\").map(async (account) => {\n                const nonce = await fetchNonce(this, account.address, blockNumber);\n                account.nonce = nonce;\n            }));\n        });\n        __classPrivateFieldSet(this, _Fork_options, options, \"f\");\n        const forkingOptions = options.fork;\n        __classPrivateFieldSet(this, _Fork_hardfork, options.chain.hardfork, \"f\");\n        __classPrivateFieldSet(this, _Fork_accounts, accounts, \"f\");\n        const { url, network } = forkingOptions;\n        if (url) {\n            const { protocol } = url;\n            switch (protocol) {\n                case \"ws:\":\n                case \"wss:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                case \"http:\":\n                case \"https:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new http_handler_1.HttpHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                default: {\n                    throw new Error(`Unsupported protocol: ${protocol}`);\n                }\n            }\n        }\n        else if (forkingOptions.provider) {\n            __classPrivateFieldSet(this, _Fork_handler, new provider_handler_1.ProviderHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n        else if (network) {\n            let normalizedNetwork;\n            if (network === \"görli\") {\n                forkingOptions.network = normalizedNetwork = \"goerli\";\n            }\n            else {\n                normalizedNetwork = network;\n            }\n            // Note: `process.env.INFURA_KEY` is replaced by webpack with an infura\n            // key.\n            const infuraKey = process.env.INFURA_KEY;\n            if (!infuraKey) {\n                throw new Error(\"The INFURA_KEY environment variable was not given and is required when using Ganache's integrated archive network feature.\");\n            }\n            // any because the `network` check above narrowed the type to one\n            // that doesn't include `url`, but we still want to add it.\n            forkingOptions.url = new url_1.URL(`wss://${normalizedNetwork}.infura.io/ws/v3/${infuraKey}`);\n            __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n    }\n    async initialize() {\n        let cacheProm;\n        const { fork: forkOptions, chain: chainOptions, miner: minerOptions } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n        if (forkOptions.deleteCache)\n            await persistent_cache_1.PersistentCache.deleteDb();\n        if (forkOptions.disableCache === false) {\n            // ignore cache start up errors as it is possible there is an `open`\n            // conflict if another ganache fork is running at the time this one is\n            // started. The cache isn't required (though performance will be\n            // degraded without it)\n            cacheProm = persistent_cache_1.PersistentCache.create().catch(_e => null);\n        }\n        else {\n            cacheProm = null;\n        }\n        const chainIdPromise = fetchChainId(this);\n        const [block, cache] = await Promise.all([\n            __classPrivateFieldGet(this, _Fork_setBlockDataFromChainAndOptions, \"f\").call(this, chainIdPromise),\n            cacheProm,\n            __classPrivateFieldGet(this, _Fork_setCommonFromChain, \"f\").call(this, chainIdPromise)\n        ]);\n        const common = this.getCommonForBlockNumber(this.common, this.blockNumber.toBigInt());\n        this.block = new ethereum_block_1.Block(block_manager_1.default.rawFromJSON(block, common), common);\n        if (!chainOptions.time && minerOptions.timestampIncrement !== \"clock\") {\n            chainOptions.time = new Date((this.block.header.timestamp.toNumber() +\n                minerOptions.timestampIncrement.toNumber()) *\n                1000);\n        }\n        if (cache)\n            await this.initCache(cache);\n    }\n    async initCache(cache) {\n        await cache.initialize(this.block.header.number, this.block.hash(), this.request.bind(this));\n        __classPrivateFieldGet(this, _Fork_handler, \"f\").setCache(cache);\n    }\n    request(method, params, options = { disableCache: false }) {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").request(method, params, options);\n    }\n    abort() {\n        return __classPrivateFieldGet(this, _Fork_abortController, \"f\").abort();\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").close();\n    }\n    isValidForkBlockNumber(blockNumber) {\n        return blockNumber.toBigInt() <= this.blockNumber.toBigInt();\n    }\n    selectValidForkBlockNumber(blockNumber) {\n        return this.isValidForkBlockNumber(blockNumber)\n            ? blockNumber\n            : this.blockNumber;\n    }\n    /**\n     * If the `blockNumber` is before our `fork.blockNumber`, return a `Common`\n     * instance, applying the rules from the remote chain's `common` via its\n     * original `chainId`. If the remote chain's `chainId` is now \"known\", return\n     * a `Common` with our local `common`'s rules applied, but with the remote\n     * chain's `chainId`. If the block is greater than or equal to our\n     * `fork.blockNumber` return `common`.\n     * @param common -\n     * @param blockNumber -\n     */\n    getCommonForBlockNumber(common, blockNumber) {\n        if (blockNumber <= this.blockNumber.toBigInt()) {\n            // we are at or before our fork block\n            if (utils_1.KNOWN_CHAINIDS.has(this.chainId)) {\n                // we support this chain id, so let's use its rules\n                let hardfork;\n                // hardforks are iterated from earliest to latest\n                for (const hf of common.hardforks()) {\n                    if (hf.block === null)\n                        continue;\n                    if (blockNumber >= BigInt(hf.block)) {\n                        hardfork = hf.name;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return new common_1.Common({ chain: this.chainId, hardfork });\n            }\n            // we don't know about this chain or hardfork, so just carry on per usual,\n            // but with the fork's chainId (instead of our local chainId)\n            return common_1.Common.custom({\n                chainId: this.chainId,\n                defaultHardfork: common.hardfork()\n            }, { baseChain: 1 });\n        }\n        else {\n            return common;\n        }\n    }\n}\nexports.Fork = Fork;\n_Fork_abortController = new WeakMap(), _Fork_handler = new WeakMap(), _Fork_options = new WeakMap(), _Fork_accounts = new WeakMap(), _Fork_hardfork = new WeakMap(), _Fork_setCommonFromChain = new WeakMap(), _Fork_setBlockDataFromChainAndOptions = new WeakMap(), _Fork_syncAccounts = new WeakMap();\n//# sourceMappingURL=fork.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseHandler = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rate_limiter_1 = __importDefault(require(\"../rate-limiter/rate-limiter\"));\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst INVALID_RESPONSE = \"Invalid response from fork provider: \";\nconst INVALID_AUTH_ERROR = \"Authentication via both username/password (Basic) and JWT (Bearer) is not possible\";\nconst WINDOW_SECONDS = 30;\nclass BaseHandler {\n    constructor(options, abortSignal) {\n        this.id = 1;\n        this.requestCache = new Map();\n        this.fireForget = new Set();\n        const forkingOptions = options.fork;\n        const { requestsPerSecond, url, userAgent, origin } = forkingOptions;\n        this.abortSignal = abortSignal;\n        this.limiter = new rate_limiter_1.default(\n        // convert `requestsPerSecond` to \"requests per window\"\n        requestsPerSecond * WINDOW_SECONDS, WINDOW_SECONDS * 1000, abortSignal);\n        this.valueCache = new lru_cache_1.default({\n            max: 1073741824,\n            length: (value, key) => {\n                return value.length + key.length;\n            }\n        });\n        // we don't need header-related things if we are using a provider\n        // instead of a url since we aren't in charge of sending requests at the\n        // header level.\n        if (url) {\n            const headers = {\n                \"user-agent\": userAgent\n            };\n            if (origin) {\n                headers[\"origin\"] = origin;\n            }\n            // we set our own Authentication headers, so username and password must be\n            // removed from the url. (The values have already been copied to the options)\n            url.password = url.username = \"\";\n            const isInfura = url.host.endsWith(\".infura.io\");\n            BaseHandler.setAuthHeaders(forkingOptions, headers);\n            BaseHandler.setUserHeaders(forkingOptions, headers, !isInfura);\n            this.headers = headers;\n        }\n    }\n    setCache(cache) {\n        this.persistentCache = cache;\n    }\n    /**\n     * Adds Authorization headers from the given options to the provided `headers`\n     * object. Overwrites an existing `Authorization` header value.\n     *\n     * @param options -\n     * @param headers -\n     */\n    static setAuthHeaders(options, headers) {\n        if (options.username != null || options.password != null) {\n            if (options.jwt != null)\n                throw new Error(INVALID_AUTH_ERROR);\n            headers.authorization = `Basic ${Buffer.from(`${options.username || \"\"}:${options.password || \"\"}`).toString(\"base64\")}`;\n        }\n        else if (options.jwt) {\n            headers.authorization = `Bearer ${options.jwt}`;\n        }\n    }\n    /**\n     * Adds user provided headers to the provided `headers`\n     * object.\n     *\n     * If the headers already contain an existing `Authorization` header\n     * value and the incoming values have compatible schemes\n     * (Bearer===Bearer, Basic===Basic) the values are merged. Note: if the\n     * `permitMultiAuth` option is `false` Bearer tokens can not be merged.\n     *\n     * @param options -\n     * @param headers -\n     * @param permitMultiAuth -\n     */\n    static setUserHeaders(options, headers, permitMultiAuth) {\n        // copy the user-provided headers over to the connection's headers\n        const userHeaders = options.headers;\n        if (userHeaders) {\n            for (let i = 0, l = userHeaders.length; i < l; i++) {\n                let { name, value } = userHeaders[i];\n                const key = name.toLowerCase();\n                // if the user specified multiple Authentication headers (.e.g, via\n                // username/password or the jwt field) we need to join them when\n                // they are both of the same scheme, otherwise we throw an exception.\n                if (key === \"authorization\" && \"authorization\" in headers) {\n                    if (!permitMultiAuth) {\n                        throw new Error(`Authentication with multiple auth-params is not allowed.`);\n                    }\n                    const currentScheme = headers.authorization.split(\" \", 1)[0];\n                    const [incomingScheme, authParams] = value.split(/\\.(?:.+)/);\n                    if (incomingScheme.toLowerCase() === currentScheme.toLowerCase()) {\n                        headers.authorization += \",\" + authParams;\n                    }\n                    else {\n                        throw new Error(`Authentication via both ${currentScheme} and ${incomingScheme} is not allowed.`);\n                    }\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n        }\n    }\n    getFromMemCache(key) {\n        const cachedRequest = this.requestCache.get(key);\n        if (cachedRequest !== undefined)\n            return cachedRequest;\n        const cachedValue = this.valueCache.get(key);\n        if (cachedValue !== undefined)\n            return JSON.parse(cachedValue).result;\n    }\n    async getFromSlowCache(method, params, key) {\n        if (!this.persistentCache)\n            return;\n        const raw = await this.persistentCache.get(method, params, key).catch(e => {\n            if (e.notFound)\n                return null;\n            // I/O or other error, throw as things are getting weird and the cache may\n            // have lost integrity\n            throw e;\n        });\n        if (raw != null)\n            return { result: JSON.parse(raw).result, raw };\n    }\n    async queueRequest(method, params, key, send, options = { disableCache: false }) {\n        if (!options.disableCache) {\n            const memCached = this.getFromMemCache(key);\n            if (memCached !== undefined)\n                return memCached;\n            const diskCached = await this.getFromSlowCache(method, params, key);\n            if (diskCached !== undefined) {\n                this.valueCache.set(key, Buffer.from(diskCached.raw));\n                return diskCached.result;\n            }\n        }\n        const promise = this.limiter\n            .handle(send)\n            .then(async ({ response, raw }) => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if ((0, utils_1.hasOwn)(response, \"result\")) {\n                if (!options.disableCache) {\n                    // cache non-error responses only\n                    this.valueCache.set(key, raw);\n                    // swallow errors for the persistentCache, since it's not vital that\n                    // it always works\n                    if (this.persistentCache) {\n                        const prom = this.persistentCache\n                            .put(method, params, key, typeof raw === \"string\" ? Buffer.from(raw) : raw)\n                            .catch(_ => {\n                            // the cache.put may fail if the db is closed while a request\n                            // is in flight. This is a \"fire and forget\" method.\n                        });\n                        // track these unawaited `puts`\n                        this.fireForget.add(prom);\n                        // clean up once complete\n                        prom.finally(() => {\n                            this.fireForget.delete(prom);\n                        });\n                    }\n                }\n                return response.result;\n            }\n            else if ((0, utils_1.hasOwn)(response, \"error\") && response.error != null) {\n                const { error } = response;\n                throw new ethereum_utils_1.CodedError(error.message, error.code);\n            }\n            throw new Error(`${INVALID_RESPONSE}\\`${JSON.stringify(response)}\\``);\n        });\n        this.requestCache.set(key, promise);\n        return await promise;\n    }\n    async close() {\n        await Promise.all(this.fireForget.keys());\n        this.persistentCache && (await this.persistentCache.close());\n    }\n}\nexports.BaseHandler = BaseHandler;\nBaseHandler.JSONRPC_PREFIX = '{\"jsonrpc\":\"2.0\",\"id\":';\n//# sourceMappingURL=base-handler.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\n// TODO: support http2\n// Issue: https://github.com/trufflesuite/ganache/issues/3474\nconst http_1 = __importStar(require(\"http\"));\nconst https_1 = __importStar(require(\"https\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass HttpHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.url = options.fork.url;\n        this.headers.accept = this.headers[\"content-type\"] = \"application/json\";\n        if (this.url.protocol === \"http:\") {\n            this._request = http_1.default.request;\n            this.agent = new http_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n        else {\n            this._request = https_1.default.request;\n            this.agent = new https_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n    }\n    async handleLengthedResponse(res, length) {\n        return await new Promise((resolve, reject) => {\n            const buffer = Buffer.allocUnsafe(length);\n            let offset = 0;\n            function data(message) {\n                const messageLength = message.length;\n                // note: Node will NOT send us more data than the content-length header\n                // denotes, so we don't have to worry about it.\n                message.copy(buffer, offset, 0, messageLength);\n                offset += messageLength;\n            }\n            function end() {\n                // note: Node doesn't check if the content-length matches (we might\n                // receive less data than expected), so we do that here\n                if (offset !== length) {\n                    // if we didn't receive enough data, throw\n                    reject(new Error(\"content-length mismatch\"));\n                }\n                else {\n                    resolve(buffer);\n                }\n            }\n            res.on(\"data\", data);\n            res.on(\"end\", end);\n            res.on(\"error\", reject);\n        });\n    }\n    async handleChunkedResponse(res) {\n        const chunks = [];\n        let totalLength = 0;\n        for await (let chunk of res) {\n            chunks.push(chunk);\n            totalLength += chunk.length;\n        }\n        return chunks.length === 1 ? chunks[0] : Buffer.concat(chunks, totalLength);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        const key = JSON.stringify({ method, params });\n        const { protocol, hostname: host, port, pathname, search } = this.url;\n        const requestOptions = {\n            protocol,\n            host,\n            port,\n            path: pathname + search,\n            headers: this.headers,\n            method: \"POST\",\n            agent: this.agent,\n            // Node v15 supports AbortSignals directly\n            signal: this.abortSignal\n        };\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const deferred = (0, deferred_1.default)();\n            const postData = `${JSONRPC_PREFIX}${this.id++},${key.slice(1)}`;\n            this.headers[\"content-length\"] = postData.length;\n            const req = this._request(requestOptions);\n            req.on(\"response\", res => {\n                const { headers } = res;\n                let buffer;\n                // in the browser we can't detect if the response is compressed (gzip),\n                // but it doesn't matter since the browser has decompressed already\n                // anyway\n                if (process.env.IS_BROWSER) {\n                    buffer = this.handleChunkedResponse(res);\n                }\n                else {\n                    // if we have a transfer-encoding we don't care about \"content-length\"\n                    // (per HTTP spec). We also don't care about invalid lengths\n                    if (\"transfer-encoding\" in headers) {\n                        buffer = this.handleChunkedResponse(res);\n                    }\n                    else {\n                        const length = headers[\"content-length\"] / 1;\n                        if (isNaN(length) || length <= 0) {\n                            buffer = this.handleChunkedResponse(res);\n                        }\n                        else {\n                            // we have a content-length; use it to pre-allocate the required memory\n                            buffer = this.handleLengthedResponse(res, length);\n                        }\n                    }\n                }\n                // TODO: handle invalid JSON (throws on parse)?\n                // Issue: https://github.com/trufflesuite/ganache/issues/3475\n                buffer.then(buffer => {\n                    try {\n                        deferred.resolve({\n                            response: JSON.parse(buffer),\n                            raw: buffer\n                        });\n                    }\n                    catch {\n                        const resStr = buffer.toString();\n                        let shortStr;\n                        if (resStr.length > 340) {\n                            // truncate long errors so we don't blow up the user's logs\n                            shortStr = resStr.slice(0, 320) + \"…\";\n                        }\n                        else {\n                            shortStr = resStr;\n                        }\n                        let msg = `Invalid JSON response from fork provider:\\n\\n ${shortStr}`;\n                        if ((resStr.startsWith(\"invalid project id\") ||\n                            resStr.startsWith(\"project id required in the url\")) &&\n                            this.url.host.endsWith(\"infura.io\")) {\n                            msg += `\\n\\nThe provided fork url, ${this.url}, may be an invalid or incorrect Infura endpoint.`;\n                            msg += `\\nVisit https://infura.io/docs/ethereum for Infura documentation.`;\n                        }\n                        deferred.reject(new Error(msg));\n                    }\n                });\n            });\n            // after 5 seconds of idle abort the request\n            req.setTimeout(5000, req.abort.bind(req, null));\n            req.on(\"error\", deferred.reject);\n            req.write(postData);\n            req.end();\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n}\nexports.HttpHandler = HttpHandler;\n//# sourceMappingURL=http-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderHandler = void 0;\nconst base_handler_1 = require(\"./base-handler\");\nclass ProviderHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        const provider = options.fork.provider;\n        if (typeof provider.request === \"function\") {\n            this._request = async (method, params) => {\n                try {\n                    const result = await provider.request({ method, params });\n                    const response = { result };\n                    return { response, raw: JSON.stringify(response) };\n                }\n                catch (error) {\n                    // if this doesn't appear to be a JSON-RPC \"coded\" error it might be\n                    // a network level error, or something else we don't know how to\n                    // handle. Throw so stack traces are preserved.\n                    if (typeof error.code !== \"number\")\n                        throw error;\n                    return {\n                        response: { error },\n                        raw: null\n                    };\n                }\n            };\n        }\n        else if (typeof provider.send === \"function\") {\n            this._request = async (method, params) => {\n                return await new Promise((resolve, reject) => {\n                    const request = {\n                        id: this.id++,\n                        jsonrpc: \"2.0\",\n                        method,\n                        params\n                    };\n                    provider.send(request, (err, response) => {\n                        if (err)\n                            return void reject(err);\n                        resolve({\n                            response,\n                            raw: JSON.stringify(response)\n                        });\n                    });\n                });\n            };\n        }\n        else {\n            throw new Error(\"Forking `provider` must be EIP-1193 compatible\");\n        }\n    }\n    async request(method, params, options = { disableCache: false }) {\n        // format params via JSON stringification because the params might\n        // be Quantity or Data, which aren't valid as `params` themselves,\n        // but when JSON stringified they are\n        const strParams = JSON.stringify(params);\n        return await this.queueRequest(method, params, `${method}:${strParams}`, () => this._request(method, JSON.parse(strParams)), options);\n    }\n}\nexports.ProviderHandler = ProviderHandler;\n//# sourceMappingURL=provider-handler.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ws_1 = __importDefault(require(\"ws\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass WsHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.inFlightRequests = new Map();\n        const { fork: { url, origin }, logging } = options;\n        this.connection = new ws_1.default(url.toString(), {\n            origin,\n            headers: this.headers\n        });\n        // `nodebuffer` is already the default, but I just wanted to be explicit\n        // here because when `nodebuffer` is the binaryType the `message` event's\n        // data type is guaranteed to be a `Buffer`. We don't need to check for\n        // different types of data.\n        // I mention all this because if `arraybuffer` or `fragment` is used for the\n        // binaryType the `\"message\"` event's `data` may end up being\n        // `ArrayBuffer | Buffer`, or `Buffer[] | Buffer`, respectively.\n        // If you need to change this, you probably need to change our `onMessage`\n        // handler too.\n        this.connection.binaryType = \"nodebuffer\";\n        this.open = this.connect(this.connection, logging);\n        this.connection.onclose = () => {\n            // try to connect again...\n            // Issue: https://github.com/trufflesuite/ganache/issues/3476\n            // TODO: backoff and eventually fail\n            // Issue: https://github.com/trufflesuite/ganache/issues/3477\n            this.open = this.connect(this.connection, logging);\n        };\n        this.abortSignal.addEventListener(\"abort\", () => {\n            this.connection.onclose = null;\n            this.connection.close(1000);\n        });\n        this.connection.onmessage = this.onMessage.bind(this);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        await this.open;\n        if (this.abortSignal.aborted)\n            return Promise.reject(new ethereum_utils_1.AbortError());\n        const key = JSON.stringify({ method, params });\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const messageId = this.id++;\n            const deferred = (0, deferred_1.default)();\n            // TODO: timeout an in-flight request after some amount of time\n            // Issue: https://github.com/trufflesuite/ganache/issues/3478\n            this.inFlightRequests.set(messageId, deferred);\n            this.connection.send(`${JSONRPC_PREFIX}${messageId},${key.slice(1)}`);\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n    onMessage(event) {\n        if (event.type !== \"message\")\n            return;\n        // data is always a `Buffer` because the websocket's binaryType is set to\n        // `nodebuffer`\n        const raw = event.data;\n        // TODO: handle invalid JSON (throws on parse)?\n        // Issue: https://github.com/trufflesuite/ganache/issues/3479\n        const response = JSON.parse(raw);\n        const id = response.id;\n        const prom = this.inFlightRequests.get(id);\n        if (prom) {\n            this.inFlightRequests.delete(id);\n            prom.resolve({ response, raw: raw });\n        }\n    }\n    connect(connection, logging) {\n        let open = new Promise((resolve, reject) => {\n            connection.onopen = resolve;\n            connection.onerror = reject;\n        });\n        open.then(() => {\n            connection.onopen = null;\n            connection.onerror = null;\n        }, err => {\n            logging.logger.log(err);\n        });\n        return open;\n    }\n    async close() {\n        await super.close();\n        this.connection.close();\n    }\n}\nexports.WsHandler = WsHandler;\n//# sourceMappingURL=ws-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction encode(parts) {\n    const l = parts.length;\n    let totalLength = 0;\n    const pieces = [];\n    for (let i = 0; i < l; i++) {\n        const part = parts[i];\n        if (part === null) {\n            totalLength += 2; // {length of the length} (`1`) + {length} (`0`)\n            pieces.push([utils_1.BUFFER_ZERO, utils_1.BUFFER_EMPTY]);\n        }\n        else {\n            const length = part.length;\n            const lengthBuffer = utils_1.Quantity.toBuffer(length);\n            const lengthLength = lengthBuffer.length;\n            totalLength += 1 + lengthLength + length;\n            pieces.push([lengthBuffer, part]);\n        }\n    }\n    const encoded = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for (let i = 0; i < l; i++) {\n        const [lengthBuffer, part] = pieces[i];\n        const lengthLength = lengthBuffer.length;\n        encoded[offset++] = lengthLength;\n        lengthBuffer.copy(encoded, offset, 0, lengthLength);\n        part.copy(encoded, (offset += lengthLength), 0, part.length);\n        offset += part.length;\n    }\n    return encoded;\n}\nexports.encode = encode;\nfunction decode(encoded) {\n    const parts = [];\n    for (let i = 0, l = encoded.length; i < l;) {\n        const lengthLength = encoded[i++];\n        const length = utils_1.Quantity.from(encoded.slice(i, (i += lengthLength))).toNumber();\n        parts.push(encoded.slice(i, (i += length)));\n    }\n    return parts;\n}\nexports.decode = decode;\n//# sourceMappingURL=lexicographic-key-codec.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ancestry = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nclass Ancestry {\n    constructor(db, parent) {\n        /**\n         * Prevents fetching the same key from the database simultaneously.\n         */\n        this.cacheLock = new Map();\n        this.db = db;\n        if (parent == null) {\n            this.next = null;\n            this.knownAncestors = new Set();\n        }\n        else {\n            this.next = parent.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n                ? null\n                : parent.closestKnownAncestor;\n            this.knownAncestors = new Set([parent.hash.toString(\"hex\")]);\n        }\n    }\n    async loadNextAncestor(next) {\n        const k = next.toString(\"hex\");\n        if (this.cacheLock.has(k)) {\n            throw new Error(\"couldn't load next ancestor as it is locked\");\n        }\n        let resolver;\n        this.cacheLock.set(k, new Promise(resolve => {\n            resolver = resolve;\n        }));\n        const value = await this.db.get(next);\n        const node = tree_1.Tree.deserialize(next, value);\n        this.next = node.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n            ? null\n            : node.closestKnownAncestor;\n        this.knownAncestors.add(node.hash.toString(\"hex\"));\n        this.cacheLock.delete(k);\n        resolver();\n    }\n    async has(key) {\n        const strKey = key.toString(\"hex\");\n        if (this.knownAncestors.has(strKey)) {\n            return true;\n        }\n        else if (this.next) {\n            const cacheLock = this.cacheLock.get(this.next.toString(\"hex\"));\n            if (cacheLock) {\n                await cacheLock;\n                return this.has(key);\n            }\n            await this.loadNextAncestor(this.next);\n            return this.has(key);\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.Ancestry = Ancestry;\n//# sourceMappingURL=ancestry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockByNumber = exports.findClosestDescendants = exports.findClosestAncestor = exports.findRelated = exports.resolveTargetAndClosestAncestor = exports.setDbVersion = exports.getBlockNumberFromParams = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nfunction getBlockNumberFromParams(method, params) {\n    // get the request's block number\n    switch (method) {\n        case \"eth_getBlockByNumber\":\n            return params[0];\n        case \"eth_getTransactionCount\":\n        case \"eth_getCode\":\n        case \"eth_getBalance\":\n            return params[1];\n        case \"eth_getStorageAt\":\n            return params[2];\n        default:\n            return null;\n    }\n}\nexports.getBlockNumberFromParams = getBlockNumberFromParams;\nconst VERSION_KEY = Buffer.from(\"version\", \"utf-8\");\nasync function setDbVersion(db, version) {\n    // set the version if the DB was just created, or error if we already have\n    // a version, but it isn't what we expected\n    try {\n        const recordedVersion = await db.get(VERSION_KEY);\n        if (!version.equals(recordedVersion)) {\n            // in the future this is where database migrations would go\n            throw new Error(`Persistent cache version \"${version.toString()}\"\" is not understood.`);\n        }\n    }\n    catch (e) {\n        if (!e.notFound)\n            throw e;\n        // if we didn't have a `version` key we need to set one\n        await db.put(VERSION_KEY, version);\n    }\n}\nexports.setDbVersion = setDbVersion;\nasync function resolveTargetAndClosestAncestor(db, request, targetHeight, targetHash) {\n    let targetBlock;\n    let closestAncestor;\n    let previousClosestAncestor;\n    try {\n        const key = tree_1.Tree.encodeKey(targetHeight, targetHash);\n        targetBlock = tree_1.Tree.deserialize(key, await db.get(key));\n        if (targetBlock.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)) {\n            // we are the genesis/earliest block\n            closestAncestor = null;\n            previousClosestAncestor = null;\n        }\n        else {\n            previousClosestAncestor = tree_1.Tree.deserialize(targetBlock.closestKnownAncestor, await db.get(targetBlock.closestKnownAncestor));\n            // check if we are still the closest known ancestor\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, previousClosestAncestor.key)) || previousClosestAncestor;\n        }\n    }\n    catch (e) {\n        // something bad happened (I/O failure?), bail\n        if (!e.notFound)\n            throw e;\n        previousClosestAncestor = null;\n        // we couldn't find our target block in the database so we need to figure\n        // out it's relationships via the blockchain.\n        // In order to avoid requesting the \"earliest\" block unnecessarily, we\n        // assume the \"earliest\" block can't be before block 0 (which seems like a\n        // reasonable assumption to me!).\n        // If our target is block `0` then we can't have a closest ancestor since\n        // we are the first block\n        if (targetHeight.toBigInt() === 0n) {\n            closestAncestor = null;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash);\n        }\n        else {\n            const earliestBlock = await getBlockByNumber(request, ethereum_utils_1.Tag.earliest);\n            if (!earliestBlock)\n                throw new Error('Could not find \"earliest\" block.');\n            const { hash: earliestHash, number: earliestNumber } = earliestBlock;\n            const hash = utils_1.Data.from(earliestHash, 32);\n            const earliest = new tree_1.Tree(utils_1.Quantity.from(earliestNumber), hash);\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, earliest.key)) ||\n                    earliest;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash, closestAncestor.key);\n        }\n    }\n    return {\n        targetBlock,\n        closestAncestor,\n        previousClosestAncestor\n    };\n}\nexports.resolveTargetAndClosestAncestor = resolveTargetAndClosestAncestor;\nasync function* findRelated(db, request, options) {\n    const readStream = db.createReadStream({\n        keys: true,\n        values: true,\n        ...options\n    });\n    for await (const pair of readStream) {\n        const { key, value } = pair;\n        const node = tree_1.Tree.deserialize(key, value);\n        const { height: candidateHeight } = node.decodeKey();\n        const block = await getBlockByNumber(request, candidateHeight);\n        // if the chain has a block at this height, and the hash of the\n        // block is the same as the one in the db we've found our closest\n        // ancestor!\n        if (block != null && block.hash === utils_1.Data.toString(node.hash)) {\n            yield node;\n        }\n    }\n}\nexports.findRelated = findRelated;\n/**\n *\n * @param height - Search only before this block height (exclusive)\n * @param upTo - Search up to this key (inclusive)\n * @returns the closest known ancestor, or `upTo` if we know of no ancestors\n */\nasync function findClosestAncestor(db, request, height, upTo) {\n    const generator = findRelated(db, request, {\n        gte: upTo,\n        lt: tree_1.Tree.encodeKey(height, utils_1.Data.Empty),\n        reverse: true\n    });\n    const first = await generator.next();\n    await generator.return();\n    return first.value;\n}\nexports.findClosestAncestor = findClosestAncestor;\n/**\n *\n * @param height - Search only after this block height (exclusive)\n * @returns the closest known descendants, or null\n */\nasync function* findClosestDescendants(db, request, height) {\n    const generator = findRelated(db, request, {\n        gte: tree_1.Tree.encodeKey(utils_1.Quantity.from(height.toBigInt() + 1n), utils_1.Data.Empty),\n        reverse: false\n    });\n    for await (const node of generator) {\n        yield node;\n    }\n}\nexports.findClosestDescendants = findClosestDescendants;\nasync function getBlockByNumber(request, blockNumber) {\n    return await request(\"eth_getBlockByNumber\", [blockNumber.toString(), false]);\n}\nexports.getBlockByNumber = getBlockByNumber;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersistentCache = void 0;\nconst tree_1 = require(\"./tree\");\nconst fs_1 = require(\"fs\");\nconst env_paths_1 = __importDefault(require(\"env-paths\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ancestry_1 = require(\"./ancestry\");\nconst helpers_1 = require(\"./helpers\");\nconst levelup = require(\"levelup\");\nconst levelupOptions = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nconst leveldownOpts = { prefix: \"\" };\nconst maxValueByteBuffer = Buffer.from([0xff]);\n/**\n * A leveldb-backed cache that enables associating immutable data as it existed\n * at a specific height on a blockchain.\n *\n * The design affords faster db reads (one read to get known closest ancestors\n * and descendants) and fast db writes (one write per node in a relationship).\n */\nclass PersistentCache {\n    constructor() {\n        this.version = utils_1.BUFFER_ZERO;\n        /**\n         * `reBalancePromise` is used at shutdown to ensure we are done balancing the\n         * tree\n         *\n         */\n        this._reBalancePromise = null;\n        this.status = \"open\";\n    }\n    static async deleteDb(dbSuffix) {\n        return new Promise((resolve, reject) => {\n            const directory = PersistentCache.getDbDirectory(dbSuffix);\n            leveldown_1.default.destroy(directory, err => {\n                if (err)\n                    return void reject(err);\n                resolve(void 0);\n            });\n        });\n    }\n    /**\n     * Serializes the entire database world state into a JSON tree\n     */\n    static async serializeDb(dbSuffix) {\n        const cache = await PersistentCache.create(dbSuffix);\n        return await new Promise(async (resolve) => {\n            const rs = cache.ancestorDb.createReadStream({\n                gte: utils_1.BUFFER_ZERO,\n                keys: true,\n                values: true\n            });\n            const tree = {};\n            const collection = {};\n            for await (const data of rs) {\n                const { key, value } = data;\n                const node = tree_1.Tree.deserialize(key, value);\n                node.height = node.decodeKey().height.toNumber();\n                const keyHex = key.toString(\"hex\");\n                const parentKeyHex = node.closestKnownAncestor.toString(\"hex\");\n                collection[keyHex] = node;\n                if (node.closestKnownAncestor.length === 0) {\n                    tree[keyHex] = node;\n                }\n                else {\n                    const descendants = collection[parentKeyHex].descendants || {};\n                    descendants[keyHex] = node;\n                    collection[parentKeyHex].descendants = descendants;\n                }\n                node.hash = utils_1.Data.toString(node.hash);\n                node.parent =\n                    node.closestKnownAncestor.length > 0\n                        ? utils_1.Data.toString(collection[parentKeyHex].hash)\n                        : null;\n                delete node.key;\n                // delete node.hash;\n                delete node.closestKnownDescendants;\n                delete node.closestKnownAncestor;\n            }\n            await cache.close();\n            resolve(JSON.parse(JSON.stringify(tree)));\n        });\n    }\n    static getDbDirectory(suffix = \"\") {\n        const { data: directory } = (0, env_paths_1.default)(\"Ganache/db\", {\n            suffix\n        });\n        return directory;\n    }\n    static async create(dbSuffix) {\n        const cache = new PersistentCache();\n        const directory = PersistentCache.getDbDirectory(dbSuffix);\n        await fs_1.promises.mkdir(directory, { recursive: true });\n        const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n        const db = await new Promise((resolve, reject) => {\n            const db = levelup(store, (err) => {\n                if (err)\n                    return void reject(err);\n                resolve(db);\n            });\n        });\n        cache.db = db;\n        cache.cacheDb = (0, subleveldown_1.default)(db, \"c\", levelupOptions);\n        cache.ancestorDb = (0, subleveldown_1.default)(db, \"a\", levelupOptions);\n        await cache.cacheDb.open();\n        await cache.ancestorDb.open();\n        await (0, helpers_1.setDbVersion)(cache.db, cache.version);\n        return cache;\n    }\n    async initialize(height, hash, request) {\n        this.hashBuffer = hash.toBuffer();\n        this.request = request;\n        const { targetBlock, closestAncestor, previousClosestAncestor } = await (0, helpers_1.resolveTargetAndClosestAncestor)(this.ancestorDb, this.request, height, hash);\n        this.ancestry = new ancestry_1.Ancestry(this.ancestorDb, closestAncestor);\n        const atomicBatch = this.ancestorDb.batch();\n        // if we changed closest ancestors remove our targetBlock from the previous\n        // ancestor so our target block doesn't appear in the database more than\n        // once, and update our targetBlock to point to this new ancestor\n        if (previousClosestAncestor &&\n            !previousClosestAncestor.key.equals(closestAncestor.key)) {\n            targetBlock.closestKnownAncestor = closestAncestor.key;\n            const index = previousClosestAncestor.closestKnownDescendants.findIndex(buf => buf.equals(targetBlock.key));\n            previousClosestAncestor.closestKnownDescendants.splice(index, 1);\n            atomicBatch.put(previousClosestAncestor.key, previousClosestAncestor.serialize());\n        }\n        let allKnownDescendants = [...targetBlock.closestKnownDescendants];\n        // if we don't have a closestAncestor it because the target block is block 0\n        if (closestAncestor == null) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        }\n        else {\n            const ancestorsDescendants = [targetBlock.key];\n            await Promise.all(closestAncestor.closestKnownDescendants.map(async (descendantKey) => {\n                // don't match ourself\n                if (descendantKey.equals(targetBlock.key))\n                    return;\n                const { height: descendantHeight } = tree_1.Tree.decodeKey(descendantKey);\n                // if the block number is less than our own it can't be our descendant\n                if (descendantHeight.toBigInt() <= height.toBigInt()) {\n                    ancestorsDescendants.push(descendantKey);\n                    return;\n                }\n                const descendantValue = await this.ancestorDb.get(descendantKey);\n                const descendantNode = tree_1.Tree.deserialize(descendantKey, descendantValue);\n                const descendantRawBlock = await this.getBlock(descendantHeight);\n                // if the block doesn't exist on our chain, it can't be our child,\n                // keep it in the parent\n                if (descendantRawBlock == null ||\n                    descendantRawBlock.hash !== utils_1.Data.toString(descendantNode.hash, 32)) {\n                    ancestorsDescendants.push(descendantKey);\n                }\n                else {\n                    targetBlock.closestKnownDescendants.push(descendantNode.key);\n                    // keep track of *all* known descendants so we don't bother\n                    // checking if they are a known closest descendant later on\n                    allKnownDescendants.push(...descendantNode.closestKnownDescendants);\n                    descendantNode.closestKnownAncestor = targetBlock.key;\n                    // update the descendant node with its newly assigned\n                    // closestKnownAncestor\n                    atomicBatch.put(descendantNode.key, descendantNode.serialize());\n                }\n            }));\n            closestAncestor.closestKnownDescendants = ancestorsDescendants;\n            atomicBatch.put(closestAncestor.key, closestAncestor.serialize());\n        }\n        // TODO(perf): we always re-save the targetBlock but could optimize to only\n        // resave if it is needed.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3485\n        atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        await atomicBatch.write();\n        // we DO want to re-balance the descendants, but we don't want to wait for\n        // it because it can't effect our current fork block's cache results since\n        // these caches will be for blocks higher than our own fork block\n        // Do not `await` this.\n        this._reBalancePromise = this.reBalanceDescendantTree(height, targetBlock, allKnownDescendants)\n            // we don't care if it fails because this is an optimization that only\n            // matters for _future_ runs of ganache for blocks beyond our current fork\n            // block\n            .catch(_ => { })\n            .finally(() => {\n            this._reBalancePromise = null;\n        });\n    }\n    async getBlock(height) {\n        return await (0, helpers_1.getBlockByNumber)(this.request, height);\n    }\n    async reBalanceDescendantTree(height, targetBlock, allKnownDescendants) {\n        const atomicBatch = this.ancestorDb.batch();\n        const closestKnownDescendants = targetBlock.closestKnownDescendants;\n        const startSize = closestKnownDescendants.length;\n        for await (const maybeDescendant of (0, helpers_1.findClosestDescendants)(this.ancestorDb, this.request, height)) {\n            const key = maybeDescendant.key;\n            // don't match with our own self\n            if (targetBlock.key.equals(key))\n                continue;\n            // this possibleDescendent's descendants can't be our direct descendants\n            // because trees can't merge\n            allKnownDescendants.push(...maybeDescendant.closestKnownDescendants);\n            // if this already is a descendent of ours we can skip it\n            if (closestKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // if this already is a descendent of one of our descendants skip it\n            if (allKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // move the descendant from the parent to the target\n            const parentTree = tree_1.Tree.deserialize(maybeDescendant.closestKnownAncestor, await this.ancestorDb.get(maybeDescendant.closestKnownAncestor));\n            parentTree.closestKnownDescendants.splice(parentTree.closestKnownDescendants.findIndex(d => d.equals(key)), 1);\n            maybeDescendant.closestKnownAncestor = targetBlock.key;\n            closestKnownDescendants.push(maybeDescendant.key);\n            atomicBatch.put(parentTree.key, parentTree.serialize());\n            atomicBatch.put(maybeDescendant.key, maybeDescendant.serialize());\n            // if the cache has been closed stop doing work so we can flush what we\n            // have to the database; descendant resolution shouldn't prevent us from\n            // fulling closing.\n            if (this.status === \"closed\") {\n                break;\n            }\n        }\n        // only write if we have changes to write\n        if (startSize !== closestKnownDescendants.length) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n            // check `this.ancestorDb.isOpen()` as we don't need to try to write if\n            // the db was shutdown in the meantime. This can happen if ganache was\n            // closed while we were still updating the descendants\n            if (atomicBatch.length > 0 && this.ancestorDb.isOpen())\n                await atomicBatch.write();\n        }\n    }\n    async get(method, params, key) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return;\n        const height = utils_1.Quantity.from(blockNumber);\n        const bufKey = Buffer.from(key);\n        const start = lexico.encode([height.toBuffer(), bufKey]);\n        const end = Buffer.concat([start, maxValueByteBuffer]);\n        const readStream = this.cacheDb.createReadStream({\n            gt: start,\n            lt: end,\n            keys: true,\n            values: true\n        });\n        for await (const data of readStream) {\n            const { key: k, value } = data;\n            const [_height, _key, blockHash] = lexico.decode(k);\n            // if our key no longer matches make sure we don't keep searching\n            if (!_key.equals(bufKey))\n                return;\n            if (this.hashBuffer.equals(blockHash) ||\n                (await this.ancestry.has(blockHash))) {\n                return value;\n            }\n        }\n    }\n    async put(method, params, key, value) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return false;\n        const height = utils_1.Quantity.from(blockNumber);\n        const dbKey = lexico.encode([\n            height.toBuffer(),\n            Buffer.from(key),\n            this.hashBuffer\n        ]);\n        await this.cacheDb.put(dbKey, value);\n        return true;\n    }\n    async close() {\n        if (this.status === \"closed\")\n            return;\n        this.status = \"closed\";\n        if (this.cacheDb) {\n            await this.cacheDb.close();\n        }\n        if (this.ancestorDb) {\n            await this._reBalancePromise;\n            await this.ancestorDb.close();\n        }\n        if (this.db) {\n            await this.db.close();\n        }\n    }\n}\nexports.PersistentCache = PersistentCache;\n//# sourceMappingURL=persistent-cache.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tree = void 0;\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp = __importStar(require(\"@ganache/rlp\"));\n/**\n * A tree: https://en.wikipedia.org/wiki/Rose_tree\n * One parent, multiple children\n */\nclass Tree {\n    constructor(height, hash, closestKnownAncestor = utils_1.BUFFER_EMPTY) {\n        this.closestKnownDescendants = [];\n        this.key = Tree.encodeKey(height, hash);\n        this.hash = hash.toBuffer();\n        this.closestKnownAncestor = closestKnownAncestor;\n    }\n    serialize() {\n        return rlp.encode([\n            this.hash,\n            this.closestKnownAncestor,\n            this.closestKnownDescendants\n        ]);\n    }\n    decodeKey() {\n        return Tree.decodeKey(this.key);\n    }\n    static decodeKey(key) {\n        const [height, hash] = lexico.decode(key);\n        return {\n            height: utils_1.Quantity.from(height),\n            hash: utils_1.Data.from(hash)\n        };\n    }\n    static deserialize(key, value) {\n        const [hash, parent, children] = rlp.decode(value);\n        const tree = Object.create(Tree.prototype);\n        tree.key = key;\n        tree.hash = hash;\n        tree.closestKnownAncestor = parent;\n        tree.closestKnownDescendants = children;\n        return tree;\n    }\n    static encodeKey(height, hash) {\n        return lexico.encode([height.toBuffer(), hash.toBuffer()]);\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LimitCounter = void 0;\n/**\n * @param timestamp -\n * @returns the milliseconds that have elapsed since `timestamp`\n */\nfunction timeSince(timestamp) {\n    return Date.now() - timestamp;\n}\nclass LimitCounter {\n    constructor(windowLength) {\n        this.counters = new Map();\n        this.windowLength = windowLength;\n    }\n    evict() {\n        const d = this.windowLength * 3;\n        if (timeSince(this.lastEvict) < d) {\n            return;\n        }\n        this.lastEvict = Date.now();\n        const counters = this.counters;\n        counters.forEach((v, k) => {\n            if (timeSince(v.updatedAt) >= d) {\n                counters.delete(k);\n            }\n        });\n    }\n    increment(currentWindow) {\n        this.evict();\n        let v = this.counters.get(currentWindow);\n        if (v == null) {\n            this.counters.set(currentWindow, { value: 1, updatedAt: Date.now() });\n        }\n        else {\n            v.value += 1;\n            v.updatedAt = Date.now();\n        }\n    }\n    get(currentWindow, previousWindow) {\n        let curr = this.counters.get(currentWindow);\n        if (curr == null) {\n            curr = { value: 0, updatedAt: Date.now() };\n        }\n        let prev = this.counters.get(previousWindow);\n        if (prev == null) {\n            prev = { value: 0, updatedAt: Date.now() };\n        }\n        return [curr.value, prev.value];\n    }\n}\nexports.LimitCounter = LimitCounter;\n//# sourceMappingURL=limit-counter.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst semaphore_1 = __importDefault(require(\"semaphore\"));\nconst limit_counter_1 = require(\"./limit-counter\");\n/**\n * Sleeps the specified number of milliseconds, then resolves the Promise.\n * Rejects with an `AbortError` if the provided `signal` is already aborted. If\n * the signal's `\"abort\"` event is invoked while sleeping, the the promise\n * rejects with an `AbortError`.\n *\n * @param ms - the number of milliseconds to wait before resolving\n * @param abortSignal - the\n * @returns a promise that resolves when `ms`milliseconds have elapsed, or\n * rejects if the `signal` is aborted.\n */\nconst sleep = (ms, signal) => {\n    if (signal.aborted)\n        return Promise.reject(new ethereum_utils_1.AbortError());\n    return new Promise((resolve, reject) => {\n        function abort() {\n            clearTimeout(timer);\n            signal.removeEventListener(\"abort\", abort);\n            reject(new ethereum_utils_1.AbortError());\n        }\n        const timer = setTimeout(() => {\n            signal.removeEventListener(\"abort\", abort);\n            resolve();\n        }, ms);\n        signal.addEventListener(\"abort\", abort);\n    });\n};\n/**\n * @param timestamp -\n * @param duration -\n * @returns the result of rounding `timestamp` toward zero to a multiple of\n * `duration`.\n */\nfunction timeTruncate(timestamp, duration) {\n    return timestamp - (timestamp % duration);\n}\n/**\n * @param result -\n * @returns true if the result is a JSON-RPC LIMIT_EXCEEDED error\n */\nfunction isExceededLimitError(response) {\n    return ((0, utils_1.hasOwn)(response, \"error\") &&\n        response.error != null &&\n        response.error.code === utils_1.JsonRpcErrorCode.LIMIT_EXCEEDED);\n}\n/**\n * A sliding window rate limiter.\n *\n * Rate estimation from\n * https://blog.cloudflare.com/counting-things-a-lot-of-different-things/\n *\n * Let's say we set a limit of 50 requests per minute. The counter can be\n * thought of like this:\n *\n * ```ascii\n *         ╔══════════════════════════════════╗\n *         ║   sampling period: 60 seconds    ║\n * ╭───────╫────────────────────────┬─────────╫──────────────────────╮\n * │       ║previous minute         │         current minute         │\n * │       ║  42 requests           │         ║18 requests           │\n * ╰───────╫────────────────────────┼─────────╫──────────────────────╯\n *         ║         45 secs        │ 15 secs ║\n *         ╚════════════════════════╧═════════╝\n * ```\n *\n * In this situation, we did 18 requests during the current minute, which\n * started 15 seconds ago, and 42 requests during the entire previous minute.\n * Based on this information, the rate approximation is calculated like this:\n *\n * ```javascript\n * rate = (42 * (45 / 60)) + 18\n *      = (42 * 0.75) + 18\n *      = 49.5 // requests\n *\n *      = 59.5 // requests\n * ```\n *\n * One more request during the next second and the rate limiter will kick in.\n *\n * This algorithm assumes a constant rate of requests during the previous\n * sampling period (which can be any time span), so the result is only\n * an approximation of the actual rate, but it is quick to calculate and\n * lightweight.\n */\nclass RateLimiter {\n    constructor(requestLimit, windowSizeMs, abortSignal) {\n        this.sem = (0, semaphore_1.default)(1);\n        this.take = () => new Promise(resolve => this.sem.take(resolve));\n        this.mustBackoff = null;\n        this.counter = 0;\n        this.requestLimit = requestLimit;\n        // the rate limiter splits the window in 2 to measure the RPS\n        this.windowSizeMs = windowSizeMs / 2;\n        this.limitCounter = new limit_counter_1.LimitCounter(this.windowSizeMs);\n        this.abortSignal = abortSignal;\n    }\n    /**\n     * @param now -\n     * @param currentWindow -\n     * @returns the current request rate and the allowed execution time of the\n     * next request\n     */\n    status(now, currentWindow) {\n        const limit = this.requestLimit;\n        const windowSizeMs = this.windowSizeMs;\n        const currWindow = currentWindow;\n        const prevWindow = currWindow - windowSizeMs;\n        const [currCount, prevCount] = this.limitCounter.get(currWindow, prevWindow);\n        let rate;\n        if (prevCount === 0) {\n            rate = currCount;\n        }\n        else {\n            // use the average for the previous window, plus everything for this\n            // window\n            rate =\n                prevCount * ((windowSizeMs - (now - currWindow)) / windowSizeMs) +\n                    currCount;\n        }\n        // limit <= 0 means the limiter is disabled\n        if (limit > 0 && rate + 1 > limit) {\n            const nextCount = currCount + 1;\n            const nextLimit = limit + 1;\n            const next = prevCount === 0\n                ? currWindow + windowSizeMs + windowSizeMs / nextLimit\n                : (windowSizeMs * (prevCount + nextCount - nextLimit)) / prevCount +\n                    currWindow;\n            return { rate, next };\n        }\n        return { rate, next: now };\n    }\n    /**\n     * Executes the given fn within the confines of the configured rate limit. If\n     * the function's return value is a JSON-RPC LIMIT_EXCEEDED error, it will\n     * automatically retry with the given `backoff_seconds`\n     * @param fn -\n     */\n    async handle(fn) {\n        // allow scheduling one fn at a time\n        await this.take();\n        try {\n            return await this.schedule(fn);\n        }\n        finally {\n            this.sem.leave();\n        }\n    }\n    async schedule(fn) {\n        const signal = this.abortSignal;\n        while (true) {\n            if (signal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if (this.mustBackoff)\n                await this.mustBackoff;\n            const now = Date.now();\n            const currentWindow = timeTruncate(now, this.windowSizeMs);\n            const { rate, next } = this.status(now, currentWindow);\n            // process.stdout.write(\n            //   `rate: ${rate}, wait: ${next - now}              \\r`\n            // );\n            // if this request would be over the rate limit and the amount of time\n            // we'd need to back off is > 1ms we need to schedule this in the future\n            if (rate + 1 > this.requestLimit && next > now) {\n                await sleep(Date.now() - next, signal);\n            }\n            else {\n                this.limitCounter.increment(currentWindow);\n                const result = await fn();\n                if (isExceededLimitError(result.response)) {\n                    if ((0, utils_1.hasOwn)(result.response.error.data, \"rate\")) {\n                        const backoffSeconds = result.response.error.data.rate.backoff_seconds;\n                        // console.log(`backing off for ${backoffSeconds}`);\n                        // console.log(result.error.data.rate);\n                        // TODO: I need to make all in-flight requests that will soon return\n                        // a LIMIT_EXCEEDED error behave, otherwise we'll just send ALL\n                        // requests back to Infura simultaneously after their initial 30\n                        // backoff_seconds have elapsed.\n                        // Issue: https://github.com/trufflesuite/ganache/issues/3480\n                        //\n                        // When we are *not* self-rate limited (meaning fork.rps isn't set)\n                        // we need to be able to go at full speed until we are, and THEN we\n                        // need to go at whatever infura wants.\n                        //\n                        // TODO: TODO: ask infura to add the X-Rate-Limit* headers to all\n                        // HTTP responses so we can poll for info to help us avoid ever\n                        // getting rate limited in the first place.\n                        // this is part of an attempt at solving the above comment\n                        this.requestLimit =\n                            result.response.error.data.rate.allowed_rps *\n                                (this.windowSizeMs / 1000);\n                        const limiter = (this.mustBackoff = sleep(backoffSeconds * 1000, signal));\n                        await this.mustBackoff;\n                        if (this.mustBackoff === limiter) {\n                            this.mustBackoff = null;\n                        }\n                        continue;\n                    }\n                    else {\n                        // we don't know how to parse this error, so we do nothing, I guess?\n                    }\n                }\n                return result;\n            }\n        }\n    }\n}\nexports.default = RateLimiter;\n//# sourceMappingURL=rate-limiter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkStateManager = void 0;\nconst rlp_1 = require(\"@ganache/rlp\");\nconst statemanager_1 = require(\"@ethereumjs/statemanager\");\nconst cache_1 = require(\"./cache\");\n/**\n * Interface for getting and setting data from an underlying\n * state trie.\n */\nclass ForkStateManager extends statemanager_1.DefaultStateManager {\n    /**\n     * Instantiate the StateManager interface.\n     */\n    constructor(opts) {\n        super(opts);\n        this._cache = new cache_1.ForkCache(opts.trie);\n        this.prefixCodeHashes = opts.prefixCodeHashes || false;\n    }\n    /**\n     * Copies the current instance of the `StateManager`\n     * at the last fully committed point, i.e. as if all current\n     * checkpoints were reverted.\n     */\n    copy() {\n        return new ForkStateManager({\n            trie: this._trie.copy(false),\n            prefixCodeHashes: this.prefixCodeHashes\n        });\n    }\n    /**\n     * Creates a storage trie from the primary storage trie\n     * for an account and saves this in the storage cache.\n     * @private\n     */\n    async _lookupStorageTrie(address) {\n        // from state trie\n        const account = await this.getAccount(address);\n        const storageTrie = this._trie.copy(true);\n        storageTrie.setContext(account.storageRoot, address.buf, storageTrie.blockNumber);\n        // we copy checkpoints over only for the metadata checkpoints, not the trie\n        // checkpoints.\n        storageTrie.database().checkpoints = [];\n        return storageTrie;\n    }\n    /**\n     * Gets the storage value associated with the provided `address` and `key`.\n     * This method returns the shortest representation of the stored value.\n     * @param address - Address of the account to get the storage for\n     * @param key - Key in the account's storage to get the value for. Must be 32\n     * bytes long.\n     * @returns {Promise<Buffer>} - The storage value for the account\n     * corresponding to the provided address at the provided key. If this does not\n     * exist an empty `Buffer` is returned.\n     */\n    async getContractStorage(address, key) {\n        const trie = (await this._getStorageTrie(address));\n        const value = await trie.get(key);\n        return (0, rlp_1.decode)(value);\n    }\n}\nexports.ForkStateManager = ForkStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkTrie = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"../helpers/trie\");\nconst trie_2 = require(\"@ethereumjs/trie\");\nconst lexico = __importStar(require(\"./lexicographic-key-codec\"));\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst trie_db_1 = require(\"../trie-db\");\nconst DELETED_VALUE = Buffer.allocUnsafe(1).fill(1);\nconst GET_CODE = \"eth_getCode\";\nconst GET_NONCE = \"eth_getTransactionCount\";\nconst GET_BALANCE = \"eth_getBalance\";\nconst GET_STORAGE_AT = \"eth_getStorageAt\";\nconst MetadataSingletons = new WeakMap();\nconst LEVELDOWN_OPTIONS = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nfunction isEqualKey(encodedKey, address, key) {\n    const decodedKey = lexico.decode(encodedKey);\n    const [_, keyAddress, deletedKey] = decodedKey;\n    return keyAddress.equals(address) && deletedKey.equals(key);\n}\nclass ForkTrie extends trie_1.GanacheTrie {\n    constructor(db, root, blockchain) {\n        super(db, root, blockchain);\n        this.address = null;\n        this.isPreForkBlock = false;\n        /**\n         * Gets an account from the fork/fallback.\n         *\n         * @param address - the address of the account\n         * @param blockNumber - the block number at which to query the fork/fallback.\n         * @param stateRoot - the state root at the given blockNumber\n         */\n        this.accountFromFallback = async (address, blockNumber) => {\n            const { fallback } = this.blockchain;\n            const number = this.blockchain.fallback.selectValidForkBlockNumber(blockNumber);\n            // get nonce, balance, and code from the fork/fallback\n            const codeProm = fallback.request(GET_CODE, [address, number]);\n            const promises = [\n                fallback.request(GET_NONCE, [address, number]),\n                fallback.request(GET_BALANCE, [address, number]),\n                null\n            ];\n            // create an account so we can serialize everything later\n            const account = new ethereum_utils_1.Account(address);\n            // because code requires additional asynchronous processing, we await and\n            // process it ASAP\n            try {\n                const codeHex = await codeProm;\n                if (codeHex !== \"0x\") {\n                    const code = utils_1.Data.toBuffer(codeHex);\n                    // the codeHash is just the keccak hash of the code itself\n                    account.codeHash = (0, utils_1.keccak)(code);\n                    if (!account.codeHash.equals(util_1.KECCAK256_NULL)) {\n                        // insert the code directly into the database with a key of `codeHash`\n                        promises[2] = this.db.put(account.codeHash, code);\n                    }\n                }\n            }\n            catch (e) {\n                // Since we fired off some promises that may throw themselves we need to\n                // catch these errors and discard them.\n                Promise.all(promises).catch(e => { });\n                throw e;\n            }\n            // finally, set the `nonce` and `balance` on the account before returning\n            // the serialized data\n            const [nonce, balance] = await Promise.all(promises);\n            account.nonce =\n                nonce === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(nonce, true);\n            account.balance =\n                balance === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(balance);\n            return account.serialize();\n        };\n        this.storageFromFallback = async (address, key, blockNumber) => {\n            const result = await this.blockchain.fallback.request(GET_STORAGE_AT, [\n                `0x${address.toString(\"hex\")}`,\n                `0x${key.toString(\"hex\")}`,\n                this.blockchain.fallback.selectValidForkBlockNumber(blockNumber)\n            ]);\n            if (!result)\n                return null;\n            // remove the `0x` and all leading 0 pairs:\n            const compressed = result.replace(/^0x(00)*/, \"\");\n            const buf = Buffer.from(compressed, \"hex\");\n            return (0, rlp_1.encode)(buf);\n        };\n        this.accounts = blockchain.accounts;\n        this.blockNumber = this.blockchain.fallback.blockNumber;\n        this.forkBlockNumber = this.blockNumber.toBigInt();\n        let metadataDB = MetadataSingletons.get(db);\n        if (!metadataDB) {\n            metadataDB = db.sublevel(\"f\", LEVELDOWN_OPTIONS);\n            MetadataSingletons.set(db, metadataDB);\n        }\n        this.metadataDB = metadataDB;\n        this.checkpointedMetadata = new trie_2.CheckpointDB(new trie_db_1.TrieDB(this.metadataDB));\n    }\n    checkpoint() {\n        super.checkpoint();\n        this.checkpointedMetadata.checkpoint(this.root());\n    }\n    async commit() {\n        await Promise.all([super.commit(), this.checkpointedMetadata.commit()]);\n    }\n    async revert() {\n        await Promise.all([super.revert(), this.checkpointedMetadata.revert()]);\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this._root = stateRoot;\n        this.address = address;\n        this.blockNumber = blockNumber;\n        this.isPreForkBlock = blockNumber.toBigInt() < this.forkBlockNumber;\n    }\n    async put(key, val) {\n        return super.put(key, val);\n    }\n    /**\n     * Removes saved metadata from the given block range (inclusive)\n     * @param startBlockNumber - (inclusive)\n     * @param endBlockNumber - (inclusive)\n     */\n    async revertMetaData(startBlockNumber, endBlockNumber) {\n        const db = this.metadataDB;\n        const stream = db.createReadStream({\n            gte: lexico.encode([startBlockNumber.toBuffer()]),\n            lt: lexico.encode([\n                utils_1.Quantity.from(endBlockNumber.toBigInt() + 1n).toBuffer()\n            ])\n        });\n        const batch = db.batch();\n        for await (const [key] of stream) {\n            batch.del(key);\n        }\n        await batch.write();\n    }\n    createDelKey(key) {\n        const blockNum = this.blockNumber.toBuffer();\n        return lexico.encode([blockNum, this.address, key]);\n    }\n    /**\n     * Checks if the key was deleted (locally -- not on the fork)\n     * @param key -\n     */\n    async keyWasDeleted(key) {\n        const selfAddress = this.address === null ? utils_1.BUFFER_EMPTY : this.address;\n        // check the uncommitted checkpoints for deleted keys before\n        // checking the database itself\n        // TODO(perf): there is probably a better/faster way of doing this for the\n        // common case.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3483\n        const { checkpoints } = this.checkpointedMetadata;\n        for (let i = checkpoints.length - 1; i >= 0; i--) {\n            for (let [encodedKeyStr, value] of checkpoints[i].keyValueMap.entries()) {\n                if (!value || !value.equals(DELETED_VALUE))\n                    continue;\n                const encodedKey = Buffer.from(encodedKeyStr, \"binary\");\n                if (isEqualKey(encodedKey, selfAddress, key))\n                    return true;\n            }\n        }\n        // since we didn't find proof of deletion in a checkpoint let's check the\n        // database for it.\n        // We start searching from our database key (blockNum + address + key)\n        // down to the earliest block we know about.\n        // TODO(perf): this is just going to be slow once we get lots of keys\n        // because it just checks every single key we've ever deleted (before this\n        // one).\n        // Issue: https://github.com/trufflesuite/ganache/issues/3484\n        const db = this.metadataDB;\n        const stream = db.createReadStream({\n            lte: this.createDelKey(key),\n            reverse: true\n        });\n        for await (const data of stream) {\n            const { key: encodedKey, value } = data;\n            if (!value || !value.equals(DELETED_VALUE))\n                continue;\n            if (isEqualKey(encodedKey, selfAddress, key))\n                return true;\n        }\n        // we didn't find proof of deletion so we return `false`\n        return false;\n    }\n    // note: this function is a slightly modified version of\n    // https://github.com/ethereumjs/ethereumjs-monorepo/blob/34f3dcdf37d2fbeffeb41dc3de693f59b91c46bc/packages/trie/src/trie/trie.ts#L218\n    async del(key) {\n        await this._lock.acquire();\n        // we only track if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock) {\n            const delKey = this.createDelKey(key);\n            const metaDataPutPromise = this.checkpointedMetadata.put(delKey, DELETED_VALUE);\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n            await metaDataPutPromise;\n        }\n        else {\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n        }\n        this._lock.release();\n    }\n    async get(key) {\n        const value = await super.get(key);\n        if (value != null)\n            return value;\n        // since we don't have this key in our local trie check if we've have\n        // deleted it (locally)\n        // we only check if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock && (await this.keyWasDeleted(key)))\n            return null;\n        if (this.address === null) {\n            // if the trie context's address isn't set, our key represents an address:\n            return this.accountFromFallback(ethereum_address_1.Address.from(key), this.blockNumber);\n        }\n        else {\n            // otherwise the key represents storage at the given address:\n            return this.storageFromFallback(this.address, key, this.blockNumber);\n        }\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of ForkTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will\n     * contain the checkpointing metadata and will use the same scratch as\n     * underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new ForkTrie(this.db.copy(), this.root(), this.blockchain);\n        secureTrie.accounts = this.accounts;\n        secureTrie.address = this.address;\n        secureTrie.blockNumber = this.blockNumber;\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n            // Our metadata checkpoints need to be the same reference to the\n            // parent's metadata checkpoints so that we can continue to track these\n            // changes on this copy, otherwise deletions made to a contract's storage\n            // may not be tracked.\n            // Note: db.checkpoints don't need this same treatment because of the way\n            // the statemanager uses a contract's trie: it doesn't ever save to it.\n            // Instead, it saves to its own internal cache, which eventually gets\n            // reverted or committed (flushed). Our metadata doesn't utilize a central\n            // cache.\n            secureTrie.checkpointedMetadata.checkpoints =\n                this.checkpointedMetadata.checkpoints;\n        }\n        return secureTrie;\n    }\n}\nexports.ForkTrie = ForkTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveFromIndex = exports.deriveFromPath = exports.createAccountFromSeed = exports.createAccountGeneratorFromSeedAndPath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst HARDENED_OFFSET = 0x80000000;\nconst MASTER_SECRET = Buffer.from(\"Bitcoin seed\", \"utf8\");\nfunction createAccountGeneratorFromSeedAndPath(seedBuffer, hdPath) {\n    const parent = createAccountFromSeed(seedBuffer);\n    const path = deriveFromPath(hdPath, parent);\n    return (index) => {\n        return deriveFromIndex(index, path);\n    };\n}\nexports.createAccountGeneratorFromSeedAndPath = createAccountGeneratorFromSeedAndPath;\nfunction createAccountFromSeed(seedBuffer) {\n    const I = (0, crypto_1.createHmac)(\"sha512\", MASTER_SECRET).update(seedBuffer).digest();\n    const privateKey = I.slice(0, 32);\n    const chainCode = I.slice(32);\n    const publicKey = makePublicKey(privateKey);\n    return {\n        privateKey,\n        chainCode,\n        publicKey\n    };\n}\nexports.createAccountFromSeed = createAccountFromSeed;\nfunction deriveFromPath(fullPath, child) {\n    fullPath.forEach(function (c, i) {\n        if (i === 0) {\n            if (!/^[mM]{1}/.test(c)) {\n                throw new Error('Path must start with \"m\" or \"M\"');\n            }\n            return;\n        }\n        const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n        let childIndex = parseInt(c, 10);\n        if (childIndex >= HARDENED_OFFSET)\n            throw new Error(\"Invalid index\");\n        if (hardened)\n            childIndex += HARDENED_OFFSET;\n        child = deriveChild(childIndex, hardened, child.privateKey, child.publicKey, child.chainCode);\n    });\n    return child;\n}\nexports.deriveFromPath = deriveFromPath;\nfunction deriveFromIndex(index, child) {\n    if (index >= HARDENED_OFFSET)\n        throw new Error(\"Invalid index\");\n    return deriveChild(index, false, child.privateKey, child.publicKey, child.chainCode);\n}\nexports.deriveFromIndex = deriveFromIndex;\nfunction makePublicKey(privateKey) {\n    const publicKey = Buffer.allocUnsafe(33);\n    switch (secp256k1_1.default.publicKeyCreate(publicKey, privateKey)) {\n        case 0:\n            return publicKey;\n        case 1:\n            throw new Error(\"Private Key is invalid\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n}\n/**\n * A buffer of size 4 that can be reused as long as all changes are consumed\n * within the same event loop.\n */\nconst SHARED_BUFFER_4 = Buffer.allocUnsafe(4);\nfunction deriveChild(index, isHardened, privateKey, publicKey, chainCode) {\n    const indexBuffer = SHARED_BUFFER_4;\n    indexBuffer.writeUInt32BE(index, 0);\n    let data;\n    const privateKeyLength = privateKey.length;\n    if (isHardened) {\n        // Hardened child\n        // privateKeyLength + 1 (BUFFER_ZERO.length) + 4 (indexBuffer.length)\n        const dataLength = privateKeyLength + 1 + 4;\n        data = Buffer.concat([utils_1.BUFFER_ZERO, privateKey, indexBuffer], dataLength);\n    }\n    else {\n        // Normal child\n        data = Buffer.concat([publicKey, indexBuffer], publicKey.length + 4);\n    }\n    const I = (0, crypto_1.createHmac)(\"sha512\", chainCode).update(data).digest();\n    const IL = I.slice(0, 32);\n    try {\n        const newPrivK = Buffer.allocUnsafe(privateKeyLength);\n        privateKey.copy(newPrivK, 0, 0, privateKeyLength);\n        switch (secp256k1_1.default.privateKeyTweakAdd(newPrivK, IL)) {\n            case 0:\n                return {\n                    privateKey: newPrivK,\n                    publicKey: makePublicKey(newPrivK),\n                    chainCode: I.slice(32)\n                };\n            case 1:\n                throw new Error(\"The tweak was out of range or the resulted private key is invalid\");\n        }\n    }\n    catch {\n        return deriveChild(index + 1, isHardened, privateKey, publicKey, chainCode);\n    }\n}\n//# sourceMappingURL=hdkey.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertArgLength = void 0;\nfunction assertArgLength(min, max = min) {\n    return function (target, propertyKey, descriptor) {\n        const original = descriptor.value;\n        descriptor.value = function () {\n            const length = arguments.length;\n            if (length < min || length > max) {\n                throw new Error(`Incorrect number of arguments. '${String(propertyKey)}' requires ${min === max\n                    ? `exactly ${min} ${min === 1 ? \"argument\" : \"arguments\"}.`\n                    : `between ${min} and ${max} arguments.`}`);\n            }\n            return Reflect.apply(original, this, arguments);\n        };\n        return descriptor;\n    };\n}\nexports.assertArgLength = assertArgLength;\n//# sourceMappingURL=assert-arg-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferify = void 0;\nconst PARTS = Buffer.from('[]{},\"\":null');\nconst SQUARE_BRACKET_PAIR = PARTS.slice(0, 2);\nconst SQUARE_BRACKET_OPEN = SQUARE_BRACKET_PAIR.slice(0, 1);\nconst SQUARE_BRACKET_CLOSE = SQUARE_BRACKET_PAIR.slice(1, 2);\nconst CURLY_BRACKET_PAIR = PARTS.slice(2, 4);\nconst CURLY_BRACKET_OPEN = CURLY_BRACKET_PAIR.slice(0, 1);\nconst CURLY_BRACKET_CLOSE = CURLY_BRACKET_PAIR.slice(1, 2);\nconst COMMA_QUOTE = PARTS.slice(4, 6);\nconst COMMA = COMMA_QUOTE.slice(0, 1);\nconst QUOTE_PAIR = PARTS.slice(5, 7);\nconst QUOTE_COLON = PARTS.slice(6, 8);\nconst COLON = QUOTE_COLON.slice(1, 2);\nconst NULL = PARTS.slice(8, 12);\nconst _EMPTY = PARTS.slice(0, 0);\nconst toStr = Object.prototype.toString;\nconst isObj = (val) => toStr.call(val) === \"[object Object]\";\nfunction numberToBuffer(value) {\n    const str = value.toString();\n    const { length } = str;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length);\n        buf.utf8Write(str, 0, length);\n        return buf;\n    }\n    else {\n        return _EMPTY;\n    }\n}\nfunction stringToQuotedBuffer(value) {\n    const { length } = value;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length + 2); // + 2 for the quotation marks\n        buf[0] = 34; // DOUBLE QUOTE\n        buf[length + 1] = 34; // DOUBLE QUOTE\n        buf.utf8Write(value, 1, length);\n        return buf;\n    }\n    else {\n        return QUOTE_PAIR;\n    }\n}\nfunction* arrayToBuffer(value) {\n    const { length } = value;\n    if (length === 0) {\n        yield SQUARE_BRACKET_PAIR;\n        return;\n    }\n    else {\n        yield SQUARE_BRACKET_OPEN;\n        // sends the first array value:\n        for (const chunkified of bufferify(value[0], \"0\")) {\n            // if the value ends up being nothing (undefined), return null\n            yield chunkified.length === 0 ? NULL : chunkified;\n        }\n        // sends the rest of the array values:\n        for (let i = 1; i < length; i++) {\n            yield COMMA;\n            for (const chunkified of bufferify(value[i], i.toString())) {\n                // if the value ends up being nothing (undefined), return null\n                yield chunkified.length === 0 ? NULL : chunkified;\n            }\n        }\n        yield SQUARE_BRACKET_CLOSE;\n        return;\n    }\n}\nfunction bufferToQuotedBuffer(value) {\n    const { length } = value;\n    const buf = Buffer.allocUnsafe(length + 2);\n    buf[0] = 34;\n    value.copy(buf, 1, 0, length);\n    buf[length + 1] = 34;\n    return buf;\n}\nfunction* objectToBuffer(obj, nameOrIndex) {\n    if (\"toJSON\" in obj) {\n        yield* bufferify(obj.toJSON(nameOrIndex), nameOrIndex);\n        return;\n    }\n    let yieldedOpen = false;\n    for (const key in obj) {\n        const value = obj[key];\n        let yieldPrefix = true;\n        for (const chunkified of bufferify(value, key)) {\n            // if the chunkified value ends up being nothing (undefined) ignore\n            // the property\n            const chunkLength = chunkified.length;\n            if (chunkLength === 0)\n                continue;\n            // only yield the prefix once per `key`\n            if (yieldPrefix) {\n                yieldPrefix = false;\n                const quotedKey = stringToQuotedBuffer(key);\n                if (!yieldedOpen) {\n                    yield Buffer.concat([\n                        CURLY_BRACKET_OPEN,\n                        quotedKey,\n                        COLON,\n                        chunkified\n                    ]);\n                    yieldedOpen = true;\n                }\n                else {\n                    yield Buffer.concat([COMMA, quotedKey, COLON, chunkified]);\n                }\n            }\n            else {\n                yield chunkified;\n            }\n        }\n    }\n    // if we yielded the\n    if (yieldedOpen) {\n        yield CURLY_BRACKET_CLOSE;\n        return;\n    }\n    else {\n        yield CURLY_BRACKET_PAIR;\n        return;\n    }\n}\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) Buffer\n * (utf-8 encoded).\n *\n * This is a hack. It:\n *  * Does not support circular references.\n *  * Does not support double quotes within Object keys; only alphanumerics are\n *    considered safe to use\n *  * Probably doesn't support non-ASCII characters\n *  * Is only tested on transaction traces\n *\n * Only useful if the `JSON.stringify`ed version would create a string larger\n * than what the JavaScript engine can handle.\n *\n * What is the maximum string size in Node/V8? It depends on the version! Some\n * versions are 256MB, some are ~1GB, and others are ~0.5GB.\n * See: https://stackoverflow.com/a/47781288/160173\n *\n * CAUTION: This method is approx 3 - 20 times slower than using:\n * `Buffer.from(JSON.stringify(value), \"utf-8\")`\n *\n * @param value - A JavaScript value, usually an object or array, to be converted.\n * @param nameOrIndex - JSON.stringify calls an object's toJSON method, and this\n * property is used by internal recursive calls to bufferify.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\n */\nfunction* bufferify(value, nameOrIndex) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"boolean\") {\n        yield numberToBuffer(value);\n    }\n    else if (type === \"string\") {\n        yield stringToQuotedBuffer(value);\n    }\n    else if (Buffer.isBuffer(value)) {\n        yield bufferToQuotedBuffer(value);\n    }\n    else if (Array.isArray(value)) {\n        yield* arrayToBuffer(value);\n    }\n    else if (isObj(value)) {\n        yield* objectToBuffer(value, nameOrIndex);\n    }\n    else if (value === null) {\n        yield NULL;\n    }\n    else if (type === \"undefined\") {\n        // nothing is returned for undefined\n        yield _EMPTY;\n    }\n    else if (\"toJSON\" in value && typeof value.toJSON === \"function\") {\n        yield* bufferify(value.toJSON(), nameOrIndex);\n    }\n    else {\n        throw new Error(\"unsupported value in bufferify\");\n    }\n}\nexports.bufferify = bufferify;\n//# sourceMappingURL=bufferify.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFilter = exports.parseFilterRange = exports.parseFilterDetails = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseFilterDetails(filter) {\n    // `filter.address` may be a single address or an array\n    const addresses = filter.address\n        ? (Array.isArray(filter.address) ? filter.address : [filter.address]).map(a => ethereum_address_1.Address.from(a.toLowerCase()).toBuffer())\n        : [];\n    const topics = filter.topics ? filter.topics : [];\n    return { addresses, topics };\n}\nexports.parseFilterDetails = parseFilterDetails;\nfunction parseFilterRange(filter, blockchain) {\n    const latestBlock = blockchain.blocks.latest.header.number;\n    const fromBlock = blockchain.blocks.getEffectiveNumber(filter.fromBlock || ethereum_utils_1.Tag.latest);\n    const latestBlockNumber = latestBlock.toNumber();\n    const toBlock = blockchain.blocks.getEffectiveNumber(filter.toBlock || ethereum_utils_1.Tag.latest);\n    let toBlockNumber;\n    // don't search after the \"latest\" block, unless it's \"pending\", of course.\n    if (toBlock > latestBlock) {\n        toBlockNumber = latestBlockNumber;\n    }\n    else {\n        toBlockNumber = toBlock.toNumber();\n    }\n    return {\n        fromBlock,\n        toBlock,\n        toBlockNumber\n    };\n}\nexports.parseFilterRange = parseFilterRange;\nfunction parseFilter(filter = { address: [], topics: [] }, blockchain) {\n    const { addresses, topics } = parseFilterDetails(filter);\n    const { fromBlock, toBlock, toBlockNumber } = parseFilterRange(filter, blockchain);\n    return {\n        addresses,\n        fromBlock,\n        toBlock,\n        toBlockNumber,\n        topics\n    };\n}\nexports.parseFilter = parseFilter;\n//# sourceMappingURL=filter-parsing.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst bn = (val = 0) => new bn_js_1.default(val);\nconst STIPEND = bn(2300);\nconst bigIntToBN = (val) => {\n    return new bn_js_1.default(val.toString());\n};\nconst MULTIPLE = 64 / 63;\nconst check = (set) => (opname) => set.has(opname);\nconst isCall = check(new Set([\"CALL\", \"DELEGATECALL\", \"STATICCALL\", \"CALLCODE\"]));\nconst isCallOrCallcode = check(new Set([\"CALL\", \"CALLCODE\"]));\nconst isCreate = check(new Set([\"CREATE\", \"CREATE2\"]));\nconst isTerminator = check(new Set([\"STOP\", \"RETURN\", \"REVERT\", \"INVALID\", \"SELFDESTRUCT\"]));\nconst stepTracker = () => {\n    const sysOps = [];\n    const allOps = [];\n    const preCompile = new Set();\n    let preCompileCheck = false;\n    let precompileCallDepth = 0;\n    return {\n        collect: (info) => {\n            if (preCompileCheck) {\n                if (info.depth === precompileCallDepth) {\n                    // If the current depth is unchanged.\n                    // we record its position.\n                    preCompile.add(allOps.length - 1);\n                }\n                // Reset the flag immediately here\n                preCompileCheck = false;\n            }\n            if (isCall(info.opcode.name)) {\n                info.stack = [...info.stack];\n                preCompileCheck = true;\n                precompileCallDepth = info.depth;\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            // This goes last so we can use the length for the index ^\n            allOps.push(info);\n        },\n        isPrecompile: (index) => preCompile.has(index),\n        done: () => !allOps.length ||\n            sysOps.length < 2 ||\n            !isTerminator(allOps[allOps.length - 1].opcode.name),\n        ops: allOps,\n        systemOps: sysOps\n    };\n};\nconst estimateGas = async (generateVM, runArgs, callback) => {\n    const vm = await generateVM();\n    exactimate(vm, runArgs, (err, result) => {\n        if (err)\n            return callback(err);\n        binSearch(generateVM, runArgs, result, (err, result) => {\n            if (err)\n                return callback(err);\n            callback(null, result);\n        });\n    });\n};\nconst binSearch = async (generateVM, runArgs, result, callback) => {\n    const MAX = bigIntToBN(runArgs.block.header.gasLimit);\n    const gasRefund = result.execResult.gasRefund;\n    const startingGas = gasRefund\n        ? bigIntToBN(result.gasEstimate + gasRefund)\n        : bigIntToBN(result.gasEstimate);\n    const range = { lo: startingGas, hi: startingGas };\n    const isEnoughGas = async (gas) => {\n        const vm = await generateVM(); // Generate fresh VM\n        runArgs.tx.gasLimit = utils_1.Quantity.toBigInt(gas.toBuffer());\n        await vm.stateManager.checkpoint();\n        const result = await vm\n            .runTx(runArgs)\n            .catch(vmerr => ({ vmerr }));\n        await vm.stateManager.revert();\n        return !(\"vmerr\" in result) && !result.execResult.exceptionError;\n    };\n    if (!(await isEnoughGas(range.hi))) {\n        do {\n            range.hi = range.hi.muln(MULTIPLE);\n        } while (!(await isEnoughGas(range.hi)));\n        while (range.lo.addn(1).lt(range.hi)) {\n            const mid = range.lo.add(range.hi).divn(2);\n            if (await isEnoughGas(mid)) {\n                range.hi = mid;\n            }\n            else {\n                range.lo = mid;\n            }\n        }\n        if (range.hi.gte(MAX)) {\n            if (!(await isEnoughGas(range.hi))) {\n                return callback(new Error(\"gas required exceeds allowance or always failing transaction\"));\n            }\n        }\n    }\n    result.gasEstimate = utils_1.Quantity.toBigInt(range.hi.toBuffer());\n    callback(null, result);\n};\nconst exactimate = async (vm, runArgs, callback) => {\n    const steps = stepTracker();\n    vm.evm.events.on(\"step\", steps.collect);\n    const Context = (index, fee) => {\n        const base = index === 0;\n        let start = index;\n        let stop = 0;\n        const cost = bn();\n        let sixtyFloorths = bn();\n        const op = steps.ops[index];\n        const next = steps.ops[index + 1];\n        const intermediateCost = bigIntToBN(op.gasLeft - next.gasLeft);\n        const callingFee = fee || bn();\n        let compositeContext = false;\n        function addGas(val) {\n            // Add to our current context, but accounted for in sixtyfloorths\n            if (sixtyFloorths.gtn(0)) {\n                if (val.gte(sixtyFloorths)) {\n                    sixtyFloorths = bn();\n                }\n                else {\n                    sixtyFloorths.isub(val);\n                }\n            }\n            cost.iadd(val);\n        }\n        return {\n            start: () => start,\n            stop: () => stop,\n            setStart: (val) => {\n                start = val;\n                compositeContext = true;\n            },\n            setStop: (val) => {\n                stop = val;\n            },\n            getCost: () => ({ cost, sixtyFloorths }),\n            transfer: ctx => {\n                const values = ctx.getCost();\n                addGas(values.cost);\n                sixtyFloorths.iadd(values.sixtyFloorths);\n            },\n            addSixtyFloorth: (sixtyFloorth) => {\n                sixtyFloorths.iadd(sixtyFloorth);\n            },\n            addRange: (fee = bn()) => {\n                const range = steps.ops[base || compositeContext ? start : start + 1].gasLeft -\n                    steps.ops[stop].gasLeft;\n                // only occurs on stack increasing ops\n                addGas(bigIntToBN(range).add(fee));\n            },\n            finalizeRange: () => {\n                let range;\n                // if we have a composite context and we are NOT at the final terminator\n                if (compositeContext && stop !== steps.ops.length - 1) {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop - 1].gasLeft);\n                    addGas(range);\n                    const tail = bigIntToBN(steps.ops[stop - 1].gasLeft - steps.ops[stop].gasLeft);\n                    range = tail.add(intermediateCost);\n                }\n                else {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop].gasLeft);\n                }\n                range.isub(callingFee);\n                addGas(range);\n                if (isCallOrCallcode(op.opcode.name) &&\n                    !(op.stack[op.stack.length - 3] === 0n)) {\n                    cost.iadd(sixtyFloorths);\n                    const innerCost = bigIntToBN(next.gasLeft - steps.ops[stop - 1].gasLeft);\n                    if (innerCost.gt(STIPEND)) {\n                        sixtyFloorths = cost.divn(63);\n                    }\n                    else if (innerCost.lte(STIPEND)) {\n                        sixtyFloorths = STIPEND.sub(innerCost);\n                    }\n                }\n                else if (stop !== steps.ops.length - 1) {\n                    cost.iadd(sixtyFloorths);\n                    sixtyFloorths = cost.divn(63);\n                }\n            }\n        };\n    };\n    const getTotal = () => {\n        const sysops = steps.systemOps;\n        const ops = steps.ops;\n        const opIndex = cursor => sysops[cursor].index;\n        const stack = [];\n        let cursor = 0;\n        let context = Context(0);\n        while (cursor < sysops.length) {\n            const currentIndex = opIndex(cursor);\n            const current = ops[currentIndex];\n            const name = current.opcode.name;\n            if (isCall(name) || isCreate(name)) {\n                if (steps.isPrecompile(currentIndex)) {\n                    context.setStop(currentIndex + 1);\n                    context.addRange();\n                    context.setStart(currentIndex + 1);\n                    context.addSixtyFloorth(STIPEND);\n                }\n                else {\n                    context.setStop(currentIndex);\n                    const feeBn = bn(current.opcode.fee);\n                    context.addRange(feeBn);\n                    stack.push(context);\n                    context = Context(currentIndex, feeBn); // setup next context\n                }\n            }\n            else if (isTerminator(name)) {\n                // only on the last operation\n                context.setStop(currentIndex + 1 < steps.ops.length ? currentIndex + 1 : currentIndex);\n                context.finalizeRange();\n                const ctx = stack.pop();\n                if (ctx) {\n                    ctx.transfer(context);\n                    context = ctx;\n                    context.setStart(currentIndex + 1);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                throw new Error(\"INVALID OPCODE\");\n            }\n            cursor++;\n        }\n        const gas = context.getCost();\n        return gas.cost.add(gas.sixtyFloorths);\n    };\n    await vm.stateManager.checkpoint();\n    const result = await vm\n        .runTx(runArgs)\n        .catch(vmerr => ({ vmerr }));\n    await vm.stateManager.revert();\n    if (\"vmerr\" in result) {\n        const vmerr = result.vmerr;\n        return callback(vmerr);\n    }\n    else if (result.execResult.exceptionError) {\n        const error = new ethereum_utils_1.RuntimeError(\n        // erroneous gas estimations don't have meaningful hashes\n        utils_1.Quantity.Empty, result, ethereum_utils_1.RETURN_TYPES.RETURN_VALUE);\n        return callback(error, result);\n    }\n    else {\n        const ret = result;\n        if (steps.done()) {\n            const estimate = result.totalGasSpent;\n            ret.gasEstimate = estimate;\n        }\n        else {\n            const gasLeftStart = steps.ops[0].gasLeft;\n            const gasLeftEnd = steps.ops[steps.ops.length - 1].gasLeft;\n            const actualUsed = bigIntToBN(gasLeftStart - gasLeftEnd);\n            const sixtyFloorths = getTotal().sub(actualUsed);\n            ret.gasEstimate =\n                result.totalGasSpent + utils_1.Quantity.toBigInt(sixtyFloorths.toBuffer());\n        }\n        callback(null, ret);\n    }\n};\nexports.default = estimateGas;\n//# sourceMappingURL=gas-estimator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.warmPrecompiles = exports.activatePrecompiles = void 0;\nconst NUM_PRECOMPILES = 18;\n/**\n * An account with a balance of 1\n */\nconst SERIALIZED_PRECOMPILE = Uint8Array.from([\n    248, 68, 128, 1, 160, 86, 232, 31, 23, 27, 204, 85, 166, 255, 131, 69, 230,\n    146, 192, 248, 110, 91, 72, 224, 27, 153, 108, 173, 192, 1, 98, 47, 181, 227,\n    99, 180, 33, 160, 197, 210, 70, 1, 134, 247, 35, 60, 146, 126, 125, 178, 220,\n    199, 3, 192, 229, 0, 182, 83, 202, 130, 39, 59, 123, 250, 216, 4, 93, 133,\n    164, 112\n]);\nconst PRECOMPILED_ACCOUNT = {\n    serialize: () => SERIALIZED_PRECOMPILE\n};\nconst accountCache = [];\nconst makeAccount = (i) => {\n    if (accountCache[i])\n        return accountCache[i];\n    // 20 bytes, the first 19 are 0, the last byte is the address\n    const buf = Buffer.allocUnsafe(20).fill(0, 0, 19);\n    buf[19] = i;\n    return (accountCache[i] = { buf });\n};\n/**\n * Puts the precompile accounts into the state tree\n * @param eei -\n */\nconst activatePrecompiles = async (eei) => {\n    await eei.checkpoint();\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.putAccount(account, PRECOMPILED_ACCOUNT);\n    }\n    await eei.commit();\n};\nexports.activatePrecompiles = activatePrecompiles;\n/**\n * Puts the precompile accounts into the warmed addresses\n * @param eei -\n */\nconst warmPrecompiles = async (eei) => {\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.addWarmedAddress(account.buf);\n    }\n};\nexports.warmPrecompiles = warmPrecompiles;\n//# sourceMappingURL=precompiles.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applySimulationOverrides = exports.runCall = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst util_1 = require(\"@ethereumjs/util\");\n/**\n * Executes a message/transaction against the vm.\n * @param vm -\n * @param transaction -\n * @param gasLeft -\n * @returns\n */\nfunction runCall(vm, transaction, gasLeft) {\n    const caller = transaction.from;\n    const to = transaction.to ?? null;\n    const value = transaction.value == null ? 0n : transaction.value.toBigInt();\n    vm.evm.runCall({\n        origin: caller,\n        block: transaction.block,\n        gasPrice: transaction.gasPrice.toBigInt(),\n        caller,\n        gasLimit: gasLeft,\n        to,\n        value,\n        data: transaction.data && transaction.data.toBuffer()\n    });\n}\nexports.runCall = runCall;\nconst validateStorageOverride = (slot, value, fieldName) => {\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof slot === \"string\" && slot !== \"\" && slot.indexOf(\"0x\") === 0) {\n        // assume we're starting with 0x cause Quantity will verify if not\n        if (slot.length != 66) {\n            throw new Error(`${fieldName} override slot must be a 64 character hex string. Received ${slot.length - 2} character string.`);\n        }\n    }\n    if (value === null || value === undefined) {\n        throw new Error(`${fieldName} override data not valid. Received: ${value}`);\n    }\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof value === \"string\" && value !== \"\" && value.indexOf(\"0x\") === 0) {\n        if (value.length != 66) {\n            throw new Error(`${fieldName} override data must be a 64 character hex string. Received ${value.length - 2} character string.`);\n        }\n    }\n};\nasync function applySimulationOverrides(stateTrie, vm, overrides) {\n    const eei = vm.eei;\n    for (const address in overrides) {\n        if (!(0, utils_1.hasOwn)(overrides, address))\n            continue;\n        const { balance, nonce, code, state, stateDiff } = overrides[address];\n        const vmAddr = ethereum_address_1.Address.from(address);\n        // group together overrides that update the account\n        if (nonce != null || balance != null || code != null) {\n            const account = await eei.getAccount(vmAddr);\n            if (nonce != null) {\n                account.nonce = nonce === \"\" ? 0n : utils_1.Quantity.toBigInt(nonce);\n            }\n            if (balance != null) {\n                account.balance = balance === \"\" ? 0n : utils_1.Quantity.toBigInt(balance);\n            }\n            if (code != null) {\n                // geth treats empty strings as \"0x\" code for overrides\n                const codeBuffer = utils_1.Data.toBuffer(code === \"\" ? \"0x\" : code);\n                // The ethereumjs-vm StateManager does not allow to set empty code,\n                // therefore we will manually set the code hash when \"clearing\" the contract code\n                const codeHash = codeBuffer.length > 0 ? (0, utils_1.keccak)(codeBuffer) : util_1.KECCAK256_NULL;\n                account.codeHash = codeHash;\n                await stateTrie.database().put(codeHash, codeBuffer);\n            }\n            await eei.putAccount(vmAddr, account);\n        }\n        // group together overrides that update storage\n        if (state || stateDiff) {\n            if (state) {\n                // state and stateDiff fields are mutually exclusive\n                if (stateDiff) {\n                    throw new Error(\"both state and stateDiff overrides specified\");\n                }\n                // it's possible that the user fed an override with a valid address\n                // and slot, but not a value we can actually set in the storage. if\n                // so, we don't want to set the storage, and we also don't want to\n                // clear it out\n                let clearedState = false;\n                for (const slot in state) {\n                    if (!(0, utils_1.hasOwn)(state, slot))\n                        continue;\n                    const value = state[slot];\n                    validateStorageOverride(slot, value, \"State\");\n                    if (!clearedState) {\n                        // override.state clears all storage and sets just the specified slots\n                        await eei.clearContractStorage(vmAddr);\n                        clearedState = true;\n                    }\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n            else {\n                for (const slot in stateDiff) {\n                    // don't set storage for invalid values\n                    if (!(0, utils_1.hasOwn)(stateDiff, slot))\n                        continue;\n                    const value = stateDiff[slot];\n                    validateStorageOverride(slot, value, \"StateDiff\");\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n        }\n    }\n}\nexports.applySimulationOverrides = applySimulationOverrides;\n//# sourceMappingURL=run-call.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheTrie = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst keyHashingFunction = (msg) => {\n    return (0, utils_1.keccak)(Buffer.from(msg.buffer, msg.byteOffset, msg.length));\n};\nclass GanacheTrie extends trie_1.Trie {\n    constructor(db, root, blockchain) {\n        super({\n            db,\n            root,\n            useRootPersistence: true,\n            useKeyHashing: true,\n            useKeyHashingFunction: keyHashingFunction\n        });\n        this.blockchain = blockchain;\n        this.db = db;\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this.root(stateRoot);\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of GanacheTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will contain the checkpointing metadata and will use the same scratch as underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new GanacheTrie(this.db.copy(), this.root(), this.blockchain);\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n        }\n        return secureTrie;\n    }\n}\nexports.GanacheTrie = GanacheTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Miner_currentlyExecutingPrice, _Miner_origins, _Miner_pending, _Miner_isBusy, _Miner_paused, _Miner_resumer, _Miner_currentBlockBaseFeePerGas, _Miner_resolver, _Miner_emitStepEvent, _Miner_executables, _Miner_options, _Miner_vm, _Miner_createBlock, _Miner_priced, _Miner_mine, _Miner_mineTxs, _Miner_runTx, _Miner_removeBestAndOrigin, _Miner_reset, _Miner_setPricedHeap, _Miner_updatePricedHeap, _Miner_setCurrentBlockBaseFeePerGas;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Capacity = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst replace_from_heap_1 = __importDefault(require(\"./replace-from-heap\"));\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst provider_events_1 = require(\"../provider-events\");\nconst console_log_1 = require(\"@ganache/console.log\");\n/**\n * How many transactions should be in the block.\n */\nvar Capacity;\n(function (Capacity) {\n    /**\n     * Keep mining transactions until there are no more transactions that can fit\n     * in the block, or there are no transactions left to mine.\n     */\n    Capacity[Capacity[\"FillBlock\"] = -1] = \"FillBlock\";\n    /**\n     * Mine an empty block, even if there are executable transactions available to\n     * mine.\n     */\n    Capacity[Capacity[\"Empty\"] = 0] = \"Empty\";\n    /**\n     * Mine a block with a single transaction, or empty if there are no executable\n     * transactions available to mine.\n     */\n    Capacity[Capacity[\"Single\"] = 1] = \"Single\";\n})(Capacity = exports.Capacity || (exports.Capacity = {}));\nconst updateBloom = (blockBloom, bloom) => {\n    let i = 256;\n    while (--i)\n        blockBloom[i] |= bloom[i];\n};\nconst sortByPrice = (values, a, b) => values[a].effectiveGasPrice > values[b].effectiveGasPrice;\nconst refresher = (item, context) => item.updateEffectiveGasPrice(context);\nclass Miner extends emittery_1.default {\n    /*\n     * @param executables - A live Map of pending transactions from the transaction\n     * pool. The miner will update this Map by removing the best transactions\n     * and putting them in new blocks.\n     */\n    constructor(options, executables, vm, createBlock) {\n        super();\n        _Miner_currentlyExecutingPrice.set(this, 0n);\n        _Miner_origins.set(this, new Set());\n        _Miner_pending.set(this, void 0);\n        _Miner_isBusy.set(this, false);\n        _Miner_paused.set(this, false);\n        _Miner_resumer.set(this, void 0);\n        _Miner_currentBlockBaseFeePerGas.set(this, void 0);\n        _Miner_resolver.set(this, void 0);\n        /**\n         * Because step events are expensive, CPU-wise, to create and emit we only do\n         * it conditionally.\n         */\n        _Miner_emitStepEvent.set(this, false);\n        _Miner_executables.set(this, void 0);\n        _Miner_options.set(this, void 0);\n        _Miner_vm.set(this, void 0);\n        _Miner_createBlock.set(this, void 0);\n        // create a Heap that sorts by gasPrice\n        _Miner_priced.set(this, new utils_1.Heap(sortByPrice, refresher));\n        _Miner_mine.set(this, async (block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) => {\n            const { block: lastBlock, transactions } = await __classPrivateFieldGet(this, _Miner_mineTxs, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            // if there are more txs to mine, start mining them without awaiting their\n            // result.\n            if (__classPrivateFieldGet(this, _Miner_pending, \"f\")) {\n                __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n                __classPrivateFieldSet(this, _Miner_pending, false, \"f\");\n                if (!onlyOneBlock && __classPrivateFieldGet(this, _Miner_priced, \"f\").length > 0) {\n                    const nextBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, lastBlock);\n                    await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, nextBlock, maxTransactions);\n                }\n            }\n            return transactions;\n        });\n        _Miner_mineTxs.set(this, async (runtimeBlock, maxTransactions, onlyOneBlock) => {\n            let block;\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            const { pending, inProgress } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const options = __classPrivateFieldGet(this, _Miner_options, \"f\");\n            let keepMining = true;\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const storageKeys = new Map();\n            let blockTransactions;\n            do {\n                keepMining = false;\n                __classPrivateFieldSet(this, _Miner_isBusy, true, \"f\");\n                blockTransactions = [];\n                const transactionsTrie = new trie_1.Trie();\n                const receiptTrie = new trie_1.Trie();\n                // don't mine anything at all if maxTransactions is `0`\n                if (maxTransactions === Capacity.Empty) {\n                    await vm.stateManager.checkpoint();\n                    await vm.stateManager.commit();\n                    const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), utils_1.BUFFER_256_ZERO, vm.stateManager._trie.root(), 0n, // gas used\n                    options.extraData, [], storageKeys);\n                    this.emit(\"block\", finalizedBlockData);\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    return { block: finalizedBlockData.block, transactions: [] };\n                }\n                let numTransactions = 0;\n                let blockGasLeft = options.blockGasLimit.toBigInt();\n                let blockGasUsed = 0n;\n                const blockBloom = Buffer.allocUnsafe(256).fill(0);\n                const promises = [];\n                // Set a block-level checkpoint so our unsaved trie doesn't update the\n                // vm's \"live\" trie.\n                await vm.stateManager.checkpoint();\n                const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n                // We need to listen for any SSTORE opcodes so we can grab the raw, unhashed version\n                // of the storage key and save it to the db along with it's keccak hashed version of\n                // the storage key. Why you might ask? So we can reference the raw version in\n                // debug_storageRangeAt.\n                const stepListener = (event) => {\n                    if (event.opcode.name === \"SSTORE\") {\n                        const key = TraceData.from(utils_1.Quantity.toBuffer(event.stack[event.stack.length - 1])).toBuffer();\n                        const hashedKey = (0, utils_1.keccak)(key);\n                        storageKeys.set(hashedKey.toString(), { key, hashedKey });\n                    }\n                };\n                vm.evm.events.on(\"step\", stepListener);\n                // Run until we run out of items, or until the inner loop stops us.\n                // we don't call `shift()` here because we will may need to `replace`\n                // this `best` transaction with the next best transaction from the same\n                // origin later.\n                let best;\n                while ((best = priced.peek())) {\n                    const origin = best.from.toString();\n                    if (best.calculateIntrinsicGas() > blockGasLeft) {\n                        // if the current best transaction can't possibly fit in this block\n                        // go ahead and run the next best transaction, ignoring all other\n                        // pending transactions from this account for this block.\n                        //  * We don't replace this \"best\" transaction with another from the\n                        // same account.\n                        //  * We do \"unlock\" this transaction in the transaction pool's `pending`\n                        // queue so it can be replaced, if needed.\n                        best.locked = false;\n                        __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                        continue;\n                    }\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, best.effectiveGasPrice.toBigInt(), \"f\");\n                    // Set a transaction-level checkpoint so we can undo state changes in\n                    // the case where the transaction is rejected by the VM.\n                    await vm.stateManager.checkpoint();\n                    // Set the internal trie's block number (for forking)\n                    vm.stateManager._trie.blockNumber = utils_1.Quantity.from(runtimeBlock.header.number);\n                    const result = await __classPrivateFieldGet(this, _Miner_runTx, \"f\").call(this, best, runtimeBlock, origin, pending);\n                    if (result !== null) {\n                        const gasUsed = result.totalGasSpent;\n                        if (blockGasLeft >= gasUsed) {\n                            // if the transaction will fit in the block, commit it!\n                            await vm.stateManager.commit();\n                            blockTransactions[numTransactions] = best;\n                            blockGasLeft -= gasUsed;\n                            blockGasUsed += gasUsed;\n                            // calculate receipt and tx tries\n                            const txKey = (0, rlp_1.encode)(numTransactions === 0\n                                ? utils_1.BUFFER_EMPTY\n                                : (0, utils_1.uintToBuffer)(numTransactions));\n                            promises.push(transactionsTrie.put(txKey, best.serialized));\n                            const receipt = best.fillFromResult(result, blockGasUsed);\n                            promises.push(receiptTrie.put(txKey, receipt));\n                            // update the block's bloom\n                            updateBloom(blockBloom, result.bloom.bitvector);\n                            numTransactions++;\n                            const pendingOrigin = pending.get(origin);\n                            inProgress.add(best);\n                            best.once(\"finalized\").then(() => {\n                                // it is in the database (or thrown out) so delete it from the\n                                // `inProgress` Set\n                                inProgress.delete(best);\n                            });\n                            // since this transaction was successful, remove it from the \"pending\"\n                            // transaction pool.\n                            const hasMoreFromOrigin = pendingOrigin.removeBest();\n                            if (hasMoreFromOrigin) {\n                                // remove the newest (`best`) tx from this account's pending queue\n                                // as we know we can fit another transaction in the block. Stick\n                                // this tx into our `priced` heap.\n                                keepMining = (0, replace_from_heap_1.default)(priced, pendingOrigin);\n                            }\n                            else {\n                                // since we don't have any more txs from this account, just get the\n                                // next best transaction sorted in our `priced` heap.\n                                keepMining = __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                            }\n                            // if we:\n                            //  * don't have enough gas left for even the smallest of transactions\n                            //  * Or if we've mined enough transactions\n                            // we're done with this block!\n                            // notice: when `maxTransactions` is `-1` (AKA infinite), `numTransactions === maxTransactions`\n                            // will always return false, so this comparison works out fine.\n                            if (blockGasLeft <= ethereum_transaction_1.Params.TRANSACTION_GAS ||\n                                numTransactions === maxTransactions) {\n                                break;\n                            }\n                        }\n                        else {\n                            // didn't fit in the current block\n                            await vm.stateManager.revert();\n                            // unlock the transaction so the transaction pool can reconsider this\n                            // transaction\n                            best.locked = false;\n                            // didn't fit. remove it from the priced transactions without replacing\n                            // it with another from the account. This transaction will have to be\n                            // run again in another block.\n                            keepMining = priced.removeBest();\n                        }\n                    }\n                    else {\n                        // no result means the transaction is an \"always failing tx\", so we\n                        // revert its changes here.\n                        // Note: we don't clean up (`removeBest`, etc) because `runTx`'s\n                        // error handler does the clean up itself.\n                        await vm.stateManager.revert();\n                    }\n                }\n                await Promise.all(promises);\n                await vm.stateManager.commit();\n                vm.evm.events.removeListener(\"step\", stepListener);\n                const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), blockBloom, vm.stateManager._trie.root(), blockGasUsed, options.extraData, blockTransactions, storageKeys);\n                block = finalizedBlockData.block;\n                this.emit(\"block\", finalizedBlockData);\n                if (onlyOneBlock) {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    break;\n                }\n                else {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n                    if (priced.length !== 0) {\n                        runtimeBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, block);\n                        // if baseFeePerGas is undefined, we are pre london hard fork.\n                        // no need to refresh the order of the heap because all Txs only have gasPrice.\n                        if (__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\") !== undefined) {\n                            priced.refresh(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                        }\n                    }\n                    else {\n                        // reset the miner\n                        __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    }\n                }\n            } while (keepMining);\n            return { block, transactions: blockTransactions };\n        });\n        _Miner_runTx.set(this, async (tx, block, origin, pending) => {\n            const context = {};\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            this.emit(\"ganache:vm:tx:before\", { context });\n            // we always listen to the step event even if `#emitStepEvent` is false in\n            // case the user starts listening in the middle of the transaction.\n            const stepListener = (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs)\n                    this.emit(\"ganache:vm:tx:console.log\", { context, logs });\n                if (!__classPrivateFieldGet(this, _Miner_emitStepEvent, \"f\"))\n                    return;\n                this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(context, event));\n            };\n            vm.evm.events.on(\"step\", stepListener);\n            try {\n                return await vm.runTx({\n                    tx: tx.toVmTransaction(),\n                    block: block\n                });\n            }\n            catch (err) {\n                const errorMessage = err.message;\n                // We do NOT want to re-run this transaction.\n                // Update the `priced` heap with the next best transaction from this\n                // account\n                const pendingOrigin = pending.get(origin);\n                if (pendingOrigin.removeBest()) {\n                    (0, replace_from_heap_1.default)(__classPrivateFieldGet(this, _Miner_priced, \"f\"), pendingOrigin);\n                }\n                else {\n                    // if there are no more transactions from this origin remove this tx\n                    // from the priced heap and clear out it's origin so it can accept new\n                    // transactions from this origin.\n                    __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                }\n                const e = {\n                    execResult: {\n                        runState: { programCounter: 0 },\n                        exceptionError: { error: errorMessage },\n                        returnValue: utils_1.BUFFER_EMPTY\n                    }\n                };\n                const error = new ethereum_utils_1.RuntimeError(tx.hash, e, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n                tx.finalize(\"rejected\", error);\n                return null;\n            }\n            finally {\n                vm.evm.events.removeListener(\"step\", stepListener);\n                this.emit(\"ganache:vm:tx:after\", { context });\n            }\n        });\n        _Miner_removeBestAndOrigin.set(this, (origin) => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").delete(origin);\n            return __classPrivateFieldGet(this, _Miner_priced, \"f\").removeBest();\n        });\n        _Miner_reset.set(this, () => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").clear();\n            // HACK: see: https://github.com/trufflesuite/ganache/issues/3093\n            //\n            //When the priced heap is reset, meaning we're clearing out the heap\n            // and origins list to be set again when the miner is called, loop over\n            // the priced heap transactions and \"unlock\" them (set tx.locked = false)\n            //\n            // The real fix would include fixing the use of locked, as it's\n            // currently overloaded to mean \"is in priced heap\" and also \"is being\n            // mined\".\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const length = priced.length;\n            const pricedArray = priced.array;\n            for (let i = 0; i < length; i++) {\n                const bestFromOrigin = pricedArray[i];\n                bestFromOrigin.locked = false;\n            }\n            priced.clear();\n            __classPrivateFieldSet(this, _Miner_isBusy, false, \"f\");\n        });\n        /**\n         * Adds one transaction from each origin into the \"priced\" heap, which\n         * sorts each tx by gasPrice (high to low)\n         */\n        _Miner_setPricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const origin = next.from.toString();\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        /**\n         * Updates the \"priced\" heap with transactions from origins it doesn't yet\n         * contain.\n         */\n        _Miner_updatePricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            // Note: the `pending` Map passed here is \"live\", meaning it is constantly\n            // being updated by the `transactionPool`. This allows us to begin\n            // processing a block with the _current_ pending transactions, and while\n            // that is processing, to receive new transactions, updating our `priced`\n            // heap with these new pending transactions.\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const price = next.effectiveGasPrice.toBigInt();\n                    if (__classPrivateFieldGet(this, _Miner_currentlyExecutingPrice, \"f\") > price) {\n                        // don't insert a transaction into the miner's `priced` heap\n                        // if it will be better than its last\n                        continue;\n                    }\n                    const origin = next.from.toString();\n                    if (origins.has(origin)) {\n                        // don't insert a transaction into the miner's `priced` heap if it\n                        // has already queued up transactions for that origin\n                        continue;\n                    }\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        /**\n         * Sets the #currentBlockBaseFeePerGas property if the current block\n         * has a baseFeePerGas property\n         */\n        _Miner_setCurrentBlockBaseFeePerGas.set(this, (block) => {\n            const baseFeePerGas = block.header.baseFeePerGas;\n            // before london hard fork, there will be no baseFeePerGas on the block\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, baseFeePerGas === undefined ? undefined : utils_1.Quantity.from(baseFeePerGas), \"f\");\n        });\n        __classPrivateFieldSet(this, _Miner_vm, vm, \"f\");\n        __classPrivateFieldSet(this, _Miner_options, options, \"f\");\n        __classPrivateFieldSet(this, _Miner_executables, executables, \"f\");\n        __classPrivateFieldSet(this, _Miner_createBlock, (previousBlock) => {\n            const newBlock = createBlock(previousBlock);\n            __classPrivateFieldGet(this, _Miner_setCurrentBlockBaseFeePerGas, \"f\").call(this, newBlock);\n            return newBlock;\n        }, \"f\");\n        // initialize the heap with an empty array\n        __classPrivateFieldGet(this, _Miner_priced, \"f\").init([]);\n    }\n    async pause() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            __classPrivateFieldSet(this, _Miner_paused, true, \"f\");\n            __classPrivateFieldSet(this, _Miner_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _Miner_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            await this.once(\"idle\");\n        }\n    }\n    resume() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\"))\n            return;\n        __classPrivateFieldSet(this, _Miner_paused, false, \"f\");\n        __classPrivateFieldGet(this, _Miner_resolver, \"f\").call(this);\n    }\n    /**\n     * @param maxTransactions: - maximum number of transactions per block. If `-1`,\n     * unlimited.\n     * @param onlyOneBlock: - set to `true` if only 1 block should be mined.\n     *\n     * @returns the transactions mined in the _first_ block\n     */\n    async mine(block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) {\n        if (__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _Miner_resumer, \"f\");\n        }\n        // only allow mining a single block at a time (per miner)\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            // if we are currently mining a block, set the `pending` property\n            // so the miner knows it can immediately start mining another block once\n            // it is done with its current work.\n            __classPrivateFieldSet(this, _Miner_pending, true, \"f\");\n            __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n            return;\n        }\n        else {\n            __classPrivateFieldGet(this, _Miner_setCurrentBlockBaseFeePerGas, \"f\").call(this, block);\n            __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n            const result = await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            this.emit(\"idle\");\n            return result;\n        }\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Miner_emitStepEvent, enable, \"f\");\n    }\n}\nexports.default = Miner;\n_Miner_currentlyExecutingPrice = new WeakMap(), _Miner_origins = new WeakMap(), _Miner_pending = new WeakMap(), _Miner_isBusy = new WeakMap(), _Miner_paused = new WeakMap(), _Miner_resumer = new WeakMap(), _Miner_currentBlockBaseFeePerGas = new WeakMap(), _Miner_resolver = new WeakMap(), _Miner_emitStepEvent = new WeakMap(), _Miner_executables = new WeakMap(), _Miner_options = new WeakMap(), _Miner_vm = new WeakMap(), _Miner_createBlock = new WeakMap(), _Miner_priced = new WeakMap(), _Miner_mine = new WeakMap(), _Miner_mineTxs = new WeakMap(), _Miner_runTx = new WeakMap(), _Miner_removeBestAndOrigin = new WeakMap(), _Miner_reset = new WeakMap(), _Miner_setPricedHeap = new WeakMap(), _Miner_updatePricedHeap = new WeakMap(), _Miner_setCurrentBlockBaseFeePerGas = new WeakMap();\n//# sourceMappingURL=miner.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction replaceFromHeap(priced, source) {\n    // get the next best for this account, removing from the source Heap:\n    const next = source.peek();\n    if (next) {\n        // remove the current best priced transaction from this account and replace\n        // it with the account's next lowest nonce transaction:\n        priced.replaceBest(next);\n        next.locked = true;\n        return true;\n    }\n    else {\n        // since we don't have a next, just remove this item from priced\n        return priced.removeBest();\n    }\n}\nexports.default = replaceFromHeap;\n//# sourceMappingURL=replace-from-heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeStepEvent = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction normalizeEvent(event) {\n    const { account, memory: originalMemory, opcode } = event;\n    const memoryLength = originalMemory.length;\n    // We need to copy some buffers so the user can't mutate them on us:\n    // Instead of making a bunch of individual buffers, we just make 1 and then\n    // fill it in as needed.\n    const sharedBuffer = Buffer.allocUnsafe(104 + memoryLength);\n    account.storageRoot.copy(sharedBuffer, 0, 0, 32); // always 32 bytes\n    account.codeHash.copy(sharedBuffer, 32, 0, 32); // always 32 bytes\n    event.address.buf.copy(sharedBuffer, 64, 0, 20); // always 20 bytes\n    event.codeAddress.buf.copy(sharedBuffer, 84, 0, 20); // always 20 bytes\n    const stateRoot = sharedBuffer.slice(0, 32);\n    const codeHash = sharedBuffer.slice(32, 64);\n    const address = sharedBuffer.slice(64, 84);\n    const codeAddress = sharedBuffer.slice(84, 104);\n    let memory;\n    if (memoryLength !== 0) {\n        originalMemory.copy(sharedBuffer, 104, 0, memoryLength);\n        memory = sharedBuffer.slice(104, 104 + memoryLength);\n    }\n    else {\n        memory = utils_1.BUFFER_ZERO;\n    }\n    return {\n        account: {\n            nonce: account.nonce,\n            balance: account.balance,\n            stateRoot,\n            codeHash\n        },\n        address,\n        codeAddress,\n        depth: BigInt(event.depth),\n        gasLeft: event.gasLeft,\n        gasRefund: event.gasRefund,\n        memory,\n        memoryWordCount: event.memoryWordCount,\n        opcode: {\n            name: opcode.name,\n            fee: opcode.fee\n        },\n        pc: BigInt(event.pc),\n        returnStack: event.returnStack.map(r => r),\n        stack: event.stack.map(s => s)\n    };\n}\nfunction makeStepEvent(context, event) {\n    return {\n        context,\n        data: normalizeEvent(event)\n    };\n}\nexports.makeStepEvent = makeStepEvent;\n//# sourceMappingURL=provider-events.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumProvider_options, _EthereumProvider_api, _EthereumProvider_wallet, _EthereumProvider_executor, _EthereumProvider_blockchain, _EthereumProvider_send, _EthereumProvider_logRequest, _EthereumProvider_legacySendPayloads, _EthereumProvider_legacySendPayload;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProvider = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst api_1 = __importDefault(require(\"./api\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst blockchain_1 = __importDefault(require(\"./blockchain\"));\nconst fork_1 = require(\"./forking/fork\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseCoinbase(coinbase, initialAccounts) {\n    switch (typeof coinbase) {\n        case \"object\":\n            return coinbase;\n        case \"number\":\n            const account = initialAccounts[coinbase];\n            if (account) {\n                return account.address;\n            }\n            else {\n                throw new Error(`invalid coinbase address index: ${coinbase}`);\n            }\n        case \"string\":\n            return ethereum_address_1.Address.from(coinbase);\n        default: {\n            throw new Error(`coinbase address must be string or number, received: ${coinbase}`);\n        }\n    }\n}\n/**\n * Detects when a ganache:vm:tx:step listener is active and signals the onChange\n * function when the status changes\n * @param provider -\n * @param onChange -\n */\nfunction hookEventSystem(provider, onChange) {\n    let listenerCount = 0;\n    provider.on(emittery_1.default.listenerAdded, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            if (listenerCount === 0) {\n                onChange(true);\n            }\n            listenerCount++;\n        }\n    });\n    provider.on(emittery_1.default.listenerRemoved, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            listenerCount--;\n            if (listenerCount === 0) {\n                onChange(false);\n            }\n        }\n    });\n}\nclass EthereumProvider extends emittery_1.default {\n    constructor(options = {}, executor) {\n        super();\n        _EthereumProvider_options.set(this, void 0);\n        _EthereumProvider_api.set(this, void 0);\n        _EthereumProvider_wallet.set(this, void 0);\n        _EthereumProvider_executor.set(this, void 0);\n        _EthereumProvider_blockchain.set(this, void 0);\n        /**\n         * Remove an event subscription\n         */\n        this.removeListener = this.off;\n        _EthereumProvider_send.set(this, (arg1, arg2) => {\n            let method;\n            let params;\n            let response;\n            if (typeof arg1 === \"string\") {\n                // this signature is (not) non-standard and is only a ganache thing!!!\n                // we should probably remove it, but I really like it so I haven't yet.\n                method = arg1;\n                params = arg2;\n                response = this.request({ method, params });\n            }\n            else if (typeof arg2 === \"function\") {\n                // handle backward compatibility with callback-style ganache-core\n                if (Array.isArray(arg1)) {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayloads, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n                else {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n            }\n            else {\n                throw new Error(\"No callback provided to provider's send function. As of web3 1.0, provider.send \" +\n                    \"is no longer synchronous and must be passed a callback as its final argument.\");\n            }\n            return response;\n        });\n        _EthereumProvider_logRequest.set(this, (method, params) => {\n            const options = __classPrivateFieldGet(this, _EthereumProvider_options, \"f\");\n            if (options.logging.verbose) {\n                options.logging.logger.log(`   >  ${method}: ${params == null\n                    ? params\n                    : JSON.stringify(params, null, 2).split(\"\\n\").join(\"\\n   > \")}`);\n            }\n            else {\n                options.logging.logger.log(method);\n            }\n        });\n        /**\n         * Disconnect the provider instance. This will cause the underlying blockchain to be stopped, and any pending\n         * tasks to be rejected. Emits a `disconnect` event once successfully disconnected.\n         * @returns Fullfills with `undefined` once the provider has been disconnected.\n         */\n        this.disconnect = async () => {\n            // executor.stop() will stop accepting new tasks, but will not wait for inflight tasks. These may reject with\n            // (unhelpful) internal errors. See https://github.com/trufflesuite/ganache/issues/3499\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").stop();\n            await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").stop();\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").end();\n            this.emit(\"disconnect\");\n        };\n        //#region legacy\n        _EthereumProvider_legacySendPayloads.set(this, (payloads) => {\n            return Promise.all(payloads.map(__classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\"))).then(results => {\n                let mainError = null;\n                const responses = [];\n                results.forEach(({ error, result }, i) => {\n                    responses.push(result);\n                    if (error) {\n                        if (mainError == null) {\n                            mainError = new Error(\"Batch error:\");\n                        }\n                        mainError.errors[i] = error;\n                    }\n                });\n                return { error: mainError, result: responses };\n            });\n        });\n        _EthereumProvider_legacySendPayload.set(this, async (payload) => {\n            const method = payload.method;\n            const params = payload.params;\n            try {\n                const result = await this.request({ method, params });\n                return {\n                    error: null,\n                    result: (0, utils_1.makeResponse)(payload.id, JSON.parse(JSON.stringify(result)))\n                };\n            }\n            catch (error) {\n                let result;\n                // In order to provide `vmErrorsOnRPCResponse`, the `error` might have\n                // a `result` property that we need to move to the result field. Yes,\n                // it's super weird behavior!\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    result = error.result;\n                    delete error.result;\n                }\n                return { error, result: (0, utils_1.makeError)(payload.id, error, result) };\n            }\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_executor, executor, \"f\");\n        const providerOptions = (__classPrivateFieldSet(this, _EthereumProvider_options, ethereum_options_1.EthereumOptionsConfig.normalize(options), \"f\"));\n        const wallet = (__classPrivateFieldSet(this, _EthereumProvider_wallet, new wallet_1.default(providerOptions.wallet, providerOptions.logging), \"f\"));\n        const accounts = wallet.initialAccounts;\n        const fork = providerOptions.fork.url ||\n            providerOptions.fork.provider ||\n            providerOptions.fork.network;\n        const fallback = fork ? new fork_1.Fork(providerOptions, accounts) : null;\n        const coinbase = parseCoinbase(providerOptions.miner.coinbase, accounts);\n        const blockchain = new blockchain_1.default(providerOptions, coinbase, fallback);\n        __classPrivateFieldSet(this, _EthereumProvider_blockchain, blockchain, \"f\");\n        blockchain.on(\"ganache:vm:tx:before\", event => {\n            this.emit(\"ganache:vm:tx:before\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:step\", event => {\n            this.emit(\"ganache:vm:tx:step\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:after\", event => {\n            this.emit(\"ganache:vm:tx:after\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:console.log\", event => {\n            this.emit(\"ganache:vm:tx:console.log\", event);\n        });\n        hookEventSystem(this, (enable) => {\n            blockchain.toggleStepEvent(enable);\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_api, new api_1.default(providerOptions, wallet, blockchain), \"f\");\n    }\n    async initialize() {\n        await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").initialize(__classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").initialAccounts);\n        this.emit(\"connect\");\n    }\n    /**\n     * Returns the options, including defaults and generated, used to start Ganache.\n     */\n    getOptions() {\n        return (0, lodash_clonedeep_1.default)(__classPrivateFieldGet(this, _EthereumProvider_options, \"f\"));\n    }\n    /**\n     * Returns the unlocked accounts\n     */\n    getInitialAccounts() {\n        const accounts = {};\n        const wallet = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\");\n        const unlockedAccounts = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").unlockedAccounts;\n        wallet.initialAccounts.forEach(account => {\n            const address = account.address.toString();\n            accounts[address] = {\n                secretKey: account.privateKey.toString(),\n                balance: account.balance.toBigInt(),\n                unlocked: unlockedAccounts.has(address)\n            };\n        });\n        return accounts;\n    }\n    send(arg1, arg2) {\n        return __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    sendAsync(arg1, arg2) {\n        __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    /**\n     * EIP-1193 style request method\n     * @param args -\n     * @returns A Promise that resolves with the method's result or rejects with a CodedError\n     * @EIP [1193](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md)\n     */\n    async request(args) {\n        const rawResult = await this._requestRaw(args);\n        const value = await rawResult.value;\n        return JSON.parse(JSON.stringify(value));\n    }\n    /**\n     * INTERNAL. Used when the caller wants to access the original `PromiEvent`,\n     * which would otherwise be flattened into a regular Promise through the\n     * Promise chain.\n     * @param request - the request\n     */\n    async _requestRaw({ method, params }) {\n        __classPrivateFieldGet(this, _EthereumProvider_logRequest, \"f\").call(this, method, params);\n        const result = await __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").execute(__classPrivateFieldGet(this, _EthereumProvider_api, \"f\"), method, params);\n        const promise = result.value;\n        if (promise instanceof utils_1.PromiEvent) {\n            promise.on(\"message\", data => {\n                const normalizedData = JSON.parse(JSON.stringify(data));\n                // EIP-1193\n                this.emit(\"message\", normalizedData);\n                // legacy\n                this.emit(\"data\", {\n                    jsonrpc: \"2.0\",\n                    method: \"eth_subscription\",\n                    params: normalizedData.data\n                });\n            });\n        }\n        const value = promise.catch((error) => {\n            if (__classPrivateFieldGet(this, _EthereumProvider_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    // stringify the result here\n                    // TODO: not sure why the stringification is even needed.\n                    error.result = JSON.parse(JSON.stringify(error.result));\n                }\n            }\n            // then rethrow\n            throw error;\n        });\n        return { value: value };\n    }\n}\nexports.EthereumProvider = EthereumProvider;\n_EthereumProvider_options = new WeakMap(), _EthereumProvider_api = new WeakMap(), _EthereumProvider_wallet = new WeakMap(), _EthereumProvider_executor = new WeakMap(), _EthereumProvider_blockchain = new WeakMap(), _EthereumProvider_send = new WeakMap(), _EthereumProvider_logRequest = new WeakMap(), _EthereumProvider_legacySendPayloads = new WeakMap(), _EthereumProvider_legacySendPayload = new WeakMap();\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionPool_options, _TransactionPool_priceBump, _TransactionPool_blockchain, _TransactionPool_accountPromises, _TransactionPool_validateTransaction;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TriageOption = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\n/**\n * Checks if the `replacer` is eligible to replace the `replacee` transaction\n * in the transaction pool queue. Replacement eligibility requires that\n * the transactions have the same nonce and the `replacer` has a gas price\n * that is `gasPrice * priceBump` better than our `replacee`.\n * @param replacee -\n * @param replaceeNonce -\n * @param replacerNonce -\n * @param replacerGasPrice -\n * @param priceBump -\n */\nfunction shouldReplace(replacee, replacerNonce, replacer, priceBump) {\n    const replaceeNonce = replacee.nonce.toBigInt();\n    // if the nonces differ, our replacer is not eligible to replace\n    if (replaceeNonce !== replacerNonce) {\n        return false;\n    }\n    // if the transaction being replaced is in the middle of being mined, we can't\n    // replpace it so let's back out early\n    if (replacee.locked) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.TRANSACTION_LOCKED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    const replacerTip = \"maxPriorityFeePerGas\" in replacer\n        ? replacer.maxPriorityFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replacerMaxFee = \"maxFeePerGas\" in replacer\n        ? replacer.maxFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replaceeTip = \"maxPriorityFeePerGas\" in replacee\n        ? replacee.maxPriorityFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const replaceeMaxFee = \"maxFeePerGas\" in replacee\n        ? replacee.maxFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const tipPremium = replaceeTip + (replaceeTip * priceBump) / 100n;\n    const maxFeePremium = replaceeMaxFee + (replaceeMaxFee * priceBump) / 100n;\n    // if both the tip and max fee of the new transaction aren't\n    // `priceBumpPercent` more than the existing transaction, this transaction is\n    // underpriced\n    if (replacerTip < tipPremium || replacerMaxFee < maxFeePremium) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.UNDERPRICED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    else {\n        return true;\n    }\n}\nfunction byNonce(values, a, b) {\n    return ((values[b].nonce.toBigInt() || 0n) > (values[a].nonce.toBigInt() || 0n));\n}\n/**\n * Used to track a transaction's placement in the transaction pool based off\n * of the its nonce.\n */\nvar TriageOption;\n(function (TriageOption) {\n    /**\n     * Default value. A tx will be added to the future queue if it is not yet\n     * executable based off of the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"FutureQueue\"] = 0] = \"FutureQueue\";\n    /**\n     * The transaction is currently executable based off the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"Executable\"] = 1] = \"Executable\";\n    /**\n     * The transaction is currently executable, has the same nonce as a pending\n     * transaction of the same origin, and has a gas price that is high enough to\n     * replace the currently pending transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesPendingExecutable\"] = 2] = \"ReplacesPendingExecutable\";\n    /**\n     * The transaction is not currently executable but has the same nonce as a\n     * future queued transaction of the same origin and has a gas price that is\n     * high enough to replace the future queued transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesFutureTransaction\"] = 3] = \"ReplacesFutureTransaction\";\n})(TriageOption = exports.TriageOption || (exports.TriageOption = {}));\nclass TransactionPool extends emittery_1.default {\n    constructor(options, blockchain, origins = new Map()) {\n        super();\n        _TransactionPool_options.set(this, void 0);\n        /**\n         * Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\n         */\n        _TransactionPool_priceBump.set(this, void 0);\n        _TransactionPool_blockchain.set(this, void 0);\n        this.executables = {\n            inProgress: new Set(),\n            pending: new Map()\n        };\n        _TransactionPool_accountPromises.set(this, new Map());\n        this.drain = () => {\n            // notify listeners (the blockchain, then the miner, eventually) that we\n            // have executable transactions ready\n            this.emit(\"drain\");\n        };\n        _TransactionPool_validateTransaction.set(this, (transaction) => {\n            // Check the transaction doesn't exceed the current block limit gas.\n            if (transaction.gas > __classPrivateFieldGet(this, _TransactionPool_options, \"f\").blockGasLimit) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.GAS_LIMIT, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            // Should supply enough intrinsic gas\n            const gas = transaction.calculateIntrinsicGas();\n            if (gas === -1n || transaction.gas.toBigInt() < gas) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INTRINSIC_GAS_TOO_LOW, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            return null;\n        });\n        __classPrivateFieldSet(this, _TransactionPool_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _TransactionPool_options, options, \"f\");\n        this.origins = origins;\n        __classPrivateFieldSet(this, _TransactionPool_priceBump, options.priceBump, \"f\");\n    }\n    /**\n     * Inserts a transaction into the pending queue, if executable, or future pool\n     * if not.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns data that can be used to drain the queue\n     */\n    async prepareTransaction(transaction, secretKey) {\n        let err;\n        err = __classPrivateFieldGet(this, _TransactionPool_validateTransaction, \"f\").call(this, transaction);\n        if (err != null) {\n            throw err;\n        }\n        const from = transaction.from;\n        let txNonce;\n        if (!transaction.nonce.isNull()) {\n            txNonce = transaction.nonce.toBigInt();\n        }\n        const origin = from.toString();\n        // We await the `transactorNoncePromise` async request to ensure we process\n        // transactions in FIFO order *by account*. We look up accounts because\n        // ganache fills in missing nonces automatically, and we need to do it in\n        // order.\n        // The trick here is that we might actually get the next nonce from the\n        // account's pending executable transactions, not the account...\n        // But another transaction might currently be getting the nonce from the\n        // account, if it is, we need to wait for it to be done doing that. Hence:\n        let transactorPromise = __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").get(origin);\n        if (transactorPromise) {\n            await transactorPromise;\n        }\n        // if the user called sendTransaction or sendRawTransaction, effectiveGasPrice\n        // hasn't been set yet on the tx. calculating the effectiveGasPrice requires\n        // the block context, so we need to set it outside of the transaction. this\n        // value is updated in the miner as we're more sure of what block the tx will\n        // actually go on, but we still need to set it here to check for valid\n        // transaction replacements of same origin/nonce transactions\n        if (!transaction.effectiveGasPrice &&\n            __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(1559)) {\n            const baseFeePerGas = __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").blocks.latest.header.baseFeePerGas;\n            transaction.updateEffectiveGasPrice(baseFeePerGas);\n        }\n        // we should _probably_ cache `highestNonce`, but it's actually a really hard thing to cache as the current highest\n        // nonce might be invalidated (like if the sender doesn't have enough funds), so we'd have to go back to the previous\n        // highest nonce... but what if that previous highest nonce was also invalidated?! we have to go back to the... you\n        // get the picture.\n        // So... we currently do things sub-optimally:\n        // if we currently have txs in `executableOriginTransactions`, we iterate over them to find the highest nonce\n        // and use that. Otherwise, we just fetch it from the database.\n        // Beware! There might still be race conditions here:\n        //  * if the highest tx executes, which causes it to be removed from the `executableOriginTransactions` heap,\n        // then a new tx comes in _before_ the block is persisted to the database, the nonce might be of the second\n        // tx would be too low.\n        //  * rough idea for a fix: transactions have a `finalize` method that is called _after_ the tx is saved. Maybe\n        // when tx's are executed their nonce is moved to a `highNonceByOrigin` map? We'd check this map in addition to the\n        // `executableOriginTransactions` map, always taking the highest of the two.\n        let highestNonce = 0n;\n        if (!transactorPromise) {\n            transactorPromise = __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").accounts.getNonceAndBalance(from);\n            __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").set(origin, transactorPromise);\n            transactorPromise.then(() => {\n                __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").delete(origin);\n            });\n        }\n        const transactor = await transactorPromise;\n        const cost = transaction.gas.toBigInt() * transaction.maxGasPrice().toBigInt() +\n            transaction.value.toBigInt();\n        if (transactor.balance.toBigInt() < cost) {\n            throw new ethereum_utils_1.CodedError(ethereum_utils_1.INSUFFICIENT_FUNDS, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n        }\n        const origins = this.origins;\n        const queuedOriginTransactions = origins.get(origin);\n        let transactionPlacement = TriageOption.FutureQueue;\n        const executables = this.executables.pending;\n        let executableOriginTransactions = executables.get(origin);\n        const priceBump = __classPrivateFieldGet(this, _TransactionPool_priceBump, \"f\");\n        let length;\n        if (executableOriginTransactions &&\n            (length = executableOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // executables queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const pendingArray = executableOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const pendingTx = pendingArray[i];\n                if (shouldReplace(pendingTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    pendingArray[i] = transaction;\n                    // we don't want to mark this transaction as \"executable\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesPendingExecutable;\n                    pendingTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n                // track the highest nonce for all transactions pending from this\n                // origin. If this transaction can't be used as a replacement, it will\n                // use this next highest nonce.\n                const pendingTxNonce = pendingTx.nonce.toBigInt();\n                if (pendingTxNonce > highestNonce)\n                    highestNonce = pendingTxNonce;\n            }\n            if (txNonce === void 0) {\n                // if we aren't signed and don't have a transactionNonce yet set it now\n                txNonce = highestNonce + 1n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce === highestNonce + 1n) {\n                // if our transaction's nonce is 1 higher than the last transaction in the\n                // origin's heap we are executable.\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        else {\n            // since we don't have any executable transactions at the moment, we need\n            // to find our nonce from the account itself...\n            const transactorNonce = transactor.nonce.toBigInt();\n            if (txNonce === void 0) {\n                // if we don't have a transactionNonce, just use the account's next\n                // nonce and mark as executable\n                txNonce = transactorNonce ? transactorNonce : 0n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce < transactorNonce) {\n                // it's an error if the transaction's nonce is <= the persisted nonce\n                throw new ethereum_utils_1.CodedError(`the tx doesn't have the correct nonce. account has nonce of: ${transactorNonce} tx has nonce of: ${txNonce}`, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            else if (txNonce === transactorNonce) {\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        // we have future transactions for this origin, this transaction is not yet\n        // executable, and this transaction is not replacing a previously queued/\n        // executable transaction, then this is potentially eligible to replace a\n        // future transaction\n        if (queuedOriginTransactions &&\n            transactionPlacement !== TriageOption.Executable &&\n            transactionPlacement !== TriageOption.ReplacesPendingExecutable &&\n            (length = queuedOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // future queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const queuedArray = queuedOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const queuedTx = queuedArray[i];\n                if (shouldReplace(queuedTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    queuedArray[i] = transaction;\n                    // we don't want to mark this transaction as \"FutureQueue\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesFutureTransaction;\n                    queuedTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n            }\n        }\n        // now that we know we have a transaction nonce we can sign the transaction\n        // (if we have the secret key)\n        if (secretKey) {\n            transaction.signAndHash(secretKey.toBuffer());\n        }\n        switch (transactionPlacement) {\n            case TriageOption.Executable:\n                // if it is executable add it to the executables queue\n                if (executableOriginTransactions) {\n                    executableOriginTransactions.push(transaction);\n                }\n                else {\n                    // if we don't yet have an executables queue for this origin make one now\n                    executableOriginTransactions = utils_1.Heap.from(transaction, byNonce);\n                    executables.set(origin, executableOriginTransactions);\n                }\n                // Now we need to drain any queued transactions that were previously\n                // not executable due to nonce gaps into the origin's queue...\n                if (queuedOriginTransactions) {\n                    let nextExpectedNonce = txNonce + 1n;\n                    while (true) {\n                        const nextTx = queuedOriginTransactions.peek();\n                        const nextTxNonce = nextTx.nonce.toBigInt() || 0n;\n                        if (nextTxNonce !== nextExpectedNonce) {\n                            break;\n                        }\n                        // we've got a an executable nonce! Put it in the executables queue.\n                        executableOriginTransactions.push(nextTx);\n                        // And then remove this transaction from its origin's queue\n                        if (!queuedOriginTransactions.removeBest()) {\n                            // removeBest() returns `false` when there are no more items after\n                            // the removed item. Let's do some cleanup when that happens.\n                            origins.delete(origin);\n                            break;\n                        }\n                        nextExpectedNonce += 1n;\n                    }\n                }\n                return true;\n            case TriageOption.FutureQueue:\n                // otherwise, put it in the future queue\n                if (queuedOriginTransactions) {\n                    queuedOriginTransactions.push(transaction);\n                }\n                else {\n                    origins.set(origin, utils_1.Heap.from(transaction, byNonce));\n                }\n                return false;\n            case TriageOption.ReplacesPendingExecutable:\n                // we've replaced the best transaction from this origin for this nonce,\n                // and it is executable\n                return true;\n            case TriageOption.ReplacesFutureTransaction:\n                // we've replaced the best transaction from this origin for a future\n                // nonce, so this one isn't executable\n                return false;\n        }\n    }\n    clear() {\n        this.origins.clear();\n        __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").clear();\n        this.executables.pending.clear();\n    }\n    /**\n     * Returns the transaction matching the given hash.\n     *\n     * This isn't the fastest thing... but querying for pending transactions is\n     * likely rare, so leaving this slow so other code paths can be faster might\n     * be okay.\n     *\n     * @param transactionHash -\n     */\n    find(transactionHash) {\n        const { pending, inProgress } = this.executables;\n        // first search pending transactions\n        for (let [_, transactions] of this.origins) {\n            if (transactions === undefined)\n                continue;\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // then transactions eligible for execution\n        for (let [_, transactions] of pending) {\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // and finally transactions that have just been processed, but not yet saved\n        for (let tx of inProgress) {\n            if (tx.hash.toBuffer().equals(transactionHash)) {\n                return tx;\n            }\n        }\n        return null;\n    }\n}\nexports.default = TransactionPool;\n_TransactionPool_options = new WeakMap(), _TransactionPool_priceBump = new WeakMap(), _TransactionPool_blockchain = new WeakMap(), _TransactionPool_accountPromises = new WeakMap(), _TransactionPool_validateTransaction = new WeakMap();\n//# sourceMappingURL=transaction-pool.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrieDB = void 0;\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst ENCODING_OPTS = { keyEncoding: \"binary\", valueEncoding: \"binary\" };\n/**\n * `@ethereumjs/trie` requires that any database passed to it implements a `DB`.\n * The `DB` interface defines the minimum set of database access methods that\n * ethereumjs needs internally. We implement that interface in `TrieDB`, as well\n * as a few other methods that we use in Ganache internally.\n */\nclass TrieDB {\n    constructor(db) {\n        this._db = db;\n    }\n    async get(key) {\n        let value = null;\n        try {\n            value = await this._db.get(key, ENCODING_OPTS);\n        }\n        catch (error) {\n            if (error.notFound) {\n                // not found, returning null\n            }\n            else {\n                throw error;\n            }\n        }\n        return value;\n    }\n    async put(key, val) {\n        await this._db.put(key, val, ENCODING_OPTS);\n    }\n    async del(key) {\n        await this._db.del(key, ENCODING_OPTS);\n    }\n    async batch(opStack) {\n        await this._db.batch(opStack, ENCODING_OPTS);\n    }\n    copy() {\n        return new TrieDB(this._db);\n    }\n    async close() {\n        await this._db.close();\n    }\n    sublevel(prefix, options) {\n        return (0, subleveldown_1.default)(this._db, prefix, options);\n    }\n    createReadStream(options) {\n        return this._db.createReadStream(options);\n    }\n}\nexports.TrieDB = TrieDB;\n//# sourceMappingURL=trie-db.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Wallet_randomRng, _Wallet_randomBytes, _Wallet_initializeAccounts, _Wallet_intializeAccountFromKey, _Wallet_initializeAccountWithoutKey, _Wallet_initializeAccount, _Wallet_lockAccount;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst hdkey_1 = require(\"./hdkey\");\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst secp256k1_1 = __importStar(require(\"@ganache/secp256k1\"));\nconst bip39_1 = require(\"bip39\");\nconst seedrandom_1 = require(\"seedrandom\");\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst fs_1 = require(\"fs\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst TWELVE_255s = Buffer.allocUnsafe(12).fill(255);\n//#region Constants\nconst SCRYPT_PARAMS = {\n    dklen: 32,\n    n: 1024,\n    p: 8,\n    r: 1\n};\nconst CIPHER = \"aes-128-ctr\";\nconst MAX_ACCOUNTS = 100000;\nconst scrypt = (...args) => {\n    return new Promise((resolve, reject) => {\n        crypto_1.default.scrypt.call(crypto_1.default, ...args, (err, derivedKey) => {\n            if (err) {\n                return void reject(err);\n            }\n            return resolve(derivedKey);\n        });\n    });\n};\nconst scryptSync = (...args) => {\n    return crypto_1.default.scryptSync.call(crypto_1.default, ...args);\n};\n/**\n * A Buffer that can be reused by `uncompressedPublicKeyToAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst uncompressedPublicKeyToAddress = (uncompressedPublicKey) => {\n    const status = secp256k1_1.default.publicKeyConvert(SHARED_BUFFER, uncompressedPublicKey);\n    switch (status) {\n        case 0:\n            return ethereum_address_1.Address.from((0, utils_1.keccak)(SHARED_BUFFER.slice(1)).slice(-20));\n        case 1:\n            throw new Error(\"Public Key could not be parsed\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n};\nconst asUUID = (uuid) => {\n    return `${uuid.toString(\"hex\", 0, 4)}-${uuid.toString(\"hex\", 4, 6)}-${uuid.toString(\"hex\", 6, 8)}-${uuid.toString(\"hex\", 8, 10)}-${uuid.toString(\"hex\", 10)}`;\n};\nclass Wallet {\n    constructor(opts, logging) {\n        this.knownAccounts = new Set();\n        this.keyFiles = new Map();\n        this.unlockedAccounts = new Map();\n        this.lockTimers = new Map();\n        _Wallet_randomRng.set(this, void 0);\n        _Wallet_randomBytes.set(this, (length) => {\n            // Since this is a mock RPC library, the rng doesn't need to be\n            // cryptographically secure, and determinism is desired.\n            const buf = Buffer.allocUnsafe(length);\n            const rand = __classPrivateFieldGet(this, _Wallet_randomRng, \"f\");\n            for (let i = 0; i < length; i++) {\n                buf[i] = (rand() * 256) | 0; // generates a random number from 0 to 255\n            }\n            return buf;\n        });\n        _Wallet_initializeAccounts.set(this, (options) => {\n            const makeAccountAtIndex = (0, hdkey_1.createAccountGeneratorFromSeedAndPath)((0, bip39_1.mnemonicToSeedSync)(options.mnemonic, null), options.hdPath);\n            // convert a potentially fractional balance of Ether to WEI\n            const balanceParts = options.defaultBalance.toString().split(\".\", 2);\n            const significand = BigInt(balanceParts[0]);\n            const fractionalStr = balanceParts[1] || \"0\";\n            const fractional = BigInt(fractionalStr);\n            const magnitude = 10n ** BigInt(fractionalStr.length);\n            const defaultBalanceInWei = utils_1.WEI * significand + fractional * (utils_1.WEI / magnitude);\n            const etherInWei = utils_1.Quantity.from(defaultBalanceInWei);\n            const accounts = new Map();\n            const givenAccounts = options.accounts;\n            let accountsLength;\n            if (givenAccounts && (accountsLength = givenAccounts.length) !== 0) {\n                for (let i = 0; i < accountsLength; i++) {\n                    const givenAccount = givenAccounts[i];\n                    const secretKey = givenAccount.secretKey;\n                    let account;\n                    if (secretKey) {\n                        const balance = utils_1.Quantity.from(givenAccount.balance);\n                        account = __classPrivateFieldGet(this, _Wallet_intializeAccountFromKey, \"f\").call(this, balance, secretKey, options);\n                    }\n                    else {\n                        const acct = makeAccountAtIndex(i);\n                        account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                    }\n                    accounts.set(account.address.toString(), account);\n                }\n            }\n            else {\n                const numberOfAccounts = options.totalAccounts;\n                if (numberOfAccounts != null) {\n                    for (let i = 0; i < numberOfAccounts; i++) {\n                        const acct = makeAccountAtIndex(i);\n                        const account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                        accounts.set(account.address.toString(), account);\n                    }\n                }\n            }\n            return accounts;\n        });\n        _Wallet_intializeAccountFromKey.set(this, (balance, secretKey, options) => {\n            const privateKey = utils_1.Data.from(secretKey);\n            const account = Wallet.createAccountFromPrivateKey(privateKey);\n            account.balance = balance;\n            const address = account.address;\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccountWithoutKey.set(this, (balance, acct, options) => {\n            const address = uncompressedPublicKeyToAddress(acct.publicKey);\n            const privateKey = utils_1.Data.from(acct.privateKey);\n            const account = Wallet.createAccount(balance, privateKey, address);\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccount.set(this, (address, privateKey, options) => {\n            const { passphrase, lock: lockAccounts } = options;\n            const knownAccounts = this.knownAccounts;\n            this.addToKeyFileSync(address, privateKey, passphrase, lockAccounts);\n            const strAddress = address.toString();\n            knownAccounts.add(strAddress);\n            // if the `lock` option has been not been set, we're safe to add this\n            // account to unlockedAccounts\n            if (!lockAccounts) {\n                this.unlockedAccounts.set(strAddress, privateKey);\n            }\n        });\n        _Wallet_lockAccount.set(this, (lowerAddress) => {\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        });\n        if (opts.totalAccounts > MAX_ACCOUNTS) {\n            logging.logger.log(`wallet.totalAccounts exceeds MAX_ACCOUNTS (${MAX_ACCOUNTS}) and may affect performance.`);\n        }\n        // create a RNG from our initial starting conditions (opts.mnemonic)\n        __classPrivateFieldSet(this, _Wallet_randomRng, (0, seedrandom_1.alea)(\"ganache \" + opts.mnemonic), \"f\");\n        const initialAccounts = __classPrivateFieldGet(this, _Wallet_initializeAccounts, \"f\").call(this, opts);\n        this.initialAccounts = Array.from(initialAccounts.values());\n        this.addresses = Array.from(initialAccounts.keys());\n        const l = this.initialAccounts.length;\n        const unlockedAccounts = this.unlockedAccounts;\n        //#region Unlocked Accounts\n        const givenUnlockedAccounts = opts.unlockedAccounts;\n        if (givenUnlockedAccounts) {\n            const ul = givenUnlockedAccounts.length;\n            for (let i = 0; i < ul; i++) {\n                let arg = givenUnlockedAccounts[i];\n                let address;\n                let privateKey;\n                switch (typeof arg) {\n                    case \"string\":\n                        // `toLowerCase` so we handle uppercase `0X` formats\n                        const addressOrIndex = arg.toLowerCase();\n                        if (addressOrIndex.indexOf(\"0x\") === 0) {\n                            address = addressOrIndex;\n                            const account = initialAccounts.get(address);\n                            if (account) {\n                                privateKey = account.privateKey;\n                            }\n                            else {\n                                // this wasn't one of our initial accounts, so make a priv key.\n                                privateKey = this.createFakePrivateKey(address);\n                                // add the account to the list of addresses because we want\n                                // `eth_accounts` to return this account.\n                                this.addresses.push(address);\n                            }\n                            break;\n                        }\n                        else {\n                            // try to convert the arg string to a number.\n                            // don't use parseInt because strings like `\"123abc\"` parse\n                            // to `123`, and there is probably an error on the user's side we'd\n                            // want to uncover.\n                            const index = arg - 0;\n                            // if we don't have a valid number, or the number isn't a valid JS\n                            // integer (no bigints or decimals, please), throw an error.\n                            if (!Number.isSafeInteger(index)) {\n                                throw new Error(`Invalid value in wallet.unlockedAccounts: ${arg}`);\n                            }\n                            arg = index;\n                            // not `break`ing here because I want this to fall through to the\n                            //  `\"number\"` case below.\n                            // Refactor it if you want.\n                            // break; // no break, please.\n                        }\n                    case \"number\":\n                        const account = this.initialAccounts[arg];\n                        if (account == null) {\n                            throw new Error(`Account at index ${arg} not found. Max index available is ${l - 1}.`);\n                        }\n                        address = account.address.toString().toLowerCase();\n                        privateKey = account.privateKey;\n                        break;\n                    default:\n                        throw new Error(`Invalid value specified in unlocked_accounts`);\n                }\n                if (unlockedAccounts.has(address))\n                    continue;\n                unlockedAccounts.set(address, privateKey);\n            }\n        }\n        //#endregion\n        //#region save accounts to disk\n        if (opts.accountKeysPath != null) {\n            const fileData = {\n                addresses: {},\n                private_keys: {}\n            };\n            unlockedAccounts.forEach((privateKey, address) => {\n                fileData.addresses[address] = address;\n                fileData.private_keys[address] = privateKey;\n            });\n            // WARNING: Do not turn this to an async method without\n            // making a Wallet.initialize() function and calling it via\n            // Provider.initialize(). No async methods in constructors.\n            // writeFileSync here is acceptable.\n            (0, fs_1.writeFileSync)(opts.accountKeysPath, JSON.stringify(fileData));\n        }\n        //#endregion\n    }\n    async encrypt(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = await scrypt(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    /**\n     * Syncronous version of the `encrypt` function.\n     * @param privateKey -\n     * @param passphrase -\n     */\n    encryptSync(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = scryptSync(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    finishEncryption(derivedKey, privateKey, salt, iv, uuid) {\n        const cipher = crypto_1.default.createCipheriv(CIPHER, derivedKey.slice(0, 16), iv);\n        const ciphertext = Buffer.concat([\n            cipher.update(privateKey.toBuffer()),\n            cipher.final()\n        ]);\n        const mac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n        return {\n            crypto: {\n                cipher: CIPHER,\n                ciphertext: utils_1.Data.from(ciphertext),\n                cipherparams: {\n                    iv: utils_1.Data.from(iv)\n                },\n                kdf: \"scrypt\",\n                kdfParams: {\n                    ...SCRYPT_PARAMS,\n                    salt: utils_1.Data.from(salt)\n                },\n                mac: utils_1.Data.from(mac)\n            },\n            id: asUUID(uuid),\n            version: 3\n        };\n    }\n    async decrypt(keyfile, passphrase) {\n        const crypt = keyfile.crypto;\n        if (crypt.cipher !== CIPHER) {\n            throw new Error(`keyfile cypher must be \"${CIPHER}\"`);\n        }\n        if (crypt.kdf !== \"scrypt\") {\n            throw new Error(`keyfile kdf must be \"script\"`);\n        }\n        const kdfParams = crypt.kdfParams;\n        const salt = kdfParams.salt;\n        const mac = crypt.mac;\n        const ciphertext = crypt.ciphertext.toBuffer();\n        let derivedKey;\n        let localMac;\n        if (passphrase != null) {\n            try {\n                derivedKey = await scrypt(passphrase, salt.toBuffer(), kdfParams.dklen, { ...kdfParams, N: kdfParams.n });\n                localMac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n            }\n            catch {\n                localMac = null;\n            }\n        }\n        if (!localMac || !mac.toBuffer().equals(localMac)) {\n            throw new Error(\"could not decrypt key with given passphrase\");\n        }\n        const decipher = crypto_1.default.createDecipheriv(crypt.cipher, derivedKey.slice(0, 16), crypt.cipherparams.iv.toBuffer());\n        const plaintext = decipher.update(ciphertext);\n        return plaintext;\n    }\n    /**\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    async addToKeyFile(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: await this.encrypt(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Synchronus version of `addToKeyFile`.\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    addToKeyFileSync(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: this.encryptSync(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Fetches the private key for a specific address. If the keyFile is encrypted\n     * for the address, the passphrase is used to decrypt.\n     * @param address - The address whose private key is to be fetched.\n     * @param passphrase - The passphrase used to decrypt the private key.\n     */\n    async getFromKeyFile(address, passphrase) {\n        const keyFile = this.keyFiles.get(address.toString());\n        if (keyFile === undefined || keyFile === null) {\n            throw new Error(\"no key for given address or file\");\n        }\n        if (keyFile.encrypted === true) {\n            return this.decrypt(keyFile.key, passphrase);\n        }\n        else {\n            // if the keyFile is not marked as encrypted, they should provide no\n            // passphrase. so we'll make it look like they gave the \"wrong\" passphrase\n            // by throwing the same error that's thrown when decrypting\n            if (passphrase) {\n                throw new Error('could not decrypt key with given passphrase (default passphrase for accounts created at startup is \"\")');\n            }\n            else {\n                return keyFile.key;\n            }\n        }\n    }\n    static createAccount(balance, privateKey, address) {\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        account.balance = balance;\n        return account;\n    }\n    static createAccountFromPrivateKey(privateKey) {\n        const address = ethereum_address_1.Address.from((0, util_1.privateToAddress)(privateKey.toBuffer()));\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        return account;\n    }\n    createRandomAccount() {\n        // create some seeded deterministic psuedo-randomness based on the chain's\n        // initial starting conditions\n        const seed = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 128);\n        const acct = (0, hdkey_1.createAccountFromSeed)(seed);\n        const address = uncompressedPublicKeyToAddress(acct.publicKey);\n        const privateKey = utils_1.Data.from(acct.privateKey);\n        return Wallet.createAccount(utils_1.Quantity.Zero, privateKey, address);\n    }\n    async unlockAccount(address, passphrase, duration) {\n        const lowerAddress = address.toString();\n        const secretKey = await this.getFromKeyFile(address, passphrase);\n        const existingTimer = this.lockTimers.get(lowerAddress);\n        if (existingTimer) {\n            clearTimeout(existingTimer);\n        }\n        // a duration <= 0 will remain unlocked\n        const durationMs = (duration * 1000) | 0;\n        if (durationMs > 0) {\n            const timeout = setTimeout(__classPrivateFieldGet(this, _Wallet_lockAccount, \"f\"), durationMs, lowerAddress);\n            (0, utils_1.unref)(timeout);\n            this.lockTimers.set(lowerAddress, timeout);\n        }\n        this.unlockedAccounts.set(lowerAddress, utils_1.Data.from(secretKey));\n        return true;\n    }\n    async addUnknownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we \"know\" about this account, it cannot be added this way\n        if (this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        // this is an unknown account, so we do not have a private key. instead,\n        // we'll need to create a fake one.\n        const privateKey = this.createFakePrivateKey(lowerAddress);\n        await this.addToKeyFile(address, privateKey, passphrase, true);\n        this.knownAccounts.add(lowerAddress);\n        this.addresses.push(lowerAddress);\n        return true;\n    }\n    async removeKnownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we don't \"know\" about this account, it cannot be removed\n        if (!this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        const privateKey = await this.getFromKeyFile(address, passphrase);\n        // we don't actually care what the private key is, we just need to know that\n        // the passphrase they supplied is the right one. (empty string is a valid\n        // privateKey for added, previously unknown accounts)\n        if (privateKey != null) {\n            this.keyFiles.delete(lowerAddress);\n            this.knownAccounts.delete(lowerAddress);\n            this.addresses.splice(this.addresses.indexOf(lowerAddress), 1);\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        }\n        else {\n            throw new Error(\"could not find private key for address/passphrase combination\");\n        }\n    }\n    createFakePrivateKey(address) {\n        let fakePrivateKey;\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        if (addressBuf.equals(utils_1.ACCOUNT_ZERO)) {\n            // allow signing with the 0x0 address...\n            // always sign with the same fake key, a 31 `0`s followed by a single\n            // `1`. The key is arbitrary. It just must not be all `0`s and must be\n            // deterministic.\n            // see: https://github.com/ethereumjs/ethereumjs-monorepo/issues/829#issue-674385636\n            fakePrivateKey = Buffer.allocUnsafe(32).fill(0, 0, 31);\n            fakePrivateKey[31] = 1;\n        }\n        else {\n            // Private keys must not be greater than *or equal to*:\n            // 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141, and\n            // if they are that large then signing of the transaction (ecdsaSign) will\n            // fail.\n            // Historically, we've just concatenated the address with part of itself,\n            // to make something long enough to use as a private key, so we can't\n            // change the default/legacy behavior now. But for addresses that would\n            // generate an invalid private key we must use a different approach. If\n            // the legacy way of generating a private key results in a key that is too\n            // large\n            //\n            const first12 = addressBuf.slice(0, 12);\n            fakePrivateKey = Buffer.concat([addressBuf, first12]);\n            // BigInt is slow, so only do it if we might need to, which we usually\n            // never will.\n            // Since we already have a slice of the first 12 bytes let's use it to\n            // help check if we might overflow the max secp256k1 key value. If the\n            // first 12 bytes, the most significant digits of the key, are all `255`\n            // then there is a chance that the fakePrivateKey will be too large.\n            // `Buffer.compare` is a native method in V8, so it should be pretty fast.\n            // example: the address `0xffffffffffff{anything can go here}` generates a\n            // bad fakePrivateKey but, `0xfffffffffffe{anything can go here}` never\n            // will. There are obviously many chances for a false positive, but the\n            // next condition in the `while` loop will catch those.\n            if (first12.compare(TWELVE_255s) === 0) {\n                while (BigInt(`0x${fakePrivateKey.toString(\"hex\")}`) >= secp256k1_1.SECP256K1_N) {\n                    // keccak returns a 32 byte hash of the input data, which is the exact\n                    // length we need for a private key.\n                    // note: if keccak can return its own input as its output, then this\n                    // loops forever. The chances of this happening are impossibly low, so\n                    // it's not worth the effort to check, but it would be interesting if\n                    // someone reported an issue that can cause this for a specific\n                    // address!\n                    fakePrivateKey = (0, utils_1.keccak)(fakePrivateKey);\n                }\n            }\n        }\n        return utils_1.Data.from(fakePrivateKey);\n    }\n    lockAccount(lowerAddress) {\n        if (!this.unlockedAccounts.has(lowerAddress))\n            return false;\n        clearTimeout(this.lockTimers.get(lowerAddress));\n        return __classPrivateFieldGet(this, _Wallet_lockAccount, \"f\").call(this, lowerAddress);\n    }\n}\nexports.default = Wallet;\n_Wallet_randomRng = new WeakMap(), _Wallet_randomBytes = new WeakMap(), _Wallet_initializeAccounts = new WeakMap(), _Wallet_intializeAccountFromKey = new WeakMap(), _Wallet_initializeAccountWithoutKey = new WeakMap(), _Wallet_initializeAccount = new WeakMap(), _Wallet_lockAccount = new WeakMap();\n//# sourceMappingURL=wallet.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-options\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst HARDFORKS = [\n    \"constantinople\",\n    \"byzantium\",\n    \"petersburg\",\n    \"istanbul\",\n    \"muirGlacier\",\n    \"berlin\",\n    \"london\",\n    \"arrowGlacier\",\n    \"grayGlacier\",\n    \"merge\"\n];\nexports.ChainOptions = {\n    allowUnlimitedContractSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited contract sizes while debugging. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        legacyName: \"allowUnlimitedContractSize\",\n        cliType: \"boolean\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        legacyName: \"asyncRequestProcessing\",\n        cliType: \"boolean\"\n    },\n    chainId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The currently configured chain id.\",\n        default: () => 1337,\n        legacyName: \"chainId\",\n        cliType: \"number\"\n    },\n    networkId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The id of the network returned by the RPC method `net_version`.\",\n        default: () => Date.now(),\n        defaultDescription: \"System time at process start or Network ID of forked blockchain if configured.\",\n        legacyName: \"network_id\",\n        cliAliases: [\"i\", \"networkId\"],\n        cliType: \"number\"\n    },\n    time: {\n        normalize: rawInput => (rawInput !== undefined ? new Date(rawInput) : null),\n        cliDescription: \"Date that the first block should start.\",\n        legacyName: \"time\",\n        cliAliases: [\"t\", \"time\"],\n        cliType: \"string\",\n        cliCoerce: (input) => {\n            // try parsing the input as a number, if it works use the number\n            // otherwise pass the string along\n            const asNum = input / 1;\n            if (isNaN(asNum)) {\n                return input;\n            }\n            else {\n                return asNum;\n            }\n        }\n    },\n    hardfork: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set the hardfork rules for the EVM.\",\n        default: () => \"merge\",\n        legacyName: \"hardfork\",\n        cliAliases: [\"k\", \"hardfork\"],\n        cliType: \"string\",\n        cliChoices: HARDFORKS\n    },\n    vmErrorsOnRPCResponse: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Whether to report runtime errors from EVM code as RPC errors.\",\n        default: () => false,\n        legacyName: \"vmErrorsOnRPCResponse\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        legacyName: \"db\",\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        legacyName: \"db_path\",\n        cliAliases: [\"db\", \"db_path\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkOptions = exports.KNOWN_NETWORKS = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst url_1 = require(\"url\");\nconst version = process.env.VERSION || \"DEV\";\n// we aren't going to treat block numbers as a bigint, so we don't want to\n// accept block numbers we can't add to\nconst MAX_BLOCK_NUMBER = Math.floor(Number.MAX_SAFE_INTEGER / 2);\nexports.KNOWN_NETWORKS = [\n    \"mainnet\",\n    \"goerli\",\n    \"görli\",\n    \"sepolia\"\n];\nconst reColonSplit = /:\\s?(?:.+)/;\nfunction coerceHeaders(headers, input) {\n    // split *1* time on the first colon, this also ignores leading whitespace\n    // from the value per RFC7230\n    const [name, value] = input.split(reColonSplit);\n    headers.push({ name, value });\n    return headers;\n}\nconst ALLOWED_PROTOCOLS = [\"ws:\", \"wss:\", \"http:\", \"https:\"];\nconst arrayToOxfordList = (arr, conjunction = \"and\") => {\n    const last = arr.pop();\n    switch (arr.length) {\n        case 0:\n            return \"\";\n        case 1:\n            return last;\n        case 2:\n            return arr[0] + ` ${conjunction} ` + last;\n        default:\n            return arr.join(\", \") + `, ${conjunction} ` + last;\n    }\n};\nexports.ForkOptions = {\n    // url's definition _must_ come before blockNumber, username, and password\n    // as the defaults are processed in order, and they rely on the `fork.url`\n    url: {\n        normalize: rawInput => {\n            // because `url` is an alias of `fork`, along with `provider` and\n            // `network` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput !== \"string\" ||\n                exports.KNOWN_NETWORKS.includes(rawInput)) {\n                // if the string matches a network name ignore it\n                return;\n            }\n            let url = new url_1.URL(rawInput);\n            const path = url.pathname + url.search;\n            const lastIndex = path.lastIndexOf(\"@\");\n            // pull the blockNumber out of the URL\n            if (lastIndex !== -1) {\n                // remove everything after the last @\n                url = new url_1.URL(path.substr(0, lastIndex), url);\n                const blockNumber = path.substr(lastIndex + 1);\n                if (blockNumber && blockNumber !== ethereum_utils_1.Tag.latest) {\n                    // don't use parseInt because strings like `\"123abc\"` parse\n                    // to `123`, and there is probably an error on the user's side we'd\n                    // want to uncover.\n                    const asNum = blockNumber - 0;\n                    // don't allow invalid, negative, or decimals\n                    if (isNaN(asNum) ||\n                        asNum < 0 ||\n                        (asNum | 0) !== asNum ||\n                        asNum > MAX_BLOCK_NUMBER) {\n                        console.warn(`Ignoring invalid block number in fork url: \"${blockNumber}\". Block number must be an integer from [0 - ${MAX_BLOCK_NUMBER}].`);\n                    }\n                    else {\n                        url._blockNumber = asNum;\n                    }\n                }\n                if (!ALLOWED_PROTOCOLS.includes(url.protocol)) {\n                    throw new Error(`Invalid protocol for fork url: ${url.protocol}. Supported protocols are: ${arrayToOxfordList(ALLOWED_PROTOCOLS)}.`);\n                }\n            }\n            return url;\n        },\n        cliDescription: `Fork from another currently running Ethereum client at a given block. Input should be the URL of the node, e.g. \\`\"http://localhost:1337\"\\`. You can optionally specify the block to fork from using an @ sign: \\`\"http://localhost:1337@8675309\"\\`.\n\nYou can specify Basic Authentication credentials in the URL as well. e.g., \\`\"wss://user:password@example.com/\"\\`. If you need to use an Infura Project Secret, you would use it like this: \\`\"wss://:{YOUR-PROJECT-SECRET}@mainnet.infura.com/...\"\\`\n\nAlternatively, you can use the \\`fork.username\\` and \\`fork.password\\` options.`,\n        legacyName: \"fork\",\n        cliAliases: [\"f\", \"fork\"],\n        conflicts: [\"provider\", \"network\"]\n    },\n    provider: {\n        normalize: rawInput => {\n            // because `provider` is an alias of `fork`, along with `network` and\n            // `url` the runtime type isn't always going to match the TypeScript type.\n            // if rawInput is a string it will be handled by the `url` or `network`\n            // handlers.\n            if (typeof rawInput === \"string\" || // like `--fork http://url` (url shorthand)\n                (typeof rawInput === \"object\" &&\n                    (typeof rawInput.url === \"string\" || // like `--fork.url http://url`\n                        typeof rawInput.url === \"boolean\" || // like `--fork` (implied \"mainnet\" network shorthand)\n                        typeof rawInput.network === \"string\" || // like `--fork.network mainnet`\n                        typeof rawInput.network === \"boolean\")) // like `--fork.network true`\n            ) {\n                return;\n            }\n            else {\n                return rawInput;\n            }\n        },\n        cliDescription: \"Specify an EIP-1193 provider to use instead of a url.\",\n        disableInCLI: true,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"network\"]\n    },\n    network: {\n        normalize: rawInput => {\n            // because `network` is an alias of `fork`, along with `provider` and\n            // `url` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput === \"string\" && exports.KNOWN_NETWORKS.includes(rawInput))\n                return rawInput;\n            if (\n            // handle `ganache --fork` case, which gets weird because both url\n            // and network can use the `--fork` flag (the `url` handler ignores\n            // non-strings, like `true` and strings that match our known networks)\n            typeof rawInput === \"object\") {\n                if (\"url\" in rawInput) {\n                    const { url } = rawInput;\n                    if (url === true) {\n                        return \"mainnet\";\n                    }\n                    else if (exports.KNOWN_NETWORKS.includes(url)) {\n                        return rawInput.url;\n                    }\n                }\n            }\n        },\n        cliDescription: `A network name to fork from; uses Infura's archive nodes.\n\nUse the shorthand command \\`ganache --fork\\` to automatically fork from Mainnet at the latest block.\n`,\n        cliChoices: exports.KNOWN_NETWORKS,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"provider\"]\n    },\n    blockNumber: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Block number the provider should fork from.\",\n        legacyName: \"fork_block_number\",\n        default: ({ url, provider, network }) => {\n            if (url) {\n                // use the url's _blockNumber, if present, otherwise use \"latest\"\n                if (url._blockNumber) {\n                    return url._blockNumber;\n                }\n                else {\n                    return ethereum_utils_1.Tag.latest;\n                }\n            }\n            else if (provider || network) {\n                return ethereum_utils_1.Tag.latest;\n            }\n            else {\n                return;\n            }\n        },\n        defaultDescription: `Latest block number`\n        //implies: [\"url\"]\n    },\n    preLatestConfirmations: {\n        normalize: helpers_1.normalize,\n        cliDescription: 'When the `fork.blockNumber` is set to \"latest\" (default), the number of blocks before the remote node\\'s \"latest\" block to fork from.',\n        default: () => 5,\n        defaultDescription: \"5\",\n        cliType: \"number\"\n    },\n    username: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Username to use for Basic Authentication. Does not require setting \\`fork.password\\`.\n    \nWhen combined with \\`fork.password\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's username, if present\n            if (url) {\n                if (url.username) {\n                    return url.username;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    password: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Password to use for Basic Authentication. Does not require setting \\`fork.username\\`.\n\nWhen combined with \\`fork.username\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's password, if present\n            if (url) {\n                if (url.password) {\n                    return url.password;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    jwt: {\n        normalize: helpers_1.normalize,\n        cliDescription: `_Encoded_ JSON Web Token (JWT) used for authenticating to some servers.\n\nShorthand for \\`fork: { headers: { \"Authorization\": \"Bearer {YOUR-ENCODED-JWT}\" } }\\`\n\n If the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ the JWT Bearer token.`\n        //implies: [\"url\"]\n    },\n    userAgent: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The User-Agent header sent to the fork on each request.\n\nSent as Api-User-Agent when used in the browser.\n \nWill be overridden by a \\`\"User-Agent\"\\` defined in the \\`fork.headers\\` option, if provided.`,\n        default: () => {\n            return `Ganache/${version} (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)`;\n        }\n        // implies: [\"url\"]\n    },\n    origin: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The Origin header sent to the fork on each request.\n\nIgnored in the browser.\n\nWill be overridden by an \\`\"Origin\"\\` value defined in the \\`fork.headers\\` option, if provided.`\n        //implies: [\"url\"]\n    },\n    headers: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Headers to supply on each request to the forked provider.\n\nHeaders set here override headers set by other options, unless otherwise specified.\n\nDefaults to: \\`[\"User-Agent: Ganache/VERSION (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)\"]\\``,\n        cliType: \"array:string\",\n        implies: [\"url\"],\n        cliCoerce: rawInput => rawInput.reduce(coerceHeaders, [])\n    },\n    requestsPerSecond: {\n        normalize(rawValue) {\n            if (rawValue < 0) {\n                throw new Error(`fork.requestsPerSecond is invalid: \"${rawValue}\"; must be a positive number`);\n            }\n            return rawValue;\n        },\n        default: () => 0,\n        cliDescription: \"Restrict the number of requests per second sent to the fork provider. `0` means no limit is applied.\",\n        cliType: \"number\"\n        //implies: [\"url\"]\n    },\n    disableCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Disables caching of all forking requests.\",\n        cliType: \"boolean\"\n    },\n    deleteCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Deletes the persistent cache before starting.\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=fork-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumOptionsConfig = exports.EthereumDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst fork_options_1 = require(\"./fork-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.EthereumDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions,\n    fork: fork_options_1.ForkOptions\n};\nexports.EthereumOptionsConfig = new options_1.OptionsConfig(exports.EthereumDefaults);\n__exportStar(require(\"./chain-options\"), exports);\n__exportStar(require(\"./database-options\"), exports);\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./logging-options\"), exports);\n__exportStar(require(\"./miner-options\"), exports);\n__exportStar(require(\"./wallet-options\"), exports);\n__exportStar(require(\"./fork-options\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.LoggingOptions = {\n    debug: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log EVM opcodes.\",\n        default: () => false,\n        legacyName: \"debug\",\n        cliType: \"boolean\"\n    },\n    quiet: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to disable logging.\",\n        default: () => false,\n        cliAliases: [\"q\", \"quiet\"],\n        cliType: \"boolean\"\n    },\n    logger: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        // disable the default logger if `quiet` is `true`\n        default: config => ({\n            log: config.quiet ? () => { } : console.log\n        }),\n        legacyName: \"logger\"\n    },\n    verbose: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log detailed RPC requests.\",\n        default: () => false,\n        legacyName: \"verbose\",\n        cliAliases: [\"v\", \"verbose\"],\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\n/**\n * Attempts to convert strings that don't start with `0x` to a BigInt\n *\n * @param str - a string that represents a bigint, number, or hexadecimal value\n */\nconst toBigIntOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return BigInt(str);\n    }\n};\n/**\n * Handles defaultTransactionGasLimit special case of 'estimate' for tx value.\n *\n * @param str - the string literal 'estimate' or string that that represents a bigint, number, or hexadecimal value.\n */\nconst estimateOrToBigIntOrString = (str) => {\n    if (str === \"estimate\") {\n        return str;\n    }\n    else {\n        return toBigIntOrString(str);\n    }\n};\n/**\n * Attempts to convert strings that don't start with `0x` to a number\n *\n * @param str - a string that represents a number, or hexadecimal value\n */\nconst toNumberOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return parseInt(str);\n    }\n};\nexports.MinerOptions = {\n    blockTime: {\n        normalize: rawInput => {\n            if (rawInput < 0) {\n                throw new Error(\"miner.blockTime must be 0 or a positive number.\");\n            }\n            return rawInput;\n        },\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A blockTime of `0` enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        legacyName: \"blockTime\",\n        cliAliases: [\"b\", \"blockTime\"],\n        cliType: \"number\"\n    },\n    timestampIncrement: {\n        normalize: rawType => rawType === \"clock\" ? \"clock\" : utils_1.Quantity.from(BigInt(rawType)),\n        cliDescription: 'The amount of time, in seconds, to add to the `timestamp` of each new block header. By default the value is `\"clock\"`, which uses your system clock time as the timestamp for each block.',\n        default: () => \"clock\",\n        cliType: \"string\"\n    },\n    defaultGasPrice: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the default gas price in WEI for transactions if not otherwise specified.\",\n        default: () => utils_1.Quantity.from(2000000000),\n        legacyName: \"gasPrice\",\n        cliAliases: [\"g\", \"gasPrice\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    blockGasLimit: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the block gas limit in WEI.\",\n        default: () => utils_1.Quantity.from(30000000),\n        legacyName: \"gasLimit\",\n        cliAliases: [\"l\", \"gasLimit\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    defaultTransactionGasLimit: {\n        normalize: rawType => rawType === \"estimate\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(rawType),\n        cliDescription: 'Sets the default transaction gas limit in WEI. Set to \"estimate\" to use an estimate (slows down transaction execution by 40%+).',\n        default: () => utils_1.Quantity.from(90000),\n        cliType: \"string\",\n        cliCoerce: estimateOrToBigIntOrString\n    },\n    difficulty: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the block difficulty. Value is always 0 after the merge hardfork.\",\n        default: () => utils_1.Quantity.One,\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    callGasLimit: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the transaction gas limit in WEI for `eth_call` and `eth_estimateGas` calls.\",\n        default: () => utils_1.Quantity.from(50000000),\n        legacyName: \"callGasLimit\",\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    instamine: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Set the instamine mode to either \"eager\" (default) or \"strict\".\n * In \"eager\" mode a transaction will be included in a block before its hash is returned to the caller.\n * In \"strict\" mode a transaction's hash is returned to the caller before the transaction is included in a block.\n\\`instamine\\` has no effect if \\`blockTime\\` is *not* \\`0\\` (the default).`,\n        default: () => \"eager\",\n        legacyName: \"instamine\",\n        cliAliases: [\"instamine\"],\n        cliType: \"string\",\n        cliChoices: [\"eager\", \"strict\"]\n    },\n    coinbase: {\n        normalize: rawType => {\n            return typeof rawType === \"number\" ? rawType : ethereum_address_1.Address.from(rawType);\n        },\n        cliDescription: \"Sets the address where mining rewards will go.\",\n        cliType: \"string\",\n        cliCoerce: toNumberOrString,\n        default: () => ethereum_address_1.Address.from(utils_1.ACCOUNT_ZERO)\n    },\n    extraData: {\n        normalize: (extra) => {\n            const bytes = utils_1.Data.from(extra);\n            if (bytes.toBuffer().length > 32) {\n                throw new Error(`extra exceeds max length. ${bytes.toBuffer().length} > 32`);\n            }\n            return bytes;\n        },\n        cliDescription: \"Set the extraData block header field a miner can include.\",\n        default: () => utils_1.Data.Empty,\n        cliType: \"string\"\n    },\n    priceBump: {\n        normalize: BigInt,\n        cliDescription: \"Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\",\n        default: () => 10n,\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst bip39_1 = require(\"bip39\");\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\n/**\n * WARNING: to maintain compatibility with ganache v2 this RNG only generates\n * numbers from 0-254 instead of 0-255! Hence the name, `notVeryRandomBytes`\n * @param length -\n * @param rng -\n */\nfunction notVeryRandomBytes(length, rng) {\n    const buf = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; i++) {\n        buf[i] = (rng() * 255) | 0;\n    }\n    return buf;\n}\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    accounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Account data in the form \\`<private_key>,<initial_balance>\\`, can be specified multiple times. Note that private keys are 64 characters long and must be entered as an 0x-prefixed hex string. Balance can either be input as an integer, or as a 0x-prefixed hex string with either form specifying the initial balance in wei.`,\n        legacyName: \"accounts\",\n        cliAliases: [\"account\"],\n        cliType: \"array:string\",\n        cliCoerce: rawInput => {\n            return rawInput.map(accountString => {\n                // split *1* time on the first comma\n                const [secretKey, balance] = accountString.split(/,(.+)/);\n                return {\n                    secretKey,\n                    balance: BigInt(balance)\n                };\n            });\n        },\n        conflicts: [\"totalAccounts\"]\n    },\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: config => (config.accounts == null ? 10 : 0),\n        legacyName: \"total_accounts\",\n        cliAliases: [\"a\", \"accounts\"],\n        cliType: \"number\",\n        conflicts: [\"accounts\"]\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\", \"deterministic\"],\n        cliType: \"boolean\",\n        conflicts: [\"mnemonic\", \"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        defaultDescription: \"Random value, unless wallet.deterministic is specified\",\n        legacyName: \"seed\",\n        cliAliases: [\"s\", \"seed\"],\n        cliType: \"string\",\n        conflicts: [\"mnemonic\", \"deterministic\"]\n    },\n    mnemonic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use a specific HD wallet mnemonic to generate initial addresses.\",\n        // The order of the options matter here! `wallet.seed`\n        // needs to be prior to `wallet.mnemonic` for `config.seed`\n        // below to be set correctly\n        default: config => (0, bip39_1.entropyToMnemonic)(notVeryRandomBytes(16, (0, seedrandom_1.default)(config.seed))),\n        defaultDescription: \"Generated from wallet.seed\",\n        legacyName: \"mnemonic\",\n        cliAliases: [\"m\", \"mnemonic\"],\n        cliType: \"string\",\n        conflicts: [\"seed\", \"deterministic\"]\n    },\n    unlockedAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Array of addresses or address indexes specifying which accounts should be unlocked.\",\n        legacyName: \"unlocked_accounts\",\n        cliAliases: [\"u\", \"unlock\"],\n        cliType: \"array:string\"\n    },\n    lock: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Lock available accounts by default (good for third party transaction signing).\",\n        default: () => false,\n        legacyName: \"secure\",\n        cliAliases: [\"n\", \"secure\", \"lock\"],\n        cliType: \"boolean\"\n    },\n    passphrase: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Passphrase to use when locking accounts.\",\n        default: () => \"\",\n        cliAliases: [\"passphrase\"],\n        cliType: \"string\"\n    },\n    accountKeysPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specifies a file to save accounts and private keys to, for testing.\",\n        legacyName: \"account_keys_path\",\n        cliAliases: [\"account_keys_path\", \"acctKeys\"],\n        cliType: \"string\"\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in ether.\",\n        default: () => 1000,\n        legacyName: \"default_balance_ether\",\n        cliAliases: [\"e\", \"defaultBalanceEther\"],\n        cliType: \"number\"\n    },\n    hdPath: {\n        normalize: (path) => {\n            return path.split(\"/\");\n        },\n        cliDescription: \"The hierarchical deterministic path to use when generating accounts.\",\n        default: () => [\"m\", \"44'\", \"60'\", \"0'\", \"0\"],\n        legacyName: \"hd_path\",\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-transaction\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/eip2930-access-list-transaction\"), exports);\n__exportStar(require(\"./src/eip1559-fee-market-transaction\"), exports);\n__exportStar(require(\"./src/base-transaction\"), exports);\n__exportStar(require(\"./src/hardfork\"), exports);\n__exportStar(require(\"./src/legacy-transaction\"), exports);\n__exportStar(require(\"./src/params\"), exports);\n__exportStar(require(\"./src/raw\"), exports);\n__exportStar(require(\"./src/rpc-transaction\"), exports);\n__exportStar(require(\"./src/runtime-transaction\"), exports);\n__exportStar(require(\"./src/transaction-receipt\"), exports);\n__exportStar(require(\"./src/transaction-factory\"), exports);\n__exportStar(require(\"./src/transaction-types\"), exports);\n__exportStar(require(\"./src/vm-transaction\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.isAccessList = void 0;\nconst tx_1 = require(\"@ethereumjs/tx\");\nvar tx_2 = require(\"@ethereumjs/tx\");\nObject.defineProperty(exports, \"isAccessList\", { enumerable: true, get: function () { return tx_2.isAccessList; } });\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst STORAGE_KEY_LENGTH = 32;\n/*\n  As per https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2930.md\n\n  AccessLists must be in the form of:\n  [[{20 bytes}, [{32 bytes}...]]...]\n  where ... implies \"zero or more of the thing to the left\"\n*/\nclass AccessLists {\n    static getAccessListData(accessList) {\n        let AccessListJSON;\n        let bufferAccessList;\n        let slots = 0;\n        const accessListStorageKeyCost = params_1.Params.ACCESS_LIST_STORAGE_KEY_GAS;\n        const accessListAddressCost = params_1.Params.ACCESS_LIST_ADDRESS_GAS;\n        if (accessList && (0, tx_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            const newAccessList = [];\n            for (let i = 0; i < accessList.length; i++) {\n                const item = accessList[i];\n                const addressBuffer = ethereum_address_1.Address.toBuffer(item.address);\n                const storageItems = [];\n                const storageKeysLength = item.storageKeys.length;\n                slots += storageKeysLength;\n                for (let index = 0; index < storageKeysLength; index++) {\n                    storageItems.push(utils_1.Data.toBuffer(item.storageKeys[index], STORAGE_KEY_LENGTH));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList ? accessList : [];\n            // build the JSON\n            const json = [];\n            for (let i = 0; i < bufferAccessList.length; i++) {\n                const data = bufferAccessList[i];\n                const address = ethereum_address_1.Address.toString(data[0]);\n                const storageKeys = [];\n                const storageKeysLength = data[1].length;\n                slots += storageKeysLength;\n                for (let item = 0; item < storageKeysLength; item++) {\n                    storageKeys.push(utils_1.Data.toString(data[1][item], STORAGE_KEY_LENGTH));\n                }\n                const jsonItem = {\n                    address,\n                    storageKeys\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        const dataFee = BigInt(bufferAccessList.length * accessListAddressCost +\n            slots * accessListStorageKeyCost);\n        return {\n            AccessListJSON,\n            accessList: bufferAccessList,\n            dataFeeEIP2930: dataFee\n        };\n    }\n}\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=access-lists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = exports.calculateIntrinsicGas = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst MAX_UINT64 = 1n << (64n - 1n);\n/**\n * Compute the 'intrinsic gas' for a message with the given data.\n * @param data - The transaction's data\n * @param hasToAddress - boolean,\n * @param common - The Common use to determine gas costs\n * @returns The absolute minimum amount of gas this transaction will consume,\n * or `-1` if the data in invalid (gas consumption would exceed `MAX_UINT64`\n * (`(2n ** 64n) - 1n`).\n */\nconst calculateIntrinsicGas = (data, hasToAddress, common) => {\n    const hardfork = common.hardfork();\n    // Set the starting gas for the raw transaction\n    let gas = params_1.Params.TRANSACTION_GAS;\n    // if it doesn't have a \"to\" address this is a contract creation and it costs\n    // `TRANSACTION_CREATION` more gas.\n    if (!hasToAddress)\n        gas += params_1.Params.TRANSACTION_CREATION;\n    if (data) {\n        const input = data.toBuffer();\n        // Bump the required gas by the amount of transactional data\n        const dataLength = input.byteLength;\n        if (dataLength > 0) {\n            const TRANSACTION_DATA_NON_ZERO_GAS = params_1.Params.TRANSACTION_DATA_NON_ZERO_GAS.get(hardfork);\n            const TRANSACTION_DATA_ZERO_GAS = params_1.Params.TRANSACTION_DATA_ZERO_GAS;\n            // Zero and non-zero bytes are priced differently\n            let nonZeroBytes = 0n;\n            for (const b of input) {\n                if (b !== 0) {\n                    nonZeroBytes++;\n                }\n            }\n            // Make sure we don't exceed uint64 for all data combinations.\n            // TODO: make sure these upper-bound checks are safe to remove, then\n            // remove if so.\n            // Issue: https://github.com/trufflesuite/ganache/issues/3486\n            // NOTE: This is an upper-bounds limit ported from geth that doesn't\n            // make sense for Ethereum, as exceeding the upper bound would require\n            // something like 200+ Petabytes of data.\n            // https://github.com/ethereum/go-ethereum/blob/cf856ea1ad96ac39ea477087822479b63417036a/core/state_transition.go#L106-L141\n            //\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS` is the maximum\n            // number of \"non-zero bytes\" geth can handle.\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS < nonZeroBytes) {\n                return -1n;\n            }\n            gas += nonZeroBytes * TRANSACTION_DATA_NON_ZERO_GAS;\n            const zeroBytes = BigInt(dataLength) - nonZeroBytes;\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS` is the maximum number\n            // of \"zero bytes\" geth can handle after subtracting out the cost of\n            // the \"non-zero bytes\"\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS < zeroBytes) {\n                return -1n;\n            }\n            gas += zeroBytes * TRANSACTION_DATA_ZERO_GAS;\n        }\n    }\n    return gas;\n};\nexports.calculateIntrinsicGas = calculateIntrinsicGas;\nclass BaseTransaction {\n    constructor(common, extra) {\n        this.common = common;\n        if (extra) {\n            this.setExtra(extra);\n        }\n    }\n    setExtra(raw) {\n        const [from, hash, blockHash, blockNumber, index, effectiveGasPrice] = raw;\n        this.from = ethereum_address_1.Address.from(from);\n        this.hash = utils_1.Data.from(hash, 32);\n        this.blockHash = utils_1.Data.from(blockHash, 32);\n        this.blockNumber = utils_1.Quantity.from(blockNumber);\n        this.index = utils_1.Quantity.from(index);\n        this.effectiveGasPrice = utils_1.Quantity.from(effectiveGasPrice);\n    }\n    calculateIntrinsicGas() {\n        const hasToAddress = this.to != null && !this.to.toBuffer().equals(utils_1.BUFFER_EMPTY);\n        return (0, exports.calculateIntrinsicGas)(this.data, hasToAddress, this.common);\n    }\n}\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=base-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP1559FeeMarketTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bigIntMin = (...args) => args.reduce((m, e) => (e < m ? e : m));\nconst CAPABILITIES = [2718, 2930, 1559];\nclass EIP1559FeeMarketTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x2\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data[2]);\n            this.maxFeePerGas = utils_1.Quantity.from(data[3]);\n            this.gas = utils_1.Quantity.from(data[4]);\n            this.to = data[5].length == 0 ? null : ethereum_address_1.Address.from(data[5]);\n            this.value = utils_1.Quantity.from(data[6]);\n            this.data = utils_1.Data.from(data[7]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[8]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[9]);\n            this.r = utils_1.Quantity.from(data[10]);\n            this.s = utils_1.Quantity.from(data[11]);\n            this.raw = [this.type.toBuffer(), ...data];\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data.maxPriorityFeePerGas);\n            this.maxFeePerGas = utils_1.Quantity.from(data.maxFeePerGas);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.maxFeePerGas;\n    }\n    toJSON(_common) {\n        return {\n            type: this.type,\n            hash: this.hash,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasPrice: this.effectiveGasPrice,\n            gas: this.gas,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP1559FeeMarketTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas.toBigInt(),\n            maxFeePerGas: this.maxFeePerGas.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                const fee = this.calculateIntrinsicGas();\n                return fee + this.accessListDataFee;\n            },\n            getUpfrontCost: (baseFee = 0n) => {\n                const { gas, maxPriorityFeePerGas, maxFeePerGas, value } = this;\n                const maxPriorityFeePerGasBI = maxPriorityFeePerGas.toBigInt();\n                const maxFeePerGasBI = maxFeePerGas.toBigInt();\n                const gasLimitBI = gas.toBigInt();\n                const valueBI = value.toBigInt();\n                const inclusionFeePerGas = bigIntMin(maxPriorityFeePerGasBI, maxFeePerGasBI - baseFee);\n                const gasPrice = inclusionFeePerGas + baseFee;\n                return gasLimitBI * gasPrice + valueBI;\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const typeBuf = this.type.toBuffer();\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 1, 9);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)(Buffer.concat([typeBuf, (0, rlp_1.digest)([data.output], dataLength)]));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[10] = this.v.toBuffer();\n        raw[11] = this.r.toBuffer();\n        raw[12] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 10, 3);\n        // raw data is type concatenated with the rest of the data rlp encoded\n        this.serialized = Buffer.concat([\n            typeBuf,\n            (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length)\n        ]);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.type.toBuffer(),\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.maxPriorityFeePerGas.toBuffer(),\n            this.maxFeePerGas.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsFeeMarketTx)(v, raw);\n    }\n    updateEffectiveGasPrice(baseFeePerGas) {\n        const baseFeePerGasBigInt = baseFeePerGas.toBigInt();\n        const maxFeePerGas = this.maxFeePerGas.toBigInt();\n        const maxPriorityFeePerGas = this.maxPriorityFeePerGas.toBigInt();\n        const a = maxFeePerGas - baseFeePerGasBigInt;\n        const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n        this.effectiveGasPrice = utils_1.Quantity.from(baseFeePerGasBigInt + tip);\n    }\n}\nexports.EIP1559FeeMarketTransaction = EIP1559FeeMarketTransaction;\n//# sourceMappingURL=eip1559-fee-market-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP2930AccessListTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst CAPABILITIES = [2718, 2930];\nclass EIP2930AccessListTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x1\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[2]);\n            this.gas = utils_1.Quantity.from(data[3]);\n            this.to = data[4].length == 0 ? null : ethereum_address_1.Address.from(data[4]);\n            this.value = utils_1.Quantity.from(data[5]);\n            this.data = utils_1.Data.from(data[6]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[7]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[8]);\n            this.r = utils_1.Quantity.from(data[9]);\n            this.s = utils_1.Quantity.from(data[10]);\n            this.raw = [this.type.toBuffer(), ...data];\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toBigInt()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n                if (this.common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(_common) {\n        return {\n            hash: this.hash,\n            type: this.type,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP2930AccessListTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                const fee = this.calculateIntrinsicGas();\n                return fee + this.accessListDataFee;\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const typeBuf = this.type.toBuffer();\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 1, 8);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)(Buffer.concat([typeBuf, (0, rlp_1.digest)([data.output], dataLength)]));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[9] = this.v.toBuffer();\n        raw[10] = this.r.toBuffer();\n        raw[11] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n        // raw data is type concatenated with the rest of the data rlp encoded\n        this.serialized = Buffer.concat([\n            typeBuf,\n            (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length)\n        ]);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.type.toBuffer(),\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsAccessListTx)(v, raw);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.EIP2930AccessListTransaction = EIP2930AccessListTransaction;\n//# sourceMappingURL=eip2930-access-list-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hardfork.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LegacyTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst signing_1 = require(\"./signing\");\nclass LegacyTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x0\");\n        if (Array.isArray(data)) {\n            this.nonce = utils_1.Quantity.from(data[0]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[1]);\n            this.gas = utils_1.Quantity.from(data[2]);\n            this.to = data[3].length == 0 ? null : ethereum_address_1.Address.from(data[3]);\n            this.value = utils_1.Quantity.from(data[4]);\n            this.data = utils_1.Data.from(data[5]);\n            this.v = utils_1.Quantity.from(data[6]);\n            this.r = utils_1.Quantity.from(data[7]);\n            this.s = utils_1.Quantity.from(data[8]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): Transactions that come from the database must not be\n                // validated since they may come from a fork.\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw, this.common.chainId());\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(common) {\n        const json = {\n            hash: this.hash,\n            type: this.type,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n        if ((this.common || common).isActivatedEIP(2718)) {\n            json.type = this.type;\n        }\n        return json;\n    }\n    static fromTxData(data, common, extra) {\n        return new LegacyTransaction(data, common, extra);\n    }\n    static fromEIP2930AccessListTransaction(data, common) {\n        if (Array.isArray(data)) {\n            // remove 1st item, chainId, and 7th item, accessList\n            return new LegacyTransaction(data.slice(1, 7).concat(data.slice(8)), common);\n        }\n        return new LegacyTransaction(data, common);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return false;\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        // only legacy transactions can work with EIP-155 deactivated.\n        // (EIP-2930 and EIP-1559 made EIP-155 obsolete and this logic isn't needed\n        // for those transactions)\n        const eip155IsActive = this.common.gteHardfork(\"spuriousDragon\");\n        let chainId;\n        let raw;\n        let data;\n        let dataLength;\n        let sig;\n        if (eip155IsActive) {\n            chainId = utils_1.Quantity.toBuffer(this.common.chainId());\n            raw = this.toEthRawTransaction(chainId, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const ending = (0, rlp_1.encodeRange)(raw, 6, 3);\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output, ending.output], dataLength + ending.length));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey, this.common.chainId());\n        }\n        else {\n            raw = this.toEthRawTransaction(utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output], dataLength));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey);\n        }\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[6] = this.v.toBuffer();\n        raw[7] = this.r.toBuffer();\n        raw[8] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n        this.serialized = (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw, chainId) {\n        return (0, signing_1.computeIntrinsicsLegacyTx)(v, raw, chainId);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.LegacyTransaction = LegacyTransaction;\n//# sourceMappingURL=legacy-transaction.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = void 0;\nexports.Params = {\n    /**\n     *  Per transaction not creating a contract. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_GAS: 21000n,\n    /**\n     * Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions.\n     * Ganache supports eth_call and debuging old transactions that should be run\n     * in the context of their original hardfork, so hardforks we don't support\n     * are listed here.\n     */\n    TRANSACTION_DATA_NON_ZERO_GAS: new Map([\n        [\"chainstart\", 68n],\n        [\"homestead\", 68n],\n        [\"dao\", 68n],\n        [\"tangerineWhistle\", 68n],\n        [\"spuriousDragon\", 68n],\n        [\"byzantium\", 68n],\n        [\"constantinople\", 68n],\n        [\"petersburg\", 68n],\n        [\"istanbul\", 16n],\n        [\"muirGlacier\", 16n],\n        [\"berlin\", 16n],\n        [\"london\", 16n],\n        [\"arrowGlacier\", 16n],\n        [\"grayGlacier\", 16n],\n        [\"merge\", 16n]\n    ]),\n    /**\n     * Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_DATA_ZERO_GAS: 4n,\n    /**\n     * Fee for creation a transaction\n     */\n    TRANSACTION_CREATION: 32000n,\n    /**\n     * Gas cost per address in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_ADDRESS_GAS: 2400,\n    /**\n     * Gas cost per storage key in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_STORAGE_KEY_GAS: 1900\n};\n//# sourceMappingURL=params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=raw.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=rpc-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeTransaction = exports.hasPartialSignature = exports.toValidLengthAddress = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst base_transaction_1 = require(\"./base-transaction\");\nconst transaction_receipt_1 = require(\"./transaction-receipt\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst toValidLengthAddress = (address, fieldName) => {\n    const buffer = utils_1.Data.toBuffer(address);\n    if (buffer.byteLength !== ethereum_address_1.Address.ByteLength) {\n        throw new Error(`The field ${fieldName} must have byte length of ${ethereum_address_1.Address.ByteLength}`);\n    }\n    return ethereum_address_1.Address.from(buffer);\n};\nexports.toValidLengthAddress = toValidLengthAddress;\nconst hasPartialSignature = (data) => {\n    return data[\"v\"] != null || data[\"r\"] != null || data[\"s\"] != null;\n};\nexports.hasPartialSignature = hasPartialSignature;\nconst ONE_BUFFER = utils_1.Quantity.One.toBuffer();\n/**\n * A RuntimeTransaction can be changed; its hash is not finalized and it is not\n * yet part of a block.\n */\nclass RuntimeTransaction extends base_transaction_1.BaseTransaction {\n    constructor(data, common, extra) {\n        super(common, extra);\n        /**\n         * used by the miner to mark if this transaction is eligible for reordering or\n         * removal\n         */\n        this.locked = false;\n        this.validateAndSetSignature = (data) => {\n            // If we have v, r, or s validate and use them\n            if ((0, exports.hasPartialSignature)(data)) {\n                if (data.v == null || data.r == null || data.s == null) {\n                    throw new Error(\"Transaction signature is incomplete; v, r, and s are required.\");\n                }\n                // if we have a signature the `nonce` field is required\n                if (data.nonce == null) {\n                    throw new Error(\"Signed transaction is incomplete; nonce is required.\");\n                }\n                this.v = utils_1.Quantity.from(data.v, true);\n                this.r = utils_1.Quantity.from(data.r, true);\n                this.s = utils_1.Quantity.from(data.s, true);\n                // compute the `hash` and the `from` address\n                const raw = this.toEthRawTransaction(this.v.toBuffer(), this.r.toBuffer(), this.s.toBuffer());\n                this.raw = raw;\n                if (!this.from) {\n                    const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, raw, this.common.chainId());\n                    // if the user specified a `from` address in addition to the  `v`, `r`,\n                    //  and `s` values, make sure the `from` address matches\n                    if (data.from !== null) {\n                        const userFrom = (0, exports.toValidLengthAddress)(data.from, \"from\");\n                        if (!from.toBuffer().equals(userFrom.toBuffer())) {\n                            throw new Error(\"Transaction is signed and contains a `from` field, but the signature doesn't match.\");\n                        }\n                    }\n                    this.from = from;\n                    this.serialized = serialized;\n                    this.hash = hash;\n                    this.encodedData = encodedData;\n                    this.encodedSignature = encodedSignature;\n                }\n            }\n            else if (data.from != null) {\n                // we don't have a signature yet, so we just need to record the `from`\n                // address for now. The TransactionPool will fill in the `hash` and\n                // `raw` fields during signing\n                this.from = (0, exports.toValidLengthAddress)(data.from, \"from\");\n            }\n        };\n        let finalizer;\n        this.finalized = new Promise(resolve => {\n            finalizer = (...args) => process.nextTick(resolve, ...args);\n        });\n        this.finalizer = finalizer;\n        if (!Array.isArray(data)) {\n            // handle JSON\n            this.nonce = utils_1.Quantity.from(data.nonce, true);\n            this.gas = utils_1.Quantity.from(data.gas == null ? data.gasLimit : data.gas);\n            this.to = data.to == null ? null : (0, exports.toValidLengthAddress)(data.to, \"to\");\n            this.value = utils_1.Quantity.from(data.value || 0);\n            const dataVal = data.data == null\n                ? data.input == null\n                    ? \"0x\"\n                    : data.input\n                : data.data;\n            this.data = utils_1.Data.from(dataVal);\n        }\n    }\n    serializeForDb(blockHash, blockNumber, transactionIndex) {\n        // todo(perf):make this work with encodeRange and digest\n        const txAndExtraData = [\n            this.raw,\n            [\n                this.from.toBuffer(),\n                this.hash.toBuffer(),\n                blockHash.toBuffer(),\n                blockNumber.toBuffer(),\n                transactionIndex.toBuffer(),\n                this.effectiveGasPrice.toBuffer()\n            ]\n        ];\n        return (0, rlp_1.encode)(txAndExtraData);\n    }\n    /**\n     * Initializes the receipt and logs\n     * @param result -\n     * @returns RLP encoded data for use in a transaction trie\n     */\n    fillFromResult(result, cumulativeGasUsed) {\n        const vmResult = result.execResult;\n        const execException = vmResult.exceptionError;\n        let status;\n        if (execException) {\n            status = utils_1.BUFFER_ZERO;\n            this.execException = new ethereum_utils_1.RuntimeError(this.hash, result, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n        }\n        else {\n            status = ONE_BUFFER;\n        }\n        const receipt = (this.receipt = transaction_receipt_1.InternalTransactionReceipt.fromValues(status, utils_1.Quantity.toBuffer(cumulativeGasUsed), result.bloom.bitvector, (this.logs = vmResult.logs || []), utils_1.Quantity.toBuffer(result.totalGasSpent), result.createdAddress ? result.createdAddress.buf : null, this.type));\n        return receipt.serialize(false);\n    }\n    getReceipt() {\n        return this.receipt;\n    }\n    getLogs() {\n        return this.logs;\n    }\n    /**\n     * Returns a Promise that is resolved with the confirmation status and, if\n     * appropriate, an error property.\n     *\n     * Note: it is possible to be confirmed AND have an error\n     *\n     * @param event - \"finalized\"\n     */\n    once(_event) {\n        return this.finalized;\n    }\n    /**\n     * Mark this transaction as finalized, notifying all past and future\n     * \"finalized\" event subscribers.\n     *\n     * Note:\n     *\n     * @param status -\n     * @param error -\n     */\n    finalize(status, error = null) {\n        // resolves the `#finalized` promise\n        this.finalizer({ status, error });\n    }\n}\nexports.RuntimeTransaction = RuntimeTransaction;\n//# sourceMappingURL=runtime-transaction.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeIntrinsicsFeeMarketTx = exports.computeIntrinsicsAccessListTx = exports.computeIntrinsicsLegacyTx = exports.computeFromAddress = exports.publicKeyConvert = exports.ecdsaRecover = exports.isValidSigRecovery = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\n/**\n * Copies `length` bytes from `source` to the `target`, filling remaining\n * bytes beyond `length - source.length` with `0`. Fills to the left.\n *\n * ```typescript\n * const source = Buffer.from([1, 2, 3]);\n * const target = Buffer.from([9, 9, 9, 9, 9, 9]);\n * copyOrFill(source, target, 1, 4);\n * // target.equals(Buffer.from([9, 0, 1, 2, 3, 9]));\n * //                               ^  ^  ^  ^\n * ```\n *\n * @param source - A Buffer to copy from.\n * @param target - A Buffer to copy into.\n * @param targetStart - The offset within `target` at which to begin writing.\n * @param length - The amount of bytes to copy or fill into the `target`.\n */\nfunction copyOrFill(source, target, targetStart, length) {\n    if (source.byteLength > length)\n        throw new Error(\"Invalid signature\");\n    // first, copy zeroes\n    const numZeroes = length - source.byteLength;\n    const endZeroes = targetStart + numZeroes;\n    let i = targetStart;\n    for (; i < endZeroes; i++) {\n        target[i] = 0;\n    }\n    // then copy the source into the target:\n    let end = targetStart + length;\n    const sourceOffset = targetStart + numZeroes;\n    for (; i < end; i++) {\n        target[i] = source[i - sourceOffset];\n    }\n}\nconst isValidSigRecovery = (recovery) => {\n    return recovery === 1 || recovery === 0;\n};\nexports.isValidSigRecovery = isValidSigRecovery;\n/**\n *\n * @param sharedBuffer - A Buffer, where bytes 0 - 97 are to be used by this function\n * @param r -\n * @param s -\n * @param msgHash -\n * @param recovery -\n */\nconst ecdsaRecover = (partialRlp, sharedBuffer, v, chainId, rBuf, sBuf) => {\n    let data;\n    let recid;\n    const eip155V = chainId * 2n + 35n;\n    const isEip155 = v === eip155V || v === eip155V + 1n;\n    if (isEip155) {\n        const chainBuf = (0, utils_1.bigIntToBuffer)(chainId);\n        const extras = [chainBuf, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY];\n        const epilogue = (0, rlp_1.encodeRange)(extras, 0, 3);\n        data = (0, rlp_1.digest)([partialRlp.output, epilogue.output], partialRlp.length + epilogue.length);\n        recid = Number(v - eip155V);\n    }\n    else {\n        data = (0, rlp_1.digest)([partialRlp.output], partialRlp.length);\n        recid = Number(v) - 27;\n    }\n    return _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid);\n};\nexports.ecdsaRecover = ecdsaRecover;\nfunction _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid) {\n    if (!(0, exports.isValidSigRecovery)(recid)) {\n        throw new Error(\"Invalid signature v value\");\n    }\n    const message = (0, utils_1.keccak)(data);\n    const signature = sharedBuffer.slice(0, 64);\n    copyOrFill(rBuf, signature, 0, 32);\n    copyOrFill(sBuf, signature, 32, 32);\n    const output = sharedBuffer.slice(0, 33);\n    const success = secp256k1_1.default.ecdsaRecover(output, signature, recid, message);\n    if (success !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return output;\n}\n/**\n *\n * @param sharedBuffer - A Buffer, bytes 0 - 65 will be overwritten\n * @param senderPubKey -\n */\nconst publicKeyConvert = (sharedBuffer, senderPubKey) => {\n    const publicKey = sharedBuffer.slice(0, 65);\n    const result = secp256k1_1.default.publicKeyConvert(publicKey, senderPubKey);\n    if (result !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return publicKey;\n};\nexports.publicKeyConvert = publicKeyConvert;\n/**\n * A Buffer that can be reused by `computeFromAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst computeFromAddress = (partialRlp, v, rBuf, sBuf, chainId) => {\n    const senderPubKey = (0, exports.ecdsaRecover)(partialRlp, SHARED_BUFFER, v, chainId, rBuf, sBuf);\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    return ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n};\nexports.computeFromAddress = computeFromAddress;\nconst computeIntrinsicsLegacyTx = (v, raw, chainId) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 6);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n    const serialized = (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length);\n    return {\n        from: (0, exports.computeFromAddress)(encodedData, v.toBigInt(), raw[7], raw[8], chainId),\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsLegacyTx = computeIntrinsicsLegacyTx;\nconst computeIntrinsicsAccessListTx = (v, raw) => {\n    const typeBuf = raw[0];\n    const encodedData = (0, rlp_1.encodeRange)(raw, 1, 8);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n    const serialized = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length)\n    ]);\n    const data = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output], encodedData.length)\n    ]);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[10], raw[11], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsAccessListTx = computeIntrinsicsAccessListTx;\nconst computeIntrinsicsFeeMarketTx = (v, raw) => {\n    const typeBuf = raw[0];\n    const encodedData = (0, rlp_1.encodeRange)(raw, 1, 9);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 10, 3);\n    const serialized = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length)\n    ]);\n    const data = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output], encodedData.length)\n    ]);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[11], raw[12], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsFeeMarketTx = computeIntrinsicsFeeMarketTx;\n//# sourceMappingURL=signing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionFactory = exports.TransactionType = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst legacy_transaction_1 = require(\"./legacy-transaction\");\nconst eip2930_access_list_transaction_1 = require(\"./eip2930-access-list-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst eip1559_fee_market_transaction_1 = require(\"./eip1559-fee-market-transaction\");\nconst secp256k1_1 = require(\"@ganache/secp256k1\");\n/**\n * @param common\n * @param tx\n * @throws\n */\nfunction assertValidTransactionSValue(common, tx) {\n    // Transaction signatures whose s-value is greater than secp256k1n/2 are\n    // invalid after EIP-2 hardfork (homestead). See: https://eips.ethereum.org/EIPS/eip-2\n    if (tx.s &&\n        tx.s.toBigInt() >= secp256k1_1.SECP256K1_MAX_PRIVATE_KEY_DIV_2 &&\n        // EIP-2 is in homestead, but we can't use isActivatedEIP(2) because\n        // Common doesn't have that information for this hardfork.\n        common.gteHardfork(\"homestead\")) {\n        throw new Error(\"Invalid Signature: s-values greater than secp256k1n/2 are considered invalid\");\n    }\n}\nvar TransactionType;\n(function (TransactionType) {\n    TransactionType[TransactionType[\"Legacy\"] = 0] = \"Legacy\";\n    TransactionType[TransactionType[\"EIP2930AccessList\"] = 1] = \"EIP2930AccessList\";\n    TransactionType[TransactionType[\"EIP1559AccessList\"] = 2] = \"EIP1559AccessList\";\n})(TransactionType = exports.TransactionType || (exports.TransactionType = {}));\nclass TransactionFactory {\n    constructor(raw, common) {\n        const [txData, extra] = (0, rlp_1.decode)(raw);\n        this.tx = TransactionFactory.fromDatabaseTx(txData, common, extra);\n    }\n    static _fromData(txData, txType, common, extra) {\n        // if tx type envelope isn't available yet on this HF,\n        // return legacy txs as is and convert typed txs to legacy\n        if (!common.isActivatedEIP(2718)) {\n            return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n        }\n        else if (!common.isActivatedEIP(1559)) {\n            if (txType === TransactionType.Legacy) {\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            }\n            else if (txType === TransactionType.EIP2930AccessList) {\n                if (common.isActivatedEIP(2930)) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else {\n                    // TODO: I believe this is unreachable with current architecture.\n                    // If 2718 is supported, so is 2930.\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3487\n                    throw new ethereum_utils_1.CodedError(`EIP 2930 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n                }\n            }\n            else if (txType === TransactionType.EIP1559AccessList) {\n                throw new ethereum_utils_1.CodedError(`EIP 1559 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n            }\n        }\n        // eip 1559, 2930, and 2718 are activated\n        else {\n            // we can assume that all database transactions came from us, so\n            // the type doesn't need to be normalized.\n            if (Array.isArray(txData)) {\n                if (txType === TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP2930AccessList) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP1559AccessList) {\n                    return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                }\n            }\n            else {\n                const toEIP1559 = (txType === TransactionType.Legacy ||\n                    txType === TransactionType.EIP2930AccessList) &&\n                    txData.gasPrice === undefined;\n                if (txType === TransactionType.EIP1559AccessList || toEIP1559) {\n                    const tx = eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                    if (toEIP1559) {\n                        // they didn't specify the type as eip-1559 (type 2), so we are\n                        // upgrading it. BUT, there's still a chance they sent us this data,\n                        // so we don't want to overwrite it.\n                        if (!txData.maxFeePerGas) {\n                            tx.maxFeePerGas = utils_1.Quantity.from(null);\n                        }\n                        if (!txData.maxPriorityFeePerGas) {\n                            tx.maxPriorityFeePerGas = utils_1.Quantity.Gwei;\n                        }\n                    }\n                    return tx;\n                }\n                else if (txType === TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP2930AccessList) {\n                    // if no access list is provided, we convert to legacy\n                    if (txData.accessList === undefined) {\n                        return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                    }\n                    else {\n                        return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                    }\n                }\n            }\n        }\n        throw new ethereum_utils_1.CodedError(`Tx instantiation with supplied type not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The rpc transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromRpc(txData, common, extra) {\n        const txType = this.typeOfRPC(txData);\n        const tx = this._fromData(txData, txType, common, extra);\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromDatabaseTx(txData, common, extra) {\n        const txType = this.typeOfRaw(txData);\n        switch (txType) {\n            case TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData.slice(1), common, extra);\n            case TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData.slice(1), common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * When transaction types are activated (EIP 2718) the txData will be checked\n     * for a transaction envelope (first byte < 192) before determining the\n     * decoding strategy, otherwise it will be decoded as a Legacy Transaction. If\n     * the transaction contains a transaction envelop, but EIP 2718 is not active\n     * decoding will fail and an exception will be thrown.\n     *\n     * @param txData - The raw hex string transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromString(txData, common) {\n        let data = utils_1.Data.toBuffer(txData);\n        const type = data[0];\n        const txType = this.typeOf(type);\n        let tx;\n        if (common.isActivatedEIP(2718)) {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(txType === TransactionType.Legacy ? data : data.slice(1));\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromData(raw, txType, common);\n        }\n        else {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(data);\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromData(raw, TransactionType.Legacy, common);\n        }\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    static typeOf(type) {\n        if (type === TransactionType.EIP1559AccessList ||\n            type === TransactionType.EIP2930AccessList) {\n            return type;\n        }\n        else {\n            return TransactionType.Legacy;\n        }\n    }\n    static typeOfRaw(raw) {\n        // LegacyTransactions won't have the type up front to parse\n        if (raw.length === 9) {\n            return TransactionType.Legacy;\n        }\n        const type = raw[0][0];\n        return this.typeOf(type);\n    }\n    static typeOfRPC(rpc) {\n        if (!(\"type\" in rpc) || rpc.type === undefined) {\n            return TransactionType.Legacy;\n        }\n        else {\n            // The type must be a hex value\n            const txType = parseInt(rpc.type, 16);\n            return this.typeOf(txType);\n        }\n    }\n}\nexports.TransactionFactory = TransactionFactory;\n//# sourceMappingURL=transaction-factory.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _InternalTransactionReceipt_init;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalTransactionReceipt = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nconst STATUSES = [utils_1.Quantity.Zero, utils_1.Quantity.One];\nclass InternalTransactionReceipt {\n    constructor(data) {\n        _InternalTransactionReceipt_init.set(this, (status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress = null, type = null) => {\n            this.raw = [status, cumulativeGasUsed, logsBloom, logs];\n            this.contractAddress = contractAddress;\n            this.gasUsed = gasUsed;\n            this.txType = type;\n        });\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            __classPrivateFieldGet(this, _InternalTransactionReceipt_init, \"f\").call(this, decoded[0], decoded[1], decoded[2], decoded[3], decoded[4], decoded[5]);\n        }\n    }\n    static fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type = null) {\n        const receipt = new InternalTransactionReceipt();\n        __classPrivateFieldGet(receipt, _InternalTransactionReceipt_init, \"f\").call(receipt, status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type);\n        return receipt;\n    }\n    serialize(all) {\n        if (this.encoded == null) {\n            this.encoded = (0, rlp_1.encodeRange)(this.raw, 0, 4);\n        }\n        if (all) {\n            // the database format includes gasUsed and the contractAddress:\n            const extras = [\n                this.gasUsed,\n                this.contractAddress\n            ];\n            const epilogue = (0, rlp_1.encodeRange)(extras, 0, 2);\n            return (0, rlp_1.digest)([this.encoded.output, epilogue.output], this.encoded.length + epilogue.length);\n        }\n        else {\n            // receipt trie format:\n            const serialized = (0, rlp_1.digest)([this.encoded.output], this.encoded.length);\n            return this.txType\n                ? Buffer.concat([this.txType.toBuffer(), serialized])\n                : serialized;\n        }\n    }\n    toJSON(block, transaction, common) {\n        const raw = this.raw;\n        const contractAddress = this.contractAddress.length === 0\n            ? null\n            : utils_1.Data.from(this.contractAddress);\n        const blockHash = block.hash();\n        const blockNumber = block.header.number;\n        const blockLog = ethereum_utils_1.BlockLogs.create(blockHash);\n        const transactionHash = transaction.hash;\n        const transactionIndex = transaction.index;\n        blockLog.blockNumber = blockNumber;\n        raw[3].forEach(l => blockLog.append(transactionIndex, transactionHash, l));\n        const logs = [...blockLog.toJSON()];\n        if (block.header.baseFeePerGas) {\n            transaction.updateEffectiveGasPrice(block.header.baseFeePerGas);\n        }\n        const json = {\n            transactionHash,\n            transactionIndex,\n            blockNumber,\n            blockHash,\n            from: transaction.from,\n            to: contractAddress ? null : transaction.to,\n            cumulativeGasUsed: utils_1.Quantity.from(raw[1]),\n            gasUsed: utils_1.Quantity.from(this.gasUsed),\n            contractAddress,\n            logs,\n            logsBloom: utils_1.Data.from(raw[2], 256),\n            status: STATUSES[raw[0][0]],\n            effectiveGasPrice: transaction.effectiveGasPrice\n        };\n        if (transaction.type && common.isActivatedEIP(2718)) {\n            json.type = transaction.type;\n        }\n        return json;\n    }\n}\nexports.InternalTransactionReceipt = InternalTransactionReceipt;\n_InternalTransactionReceipt_init = new WeakMap();\n//# sourceMappingURL=transaction-receipt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=vm-transaction.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-utils\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortError = void 0;\nclass AbortError extends Error {\n    constructor() {\n        super(\"The user aborted a request.\");\n    }\n}\nexports.AbortError = AbortError;\n//# sourceMappingURL=abort-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallError = void 0;\nconst errors_1 = require(\"./errors\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nclass CallError extends coded_error_1.CodedError {\n    constructor(result) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = utils_2.Data.toString(returnValue);\n    }\n}\nexports.CallError = CallError;\n//# sourceMappingURL=call-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodedError = void 0;\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\nconst REVERT_REASON = Buffer.from(\"08c379a0\", \"hex\"); // keccak(\"Error(string)\").slice(0, 4)\nclass CodedError extends Error {\n    constructor(message, code) {\n        super(message);\n        CodedError.captureStackTraceExtended.bind(this, message);\n        this.code = code;\n    }\n    static from(error, code) {\n        const codedError = new CodedError(error.message, code);\n        codedError.stack = error.stack;\n        return codedError;\n    }\n    static nonEnumerableProperty(value) {\n        // The field `enumerable` is `false` by default.\n        return {\n            value: value,\n            writable: true,\n            configurable: true\n        };\n    }\n    static captureStackTraceExtended(message) {\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            // Generic way to set the error stack trace.\n            Object.defineProperty(this, \"stack\", CodedError.nonEnumerableProperty(Error(message).stack));\n            // Use the `+` operator with an empty string to implicitly type cast the\n            // `message` argument into a string.\n            Object.defineProperty(this, \"message\", CodedError.nonEnumerableProperty(message !== void 0 ? \"\" + message : \"\"));\n        }\n    }\n    static createRevertReason(returnValue) {\n        let reason;\n        if (returnValue.length > 4 &&\n            REVERT_REASON.compare(returnValue, 0, 4) === 0) {\n            try {\n                // it is possible for the `returnValue` to be gibberish that can't be\n                // decoded. See: https://github.com/trufflesuite/ganache/pull/452\n                reason = (0, ethereumjs_abi_1.rawDecode)([\"bytes\"], returnValue.slice(4))[0].toString();\n            }\n            catch {\n                // ignore error since reason string recover is impossible\n                reason = null;\n            }\n        }\n        else {\n            reason = null;\n        }\n        return reason;\n    }\n}\nexports.CodedError = CodedError;\n//# sourceMappingURL=coded-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INSUFFICIENT_FUNDS = exports.TRANSACTION_LOCKED = exports.VM_EXCEPTIONS = exports.VM_EXCEPTION = exports.GAS_LIMIT = exports.INTRINSIC_GAS_TOO_LOW = exports.REPLACED = exports.UNDERPRICED = exports.NONCE_TOO_LOW = exports.INVALID_SENDER = void 0;\n/**\n * Returned if the transaction contains an invalid signature.\n */\nexports.INVALID_SENDER = \"invalid sender\";\n/**\n * Returned if the nonce of a transaction is lower than the one present in the local chain.\n */\nexports.NONCE_TOO_LOW = \"nonce too low\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.UNDERPRICED = \"transaction underpriced\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.REPLACED = \"transaction replaced by better transaction\";\n/**\n * Returned if the transaction is specified to use less gas than required to start the invocation.\n */\nexports.INTRINSIC_GAS_TOO_LOW = \"intrinsic gas too low\";\n/**\n * Returned if a transaction's requested gas limit exceeds the maximum allowance of the current block.\n */\nexports.GAS_LIMIT = \"exceeds block gas limit\";\n/**\n * Prefix for a single VM Exception occurring when running a transaction or block\n */\nexports.VM_EXCEPTION = \"VM Exception while processing transaction: \";\n/**\n * Prefix for multiple VM Exceptions occurring when running transactions or a block\n */\nexports.VM_EXCEPTIONS = \"Multiple VM Exceptions while processing transactions: : \\n\\n\";\n/**\n * Returned if a replacement transaction is sent while the potentially replaced transaction is being mined.\n */\nexports.TRANSACTION_LOCKED = \"transaction can't be replaced, mining has already started. (please open an issue with reproduction steps: https://github.com/trufflesuite/ganache/issues/new)\";\n/**\n * Returned if a transaction may require more funds than than account currently has available.\n */\nexports.INSUFFICIENT_FUNDS = \"insufficient funds for gas * price + value\";\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeError = exports.RETURN_TYPES = void 0;\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"@ganache/utils\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_2 = require(\"@ganache/utils\");\nvar RETURN_TYPES;\n(function (RETURN_TYPES) {\n    RETURN_TYPES[RETURN_TYPES[\"TRANSACTION_HASH\"] = 0] = \"TRANSACTION_HASH\";\n    RETURN_TYPES[RETURN_TYPES[\"RETURN_VALUE\"] = 1] = \"RETURN_VALUE\";\n})(RETURN_TYPES = exports.RETURN_TYPES || (exports.RETURN_TYPES = {}));\nclass RuntimeError extends coded_error_1.CodedError {\n    constructor(transactionHash, result, returnType) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const hash = transactionHash.toString();\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = {\n            hash: hash,\n            programCounter: execResult.runState.programCounter,\n            result: returnType === RETURN_TYPES.TRANSACTION_HASH\n                ? hash\n                : utils_1.Data.toString(returnValue || \"0x\"),\n            reason: reason,\n            message: error\n        };\n    }\n}\nexports.RuntimeError = RuntimeError;\n//# sourceMappingURL=runtime-error.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors/coded-error\"), exports);\n__exportStar(require(\"./errors/errors\"), exports);\n__exportStar(require(\"./errors/runtime-error\"), exports);\n__exportStar(require(\"./errors/call-error\"), exports);\n__exportStar(require(\"./errors/abort-error\"), exports);\n__exportStar(require(\"./things/account\"), exports);\n__exportStar(require(\"./things/blocklogs\"), exports);\n__exportStar(require(\"./things/tags\"), exports);\n__exportStar(require(\"./things/trace-data\"), exports);\n__exportStar(require(\"./things/trace-storage-map\"), exports);\n__exportStar(require(\"./types/debug-storage\"), exports);\n__exportStar(require(\"./types/extract-values-from-types\"), exports);\n__exportStar(require(\"./types/filters\"), exports);\n__exportStar(require(\"./types/hex-datatypes\"), exports);\n__exportStar(require(\"./types/shh\"), exports);\n__exportStar(require(\"./types/subscriptions\"), exports);\n__exportStar(require(\"./types/trace-transaction\"), exports);\n__exportStar(require(\"./types/tuple-from-union\"), exports);\n__exportStar(require(\"./types/account-proof\"), exports);\n__exportStar(require(\"./types/fee-history\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass Account {\n    constructor(address) {\n        this.storageRoot = util_1.KECCAK256_RLP;\n        this.codeHash = util_1.KECCAK256_NULL;\n        this.address = address;\n        this.balance = utils_1.Quantity.Empty;\n        this.nonce = utils_1.Quantity.Empty;\n    }\n    static fromBuffer(buffer) {\n        const account = Object.create(Account.prototype);\n        const raw = (0, rlp_1.decode)(buffer);\n        account.nonce = utils_1.Quantity.from(raw[0]);\n        account.balance = utils_1.Quantity.from(raw[1]);\n        account.storageRoot = raw[2];\n        account.codeHash = raw[3];\n        return account;\n    }\n    serialize() {\n        return (0, rlp_1.encode)([\n            this.nonce.toBuffer(),\n            this.balance.toBuffer(),\n            this.storageRoot,\n            this.codeHash\n        ]);\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockLogs = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst _raw = Symbol(\"raw\");\nconst _logs = Symbol(\"logs\");\nconst filterByTopic = (expectedTopics, logTopics) => {\n    // Exclude log if its number of topics is less than the number expected\n    if (expectedTopics.length > logTopics.length)\n        return false;\n    // for every expectedTopic, we must much the log topic in the same position\n    return expectedTopics.every((expectedTopic, logPosition) => {\n        // a `null` topic means \"anything\"\n        if (expectedTopic === null)\n            return true;\n        let expectedTopicSet;\n        if (!Array.isArray(expectedTopic)) {\n            return logTopics[logPosition].equals(utils_1.Data.toBuffer(expectedTopic));\n        }\n        // an empty rule set means \"anything\"\n        if (expectedTopic.length === 0)\n            return true;\n        expectedTopicSet = expectedTopic;\n        const logTopic = logTopics[logPosition];\n        // \"OR\" logic, e.g., [[A, B]] means log topic in the first position matching either \"A\" OR \"B\":\n        return expectedTopicSet.some(expectedTopic => logTopic.equals(utils_1.Data.toBuffer(expectedTopic)));\n    });\n};\nclass BlockLogs {\n    constructor(data) {\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            this[_raw] = decoded;\n        }\n    }\n    /**\n     *\n     * @param blockHash - Creates an BlogLogs entity with an empty internal logs\n     * array.\n     */\n    static create(blockHash) {\n        const blockLog = Object.create(BlockLogs.prototype);\n        blockLog[_raw] = [blockHash.toBuffer(), []];\n        return blockLog;\n    }\n    /**\n     * rlpEncode's the blockHash and logs array for db storage\n     */\n    serialize() {\n        return (0, rlp_1.encode)(this[_raw]);\n    }\n    /**\n     * Appends the data to the internal logs array\n     * @param transactionIndex -\n     * @param transactionHash -\n     * @param log -\n     */\n    append(\n    /*removed: boolean, */ transactionIndex, transactionHash, log) {\n        this[_raw][1].push([\n            utils_2.BUFFER_ZERO,\n            transactionIndex.toBuffer(),\n            transactionHash.toBuffer(),\n            log[0],\n            log[1],\n            log[2] // `data`\n        ]);\n    }\n    /**\n     * Returns the number of logs in the internal logs array.\n     */\n    get length() {\n        return this[_raw][1].length;\n    }\n    static fromJSON(json) {\n        if (!json || json.length === 0) {\n            return null;\n        }\n        const blockHash = json[0].blockHash;\n        const blockNumber = json[0].blockNumber;\n        const blockLogs = BlockLogs.create(utils_1.Data.from(blockHash, 32));\n        blockLogs.blockNumber = utils_1.Quantity.from(blockNumber);\n        json.forEach(log => {\n            const address = ethereum_address_1.Address.from(log.address);\n            const blockNumber = log.blockNumber;\n            const data = Array.isArray(log.data)\n                ? log.data.map(d => utils_1.Data.toBuffer(d))\n                : utils_1.Data.toBuffer(log.data);\n            const logIndex = log.logIndex;\n            const removed = log.removed === false ? utils_2.BUFFER_ZERO : utils_1.Quantity.One.toBuffer();\n            const topics = Array.isArray(log.topics)\n                ? log.topics.map(t => utils_1.Data.toBuffer(t, 32))\n                : utils_1.Data.toBuffer(log.topics, 32);\n            const transactionHash = utils_1.Data.from(log.transactionHash, 32);\n            const transactionIndex = utils_1.Quantity.from(log.transactionIndex);\n            blockLogs.append(transactionIndex, transactionHash, [\n                address.toBuffer(),\n                topics,\n                data\n            ]);\n        });\n        return blockLogs;\n    }\n    toJSON() {\n        return this[_logs]().toJSON();\n    }\n    [_logs]() {\n        const blockNumber = this.blockNumber;\n        const raw = this[_raw];\n        const logs = raw[1];\n        const l = this.length;\n        const blockHash = utils_1.Data.from(raw[0]);\n        return {\n            toJSON() {\n                return {\n                    *[Symbol.iterator]() {\n                        for (let i = 0; i < l; i++) {\n                            yield BlockLogs.logToJSON(logs[i], utils_1.Quantity.from(i), blockHash, blockNumber);\n                        }\n                    }\n                };\n            },\n            *[Symbol.iterator]() {\n                for (let i = 0; i < l; i++) {\n                    const log = logs[i];\n                    const address = log[3];\n                    const topics = log[4];\n                    yield {\n                        address,\n                        topics,\n                        toJSON: () => BlockLogs.logToJSON(log, utils_1.Quantity.from(i), blockHash, blockNumber)\n                    };\n                }\n            }\n        };\n    }\n    /**\n     *\n     * @param log -\n     * @param logIndex - The index this log appears in the block\n     * @param blockHash - The hash of the block\n     * @param blockNumber - The block number\n     */\n    static logToJSON(log, logIndex, blockHash, blockNumber) {\n        const topics = log[4];\n        const data = log[5];\n        return {\n            address: ethereum_address_1.Address.from(log[3]),\n            blockHash,\n            blockNumber,\n            data: Array.isArray(data)\n                ? data.map(d => utils_1.Data.from(d, d.length))\n                : utils_1.Data.from(data, data.length),\n            logIndex,\n            removed: log[0].equals(utils_2.BUFFER_ZERO) ? false : true,\n            topics: Array.isArray(topics)\n                ? topics.map(t => utils_1.Data.from(t, 32))\n                : utils_1.Data.from(topics, 32),\n            transactionHash: utils_1.Data.from(log[2], 32),\n            transactionIndex: utils_1.Quantity.from(log[1])\n        };\n    }\n    /**\n     * Note: you must set `this.blockNumber: Quantity` first!\n     *\n     * Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic\n     * filters:\n     *  ▸ [] \"anything\"\n     *  ▸ [A] \"A in first position (and anything after)\"\n     *  ▸ [null, B] \"anything in first position AND B in second position (and anything after)\"\n     *  ▸ [A, B] \"A\" in first position AND B in second position (and anything after)\"\n     *  ▸ [[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\"\n     * @param expectedAddresses -\n     * @param expectedTopics -\n     * @returns JSON representation of the filtered logs\n     */\n    *filter(expectedAddresses, expectedTopics) {\n        const logs = this[_logs]();\n        if (expectedAddresses.length !== 0) {\n            if (expectedTopics.length === 0) {\n                for (const log of logs) {\n                    if (expectedAddresses.some(address => address.equals(log.address)))\n                        yield log.toJSON();\n                }\n            }\n            else {\n                for (const log of logs) {\n                    if (!expectedAddresses.some(address => address.equals(log.address)))\n                        continue;\n                    if (filterByTopic(expectedTopics, log.topics))\n                        yield log.toJSON();\n                }\n            }\n        }\n        else if (expectedTopics.length !== 0) {\n            for (const log of logs) {\n                if (filterByTopic(expectedTopics, log.topics))\n                    yield log.toJSON();\n            }\n        }\n        else {\n            yield* logs.toJSON();\n        }\n    }\n}\nexports.BlockLogs = BlockLogs;\n//# sourceMappingURL=blocklogs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = exports.InternalTag = void 0;\nvar InternalTag;\n(function (InternalTag) {\n    InternalTag[\"earliest\"] = \"earliest\";\n    InternalTag[\"finalized\"] = \"finalized\";\n    InternalTag[\"latest\"] = \"latest\";\n    InternalTag[\"safe\"] = \"safe\";\n    InternalTag[\"pending\"] = \"pending\";\n})(InternalTag = exports.InternalTag || (exports.InternalTag = {}));\nvar Tag;\n(function (Tag) {\n    Tag.earliest = \"earliest\";\n    Tag.finalized = \"finalized\";\n    Tag.latest = \"latest\";\n    Tag.safe = \"safe\";\n    Tag.pending = \"pending\";\n})(Tag = exports.Tag || (exports.Tag = {}));\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceDataFactory = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst BYTE_LENGTH = 32;\n/**\n * Precomputed 32-byte prefixes to make stringification a faster\n */\nconst PREFIXES = [\n    \"\",\n    \"00\",\n    \"0000\",\n    \"000000\",\n    \"00000000\",\n    \"0000000000\",\n    \"000000000000\",\n    \"00000000000000\",\n    \"0000000000000000\",\n    \"000000000000000000\",\n    \"00000000000000000000\",\n    \"0000000000000000000000\",\n    \"000000000000000000000000\",\n    \"00000000000000000000000000\",\n    \"0000000000000000000000000000\",\n    \"000000000000000000000000000000\",\n    \"00000000000000000000000000000000\",\n    \"0000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000000000\"\n];\nconst TraceDataFactory = () => {\n    const traceDataLookup = new Map();\n    const TraceData = {\n        from: (value) => {\n            // Remove all leading zeroes from keys.\n            const key = (0, utils_1.bufferToMinHexKey)(value);\n            const existing = traceDataLookup.get(key);\n            if (existing) {\n                return existing;\n            }\n            let buffer;\n            let str;\n            const data = {\n                /**\n                 * Returns a 32-byte 0-padded Buffer\n                 */\n                toBuffer: () => {\n                    if (buffer) {\n                        return buffer;\n                    }\n                    const length = value.byteLength;\n                    if (length === BYTE_LENGTH) {\n                        buffer = value;\n                    }\n                    else {\n                        // convert the buffer into the appropriately sized buffer.\n                        const lengthDiff = BYTE_LENGTH - length;\n                        buffer = Buffer.allocUnsafe(BYTE_LENGTH).fill(0, 0, lengthDiff);\n                        value.copy(buffer, lengthDiff, 0, length);\n                    }\n                    return buffer;\n                },\n                /**\n                 * Returns a 32-byte hex-string representation\n                 */\n                toJSON: () => {\n                    if (str) {\n                        return str;\n                    }\n                    // convert a hex key like \"ab01\" into \"00...00ab01\"\n                    return (str = `${PREFIXES[BYTE_LENGTH - key.length / 2]}${key}`);\n                }\n            };\n            traceDataLookup.set(key, data);\n            return data;\n        }\n    };\n    return TraceData;\n};\nexports.TraceDataFactory = TraceDataFactory;\n//# sourceMappingURL=trace-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceStorageMap = void 0;\nclass TraceStorageMap extends Map {\n    toJSON() {\n        const obj = {};\n        for (const [key, value] of this) {\n            obj[key.toJSON()] = value;\n        }\n        return obj;\n    }\n}\nexports.TraceStorageMap = TraceStorageMap;\n//# sourceMappingURL=trace-storage-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=account-proof.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=debug-storage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=extract-values-from-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=fee-history.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterTypes = void 0;\nvar FilterTypes;\n(function (FilterTypes) {\n    FilterTypes[FilterTypes[\"log\"] = 0] = \"log\";\n    FilterTypes[FilterTypes[\"block\"] = 1] = \"block\";\n    FilterTypes[FilterTypes[\"pendingTransaction\"] = 2] = \"pendingTransaction\";\n})(FilterTypes = exports.FilterTypes || (exports.FilterTypes = {}));\n//# sourceMappingURL=filters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hex-datatypes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=shh.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscriptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tuple-from-union.js.map","\"use strict\";\n/*!\n * @ganache/filecoin-options\n *\n * @author Tim Coulter\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinDefaults = exports.FilecoinOptionsConfig = void 0;\nconst src_1 = require(\"./src\");\nvar src_2 = require(\"./src\");\nObject.defineProperty(exports, \"FilecoinOptionsConfig\", { enumerable: true, get: function () { return src_2.FilecoinOptionsConfig; } });\nObject.defineProperty(exports, \"FilecoinDefaults\", { enumerable: true, get: function () { return src_2.FilecoinDefaults; } });\nexports.default = {\n    FilecoinDefaults: src_1.FilecoinDefaults,\n    FilecoinOptionsConfig: src_1.FilecoinOptionsConfig\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.ChainOptions = {\n    ipfsHost: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator host name/address to listen on.\",\n        default: () => \"127.0.0.1\",\n        cliType: \"string\"\n    },\n    ipfsPort: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator port.\",\n        default: () => 5001,\n        cliType: \"number\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        cliAliases: [\"db\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinOptionsConfig = exports.FilecoinDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.FilecoinDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions\n};\nexports.FilecoinOptionsConfig = new options_1.OptionsConfig(exports.FilecoinDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst logger = { log: console.log };\nexports.LoggingOptions = {\n    logger: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        default: () => logger\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.MinerOptions = {\n    blockTime: {\n        normalize: value => Math.max(0, value),\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A `blockTime` of `0` or a negative number enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        cliType: \"number\"\n    },\n    mine: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Enable mining. Set to `false` to pause the miner.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: () => 10,\n        cliAliases: [\"a\"],\n        cliType: \"number\"\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\"],\n        cliType: \"boolean\",\n        conflicts: [\"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        cliAliases: [\"s\"],\n        cliType: \"string\",\n        conflicts: [\"deterministic\"]\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in FIL.\",\n        default: () => 100,\n        cliAliases: [\"b\"],\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\n/*!\n * @ganache/colors\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TruffleColors = void 0;\nexports.TruffleColors = {\n    /**\n     * Ganache orange\n     */\n    porsche: \"#e4a663\",\n    /**\n     * Truffle blue/turquoise\n     */\n    turquoise: \"#3fe0c5\",\n    /**\n     * Infura orange\n     */\n    infura: \"#ff6b4a\"\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__experimental_info = exports.provider = exports.server = exports._DefaultServerOptions = exports.ServerStatus = exports.Server = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst connector_loader_1 = __importDefault(require(\"./src/connector-loader\"));\nconst server_1 = __importDefault(require(\"./src/server\"));\nvar server_2 = require(\"./src/server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_2.Server; } });\nObject.defineProperty(exports, \"ServerStatus\", { enumerable: true, get: function () { return server_2.ServerStatus; } });\nObject.defineProperty(exports, \"_DefaultServerOptions\", { enumerable: true, get: function () { return server_2._DefaultServerOptions; } });\nconst version = process.env.VERSION || \"DEV\";\n/**\n * @public\n */\nconst Ganache = {\n    /**\n     * Creates a Ganache server instance that creates and\n     * serves an underlying Ganache provider. Initialization\n     * doesn't begin until `server.listen(...)` is called.\n     * `server.listen(...)` returns a promise that resolves\n     * when initialization is finished.\n     *\n     * @param options - Configuration options for the server;\n     * `options` includes provider based options as well.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    server: (options) => new server_1.default(options),\n    /**\n     * Initializes a Web3 provider for a Ganache instance.\n     * This function starts an asynchronous task, but does not\n     * finish it by the time the function returns. Listen to\n     * `provider.on(\"connect\", () => {...})` or wait for\n     * `await provider.once(\"connect\")` for initialization to\n     * finish. You may start sending requests to the provider\n     * before initialization finishes however; these requests\n     * will start being consumed after initialization finishes.\n     *\n     * @param options - Configuration options for the provider.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    provider: (options) => {\n        const loader = connector_loader_1.default.initialize(options);\n        return loader.connector.provider;\n    },\n    /**\n     *\n     * @experimental\n     */\n    __experimental_info() {\n        return {\n            version,\n            fork: {\n                knownChainIds: Array.from(utils_1.KNOWN_CHAINIDS)\n            }\n        };\n    }\n};\n/**\n * @public\n */\nexports.server = Ganache.server;\n/**\n * @public\n */\nexports.provider = Ganache.provider;\n/**\n * @experimental\n */\nexports.__experimental_info = Ganache.__experimental_info;\n/**\n * @public\n */\nexports.default = Ganache;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst flavors_1 = require(\"@ganache/flavors\");\nconst flavors_2 = require(\"@ganache/flavors\");\nconst initialize = (options = {\n    flavor: flavors_1.DefaultFlavor,\n    chain: { asyncRequestProcessing: true }\n}) => {\n    const flavor = (options.flavor || flavors_1.DefaultFlavor);\n    // Set up our request coordinator to either use FIFO or or async request\n    // processing. The RequestCoordinator _can_ be used to coordinate the number\n    // of requests being processed, but we don't use it for that (yet), instead\n    // of \"all\" (0) or just 1 as we are doing here:\n    let asyncRequestProcessing;\n    if (\"chain\" in options && \"asyncRequestProcessing\" in options[\"chain\"]) {\n        asyncRequestProcessing = options.chain.asyncRequestProcessing;\n    }\n    else if (\"asyncRequestProcessing\" in options) {\n        asyncRequestProcessing = options.asyncRequestProcessing;\n    }\n    else {\n        asyncRequestProcessing = true;\n    }\n    const requestCoordinator = new utils_1.RequestCoordinator(asyncRequestProcessing ? 0 : 1);\n    // The Executor is responsible for actually executing the method on the\n    // chain/API. It performs some safety checks to ensure \"safe\" method\n    //  execution before passing it to a RequestCoordinator.\n    const executor = new utils_1.Executor(requestCoordinator);\n    const connector = (0, flavors_2.GetConnector)(flavor, options, executor);\n    // Purposely not awaiting on this to prevent a breaking change\n    // to the `Ganache.provider()` method\n    // TODO: remove the `connector.connect ? ` check and just use\n    // `connector.connect()` after publishing the `@ganache/filecoin` with the\n    // connector.connect interface\n    const connectPromise = connector.connect\n        ? connector.connect()\n        : connector.initialize();\n    // The request coordinator is initialized in a \"paused\" state; when the\n    // provider is ready we unpause.. This lets us accept queue requests before\n    // we've even fully initialized.\n    // The function referenced by requestcoordinator.resume will be changed when\n    // requestCoordinator.stop() is called. Ensure that no references to the\n    // function are held, otherwise internal errors may be surfaced.\n    return {\n        connector,\n        promise: connectPromise.then(() => requestCoordinator.resume())\n    };\n};\n/**\n * Loads the connector specified by the given `flavor`\n */\nexports.default = {\n    initialize\n};\n//# sourceMappingURL=connector-loader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serverOptionsConfig = exports.serverDefaults = void 0;\nconst server_options_1 = require(\"./server-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.serverDefaults = {\n    server: server_options_1.ServerOptions\n};\nexports.serverOptionsConfig = new options_1.OptionsConfig(exports.serverDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerOptions = void 0;\nconst flavors_1 = require(\"@ganache/flavors\");\nconst buffer_1 = require(\"buffer\");\nconst normalize = (rawInput) => rawInput;\nexports.ServerOptions = {\n    ws: {\n        normalize,\n        cliDescription: \"Enable a websocket server.\",\n        default: () => true,\n        legacyName: \"ws\",\n        cliType: \"boolean\"\n    },\n    wsBinary: {\n        normalize,\n        cliDescription: \"Whether or not websockets should response with binary data (ArrayBuffers) or strings.\",\n        default: () => \"auto\",\n        cliChoices: [\"true\", \"false\", \"auto\"]\n    },\n    rpcEndpoint: {\n        normalize,\n        cliDescription: \"Defines the endpoint route the HTTP and WebSocket servers will listen on.\",\n        default: (config, flavor) => {\n            switch (flavor) {\n                case flavors_1.FilecoinFlavorName:\n                    return \"/rpc/v0\";\n                case flavors_1.DefaultFlavor:\n                default:\n                    return \"/\";\n            }\n        },\n        defaultDescription: '\"/\" (Ethereum), \"/rpc/v0\" (Filecoin)'\n    },\n    chunkSize: {\n        normalize: number => {\n            if (number < 0 || number > buffer_1.kMaxLength) {\n                throw new Error(`--server.chunkSize must be >= 0 and <= ${buffer_1.kMaxLength}`);\n            }\n            return number;\n        },\n        cliDescription: \"For memory and performance reasons ganache may respond with chunked transfer-encoding over HTTP and fragmented send over WebSockets. This option allows you to control the approximate size of each chunk.\",\n        default: () => 1024 * 1024,\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=server-options.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Server_options, _Server_providerOptions, _Server_status, _Server_app, _Server_httpServer, _Server_listenSocket, _Server_connector, _Server_websocketServer, _Server_initializer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports._DefaultServerOptions = exports.ServerStatus = void 0;\nconst options_1 = require(\"./options\");\nconst promise_allsettled_1 = __importDefault(require(\"promise.allsettled\"));\n// This `shim()` is necessary for `Promise.allSettled` to be shimmed\n// in `node@10`. We cannot use `allSettled([...])` directly due to\n// https://github.com/es-shims/Promise.allSettled/issues/5 without\n// upgrading Typescript. TODO: if Typescript is upgraded to 4.2.3+\n// then this line could be removed and `Promise.allSettled` below\n// could replaced with `allSettled`.\npromise_allsettled_1.default.shim();\nconst aggregate_error_1 = __importDefault(require(\"aggregate-error\"));\nconst uws_js_unofficial_1 = require(\"@trufflesuite/uws-js-unofficial\");\n// Set the \"silent\" config option so we don't output the \"uwebsockets\" header\n// we check for truthiness because `uws` is omitted from the browser build\nuws_js_unofficial_1._cfg &&\n    (0, uws_js_unofficial_1._cfg)(new Uint8Array([115, 105, 108, 101, 110, 116]));\nconst flavors_1 = require(\"@ganache/flavors\");\nconst connector_loader_1 = __importDefault(require(\"./connector-loader\"));\nconst ws_server_1 = __importDefault(require(\"./servers/ws-server\"));\nconst http_server_1 = __importDefault(require(\"./servers/http-server\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst DEFAULT_HOST = \"127.0.0.1\";\n/**\n * Server ready state constants.\n *\n * These are bit flags. This means that you can check if the status is:\n *  * ready: `status === Status.ready` or `status & Status.ready !== 0`\n *  * opening: `status === Status.opening` or `status & Status.opening !== 0`\n *  * open: `status === Status.open` or `status & Status.open !== 0`\n *  * opening || open: `status & Status.openingOrOpen !== 0` or `status & (Status.opening | Status.open) !== 0`\n *  * closing: `status === Status.closing` or `status & Status.closing !== 0`\n *  * closed: `status === Status.closed` or `status & Status.closed !== 0`\n *  * closing || closed: `status & Status.closingOrClosed !== 0` or `status & (Status.closing | Status.closed) !== 0`\n */\nvar ServerStatus;\n(function (ServerStatus) {\n    /**\n     * The Server is in an unknown state; perhaps construction didn't succeed\n     */\n    ServerStatus[ServerStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * The Server has been constructed and is ready to be opened.\n     */\n    ServerStatus[ServerStatus[\"ready\"] = 1] = \"ready\";\n    /**\n     * The Server has started to open, but has not yet finished initialization.\n     */\n    ServerStatus[ServerStatus[\"opening\"] = 2] = \"opening\";\n    /**\n     * The Server is open and ready for connection.\n     */\n    ServerStatus[ServerStatus[\"open\"] = 4] = \"open\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"openingOrOpen\"] = 6] = \"openingOrOpen\";\n    /**\n     * The Server is in the process of closing.\n     */\n    ServerStatus[ServerStatus[\"closing\"] = 8] = \"closing\";\n    /**\n     * The Server is closed and not accepting new connections.\n     */\n    ServerStatus[ServerStatus[\"closed\"] = 16] = \"closed\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"closingOrClosed\"] = 24] = \"closingOrClosed\";\n})(ServerStatus = exports.ServerStatus || (exports.ServerStatus = {}));\n/**\n * For private use. May change in the future.\n * I don't don't think these options should be held in this `core` package.\n * @ignore\n * @internal\n */\nexports._DefaultServerOptions = options_1.serverDefaults;\n/**\n * @public\n */\nclass Server extends emittery_1.default {\n    constructor(providerAndServerOptions = {\n        flavor: flavors_1.DefaultFlavor\n    }) {\n        super();\n        _Server_options.set(this, void 0);\n        _Server_providerOptions.set(this, void 0);\n        _Server_status.set(this, ServerStatus.unknown);\n        _Server_app.set(this, null);\n        _Server_httpServer.set(this, null);\n        _Server_listenSocket.set(this, null);\n        _Server_connector.set(this, void 0);\n        _Server_websocketServer.set(this, null);\n        _Server_initializer.set(this, void 0);\n        __classPrivateFieldSet(this, _Server_options, options_1.serverOptionsConfig.normalize(providerAndServerOptions), \"f\");\n        __classPrivateFieldSet(this, _Server_providerOptions, providerAndServerOptions, \"f\");\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.ready, \"f\");\n        // we need to start initializing now because `initialize` sets the\n        // `provider` property... and someone might want to do:\n        //   const server = Ganache.server();\n        //   const provider = server.provider;\n        //   await server.listen(8545)\n        const loader = connector_loader_1.default.initialize(__classPrivateFieldGet(this, _Server_providerOptions, \"f\"));\n        const connector = (__classPrivateFieldSet(this, _Server_connector, loader.connector, \"f\"));\n        // Since the ConnectorLoader starts an async promise that we intentionally\n        // don't await yet we keep the promise around for something else to handle\n        // later.\n        __classPrivateFieldSet(this, _Server_initializer, Promise.all([\n            loader.promise,\n            this.initialize(connector)\n        ]), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Server_connector, \"f\").provider;\n    }\n    get status() {\n        return __classPrivateFieldGet(this, _Server_status, \"f\");\n    }\n    async initialize(connector) {\n        const _app = (__classPrivateFieldSet(this, _Server_app, (0, uws_js_unofficial_1.App)(), \"f\"));\n        if (__classPrivateFieldGet(this, _Server_options, \"f\").server.ws) {\n            __classPrivateFieldSet(this, _Server_websocketServer, new ws_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        }\n        __classPrivateFieldSet(this, _Server_httpServer, new http_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        await connector.once(\"ready\");\n    }\n    listen(port, host, callback) {\n        if (typeof host === \"function\") {\n            callback = host;\n            host = null;\n        }\n        const callbackIsFunction = typeof callback === \"function\";\n        // Method signature specifies port: number, but we parse a string if provided\n        // inspiration taken from nodejs internal port validator\n        // https://github.com/nodejs/node/blob/8c4b8b201ada6b76d5306c9c7f352e45087fb4a9/lib/internal/validators.js#L208-L219\n        if ((typeof port !== \"number\" && typeof port !== \"string\") ||\n            (typeof port === \"string\" && port.trim().length === 0) ||\n            +port !== +port >>> 0 ||\n            port > 0xffff ||\n            port === 0) {\n            const err = new Error(`Port should be >= 0 and < 65536. Received ${port}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        const portNumber = +port;\n        const status = __classPrivateFieldGet(this, _Server_status, \"f\");\n        if (status === ServerStatus.closing) {\n            // if closing\n            const err = new Error(`Cannot start server while it is closing.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        else if ((status & ServerStatus.openingOrOpen) !== 0) {\n            // if opening or open\n            const err = new Error(`Server is already open, or is opening, on port: ${portNumber}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.opening, \"f\");\n        const promise = Promise.allSettled([\n            __classPrivateFieldGet(this, _Server_initializer, \"f\"),\n            new Promise((resolve) => {\n                // Make sure we have *exclusive* use of this port.\n                // https://github.com/uNetworking/uSockets/commit/04295b9730a4d413895fa3b151a7337797dcb91f#diff-79a34a07b0945668e00f805838601c11R51\n                const LIBUS_LISTEN_EXCLUSIVE_PORT = 1;\n                host\n                    ? __classPrivateFieldGet(this, _Server_app, \"f\").listen(host, portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve)\n                    : __classPrivateFieldGet(this, _Server_app, \"f\").listen(portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve);\n            }).then(listenSocket => {\n                if (listenSocket) {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.open, \"f\");\n                    __classPrivateFieldSet(this, _Server_listenSocket, listenSocket, \"f\");\n                }\n                else {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n                    const err = new Error(`listen EADDRINUSE: address already in use ${host || DEFAULT_HOST}:${portNumber}.`);\n                    throw err;\n                }\n            })\n        ]).then(async (promiseResults) => {\n            const errors = [];\n            if (promiseResults[0].status === \"rejected\") {\n                errors.push(promiseResults[0].reason);\n            }\n            if (promiseResults[1].status === \"rejected\") {\n                errors.push(promiseResults[1].reason);\n            }\n            if (errors.length === 0) {\n                this.emit(\"open\");\n            }\n            else {\n                __classPrivateFieldSet(this, _Server_status, ServerStatus.unknown, \"f\");\n                try {\n                    await this.close();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n                if (errors.length > 1) {\n                    throw new aggregate_error_1.default(errors);\n                }\n                else {\n                    throw errors[0];\n                }\n            }\n        });\n        if (callbackIsFunction) {\n            promise.then(() => callback(null)).catch(callback);\n        }\n        else {\n            return promise;\n        }\n    }\n    async close() {\n        if (__classPrivateFieldGet(this, _Server_status, \"f\") === ServerStatus.opening) {\n            // if opening\n            throw new Error(`Cannot close server while it is opening.`);\n        }\n        else if ((__classPrivateFieldGet(this, _Server_status, \"f\") & ServerStatus.closingOrClosed) !== 0) {\n            // if closing or closed\n            throw new Error(`Server is already closing or closed.`);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closing, \"f\");\n        // clean up the websocket objects\n        const _listenSocket = __classPrivateFieldGet(this, _Server_listenSocket, \"f\");\n        __classPrivateFieldSet(this, _Server_listenSocket, null, \"f\");\n        // close the socket to prevent any more connections\n        if (_listenSocket !== null) {\n            (0, uws_js_unofficial_1.us_listen_socket_close)(_listenSocket);\n        }\n        // close all the connected websockets:\n        if (__classPrivateFieldGet(this, _Server_websocketServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_websocketServer, \"f\").close();\n        }\n        // and do all http cleanup, if any\n        if (__classPrivateFieldGet(this, _Server_httpServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_httpServer, \"f\").close();\n        }\n        // cleanup the connector, provider, etc.\n        if (__classPrivateFieldGet(this, _Server_connector, \"f\") !== null) {\n            await __classPrivateFieldGet(this, _Server_connector, \"f\").close();\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n        __classPrivateFieldSet(this, _Server_app, null, \"f\");\n        await this.emit(\"close\");\n    }\n}\nexports.Server = Server;\n_Server_options = new WeakMap(), _Server_providerOptions = new WeakMap(), _Server_status = new WeakMap(), _Server_app = new WeakMap(), _Server_httpServer = new WeakMap(), _Server_listenSocket = new WeakMap(), _Server_connector = new WeakMap(), _Server_websocketServer = new WeakMap(), _Server_initializer = new WeakMap();\nexports.default = Server;\n//# sourceMappingURL=server.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _HttpServer_connector, _HttpServer_options, _HttpServer_isClosing, _HttpServer_handlePost, _HttpServer_handleOptions;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst content_types_1 = __importDefault(require(\"./utils/content-types\"));\nconst http_response_codes_1 = __importDefault(require(\"./utils/http-response-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nconst noop = () => { };\n/**\n * uWS doesn't let us use the request after the request method has completed.\n * But we can't set headers until after the statusCode is set. But we don't\n * know the status code until the provider returns asynchronously.\n * So this does request-related work immediately and returns a function to do the\n * rest of the work later.\n * @param method -\n * @param request -\n */\nfunction prepareCORSResponseHeaders(method, request) {\n    // https://fetch.spec.whatwg.org/#http-requests\n    const origin = request.getHeader(\"origin\");\n    const acrh = request.getHeader(\"access-control-request-headers\");\n    return (response) => {\n        const isCORSRequest = origin !== \"\";\n        if (isCORSRequest) {\n            // OPTIONS preflight requests need a little extra treatment\n            if (method === \"OPTIONS\") {\n                // we only allow POST requests, so it doesn't matter which method the request is asking for\n                response.writeHeader(\"Access-Control-Allow-Methods\", \"POST\");\n                // echo all requested access-control-request-headers back to the response\n                if (acrh !== \"\") {\n                    response.writeHeader(\"Access-Control-Allow-Headers\", acrh);\n                }\n                // Make browsers and compliant clients cache the OPTIONS preflight response for 10\n                // minutes (this is the maximum time Chromium allows)\n                response.writeHeader(\"Access-Control-Max-Age\", \"600\"); // seconds\n            }\n            // From the spec: https://fetch.spec.whatwg.org/#http-responses\n            // \"For a CORS-preflight request, request’s credentials mode is always \"omit\",\n            // but for any subsequent CORS requests it might not be. Support therefore\n            // needs to be indicated as part of the HTTP response to the CORS-preflight request as well.\", so this\n            // header is added to all requests.\n            // Additionally, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials,\n            // states that there aren't any HTTP Request headers that indicate you whether or not Request.withCredentials\n            // is set. Because web3@1.0.0-beta.35-? always sets `request.withCredentials = true` while Safari requires it be\n            // returned even when no credentials are set in the browser this header must always be return on all requests.\n            // (I've found that Chrome and Firefox don't actually require the header when credentials aren't set)\n            //  Regression Commit: https://github.com/ethereum/web3.js/pull/1722\n            //  Open Web3 Issue: https://github.com/ethereum/web3.js/issues/1802\n            response.writeHeader(\"Access-Control-Allow-Credentials\", \"true\");\n            // From the spec: \"It cannot be reliably identified as participating in the CORS protocol\n            // as the `Origin` header is also included for all requests whose method is neither\n            // `GET` nor `HEAD`.\"\n            // Explicitly set the origin instead of using *, since credentials\n            // can't be used in conjunction with *. This will always be set\n            /// for valid preflight requests.\n            response.writeHeader(\"Access-Control-Allow-Origin\", origin);\n        }\n    };\n}\nfunction sendResponse(response, closeConnection, statusCode, contentType, data, writeHeaders = noop) {\n    response.cork(() => {\n        response.writeStatus(statusCode);\n        writeHeaders(response);\n        if (contentType != null) {\n            response.writeHeader(\"Content-Type\", contentType);\n        }\n        if (data !== null) {\n            response.end(data, closeConnection);\n        }\n        else {\n            // in the case that body is not provided, it must specifically be <undefined> and not <null>\n            response.end(undefined, closeConnection);\n        }\n    });\n}\nfunction sendChunkedResponse(response, closeConnection, statusCode, contentType, data, chunkSize, writeHeaders = noop) {\n    const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n    // get our first fragment\n    const { value: firstFragment } = fragments.next();\n    // check if there is any more fragments after this one\n    let { value: nextFragment, done } = fragments.next();\n    // if there are no more fragments send the \"firstFragment\" via `sendResponse`,\n    // as we don't need to chunk it.\n    if (done) {\n        sendResponse(response, closeConnection, statusCode, contentType, firstFragment, writeHeaders);\n    }\n    else {\n        response.cork(() => {\n            response.writeStatus(statusCode);\n            writeHeaders(response);\n            response.writeHeader(\"Content-Type\", contentType);\n            // since we have at least two fragments send both now\n            response.write(firstFragment);\n            response.write(nextFragment);\n            // and then keep sending the rest\n            for (nextFragment of fragments) {\n                response.write(nextFragment);\n            }\n            response.end(undefined, closeConnection);\n        });\n    }\n}\nclass HttpServer {\n    constructor(app, connector, options) {\n        _HttpServer_connector.set(this, void 0);\n        _HttpServer_options.set(this, void 0);\n        _HttpServer_isClosing.set(this, false);\n        _HttpServer_handlePost.set(this, (response, request) => {\n            // handle JSONRPC post requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"POST\", request);\n            // TODO(perf): pre-allocate the buffer if we know the Content-Length\n            let buffer;\n            let aborted = false;\n            response.onAborted(() => {\n                aborted = true;\n            });\n            response.onData((message, isLast) => {\n                const chunk = Buffer.from(message);\n                if (isLast) {\n                    // we have to use any here because typescript isn't smart enough\n                    // to understand the ambiguity of RequestFormat and ReturnType\n                    // on the Connector interface must match up appropriately\n                    const connector = __classPrivateFieldGet(this, _HttpServer_connector, \"f\");\n                    let payload;\n                    try {\n                        const message = buffer\n                            ? Buffer.concat([buffer, chunk], buffer.length + chunk.length)\n                            : chunk;\n                        payload = connector.parse(message);\n                    }\n                    catch (e) {\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request: \" + e.message, writeHeaders);\n                        return;\n                    }\n                    connector\n                        .handle(payload, request)\n                        .then(({ value }) => value)\n                        .then(result => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.format(result, payload);\n                        if (util_1.types.isGeneratorObject(data)) {\n                            sendChunkedResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, __classPrivateFieldGet(this, _HttpServer_options, \"f\").chunkSize, writeHeaders);\n                        }\n                        else {\n                            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                        }\n                    })\n                        .catch(error => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.formatError(error, payload);\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                    });\n                }\n                else {\n                    if (buffer) {\n                        buffer = Buffer.concat([buffer, chunk], buffer.length + chunk.length);\n                    }\n                    else {\n                        buffer = Buffer.concat([chunk], chunk.length);\n                    }\n                }\n            });\n        });\n        _HttpServer_handleOptions.set(this, (response, request) => {\n            // handle CORS preflight requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"OPTIONS\", request);\n            // OPTIONS responses don't have a body, so respond with `204 No Content`...\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NO_CONTENT, null, null, writeHeaders);\n        });\n        __classPrivateFieldSet(this, _HttpServer_connector, connector, \"f\");\n        __classPrivateFieldSet(this, _HttpServer_options, options, \"f\");\n        // JSON-RPC routes...\n        app\n            .post(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handlePost, \"f\"))\n            .options(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handleOptions, \"f\"));\n        // because Easter Eggs are fun...\n        app.get(\"/418\", response => {\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.IM_A_TEAPOT, content_types_1.default.PLAIN, \"418 I'm a teapot\");\n        });\n        // fallback routes...\n        app.any(\"/*\", (response, request) => {\n            const connectionHeader = request.getHeader(\"connection\");\n            if (connectionHeader && connectionHeader.toLowerCase() === \"upgrade\") {\n                // if we got here it means the websocket server wasn't enabled but\n                // a client tried to connect via websocket. This is a Bad Request.\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request\");\n            }\n            else {\n                // all other requests don't mean anything to us, so respond with `404 Not Found`...\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NOT_FOUND, content_types_1.default.PLAIN, \"404 Not Found\");\n            }\n        });\n    }\n    close() {\n        // flags the server as closing, indicating the connection should be closed with subsequent responses\n        // as there is no way presently to close existing connections outside of the request/response context\n        // see discussion: https://github.com/uNetworking/uWebSockets.js/issues/663#issuecomment-1026283415\n        __classPrivateFieldSet(this, _HttpServer_isClosing, true, \"f\");\n    }\n}\nexports.default = HttpServer;\n_HttpServer_connector = new WeakMap(), _HttpServer_options = new WeakMap(), _HttpServer_isClosing = new WeakMap(), _HttpServer_handlePost = new WeakMap(), _HttpServer_handleOptions = new WeakMap();\n//# sourceMappingURL=http-server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentTypes;\n(function (ContentTypes) {\n    ContentTypes[\"PLAIN\"] = \"text/plain\";\n    ContentTypes[\"JSON\"] = \"application/json\";\n})(ContentTypes || (ContentTypes = {}));\nexports.default = ContentTypes;\n//# sourceMappingURL=content-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFragmentGenerator = void 0;\nfunction* getFragmentGenerator(data, bufferSize) {\n    // Use a large buffer to reduce round-trips\n    let buf = Buffer.allocUnsafe(bufferSize);\n    let offset = 0;\n    for (const value of data) {\n        const { byteLength } = value;\n        // if we don't have enough space in the buffer for this next value `yield`\n        // the buffer as is.\n        if (offset > 0 && byteLength + offset > bufferSize) {\n            yield buf.subarray(0, offset);\n            // Reset the buffer. Since `uws` sends packets asynchronously,\n            // it is important that we allocate a new buffer for the next\n            // frame. This avoids overwriting data before it is sent. The\n            // reason we need to do this is likely because we do not yet\n            // handle backpressure. Part of handling backpressure will\n            // involve the drain event and only sending while\n            // `ws.getBufferedAmount() < ACCEPTABLE_BACKPRESSURE`.\n            // See https://github.com/trufflesuite/ganache/issues/2790\n            buf = null;\n            offset = 0;\n        }\n        // Store value in buffer if it fits (but don't store it if it is the exact\n        // same size as bufferSize)\n        if (byteLength < bufferSize) {\n            // copy from value into buffer\n            if (buf === null)\n                buf = Buffer.allocUnsafe(bufferSize);\n            value.copy(buf, offset, 0, byteLength);\n            offset += byteLength;\n        }\n        else {\n            // Cannot fit this value in buffer, send it directly.\n            // Buffer has just been flushed (since the condition `byteLength + offset > bufferSize`\n            // will always be true here, which will have triggered the flush above) so\n            // we do not need to worry about out-of-order send.\n            yield value;\n        }\n    }\n    // If we've got anything buffered at this point, send it.\n    if (offset > 0)\n        yield buf.subarray(0, offset);\n    return void 0;\n}\nexports.getFragmentGenerator = getFragmentGenerator;\n//# sourceMappingURL=fragment-generator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * HTTP/1.1 Response Status-Codes, including the _required_ space character.\n *\n * e.g., `\"200 \"` or `\"404 \"`\n *\n * RFC Grammar:\n *\n * ```ebnf\n * Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF\n * ```\n *\n * The Status-Codes defined here fullfill the `Status-Code SP` part of the above\n * grammar.\n *\n * See https://datatracker.ietf.org/doc/html/rfc2616#section-6.1 for details.\n */\nvar HttpResponseCodes;\n(function (HttpResponseCodes) {\n    HttpResponseCodes[\"OK\"] = \"200 \";\n    HttpResponseCodes[\"NO_CONTENT\"] = \"204 \";\n    HttpResponseCodes[\"BAD_REQUEST\"] = \"400 \";\n    HttpResponseCodes[\"NOT_FOUND\"] = \"404 \";\n    HttpResponseCodes[\"METHOD_NOT_ALLOWED\"] = \"405 \";\n    HttpResponseCodes[\"IM_A_TEAPOT\"] = \"418 \";\n})(HttpResponseCodes || (HttpResponseCodes = {}));\nexports.default = HttpResponseCodes;\n//# sourceMappingURL=http-response-codes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketCloseCodes;\n(function (WebSocketCloseCodes) {\n    /**\n     * Normal closure; the connection successfully completed whatever purpose for\n     * which it was created.\n     */\n    WebSocketCloseCodes[WebSocketCloseCodes[\"CLOSE_NORMAL\"] = 1000] = \"CLOSE_NORMAL\";\n    /**\n     * Indicates that an endpoint is \"going away\", such as a server going down or\n     * a browser having navigated away from a page.\n     */\n    // CLOSE_GOING_AWAY = 1001\n    // CLOSE_PROTOCOL_ERROR = 1002,\n    // CLOSE_ABNORMAL = 1006\n})(WebSocketCloseCodes || (WebSocketCloseCodes = {}));\nexports.default = WebSocketCloseCodes;\n//# sourceMappingURL=websocket-close-codes.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _WebsocketServer_connections;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PAYLOAD_SIZE = exports.sendFragmented = void 0;\nconst websocket_close_codes_1 = __importDefault(require(\"./utils/websocket-close-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nfunction sendFragmented(ws, data, useBinary, chunkSize) {\n    ws.cork(() => {\n        // fragment send: https://github.com/uNetworking/uWebSockets.js/issues/635\n        const shouldCompress = false;\n        const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n        // get our first fragment\n        const { value: firstFragment } = fragments.next();\n        // check if there is any more fragments after this one\n        let { value: maybeLastFragment, done } = fragments.next();\n        // if there are no more fragments send the \"firstFragment\" via `send`, as\n        // we don't need to chunk it.\n        if (done) {\n            ws.send(firstFragment, useBinary);\n        }\n        else {\n            // since we have at least two fragments send the first one now that it\n            // is \"full\"\n            ws.sendFirstFragment(firstFragment, useBinary);\n            // at this point `maybeLastFragment` is the next fragment that should be\n            // sent. We iterate over all fragments, sending the _previous_ fragment\n            // (`maybeLastFragment`) then cache the current fragment (`fragment`)\n            // in the `maybeLastFragment` variable, which will be sent in the next\n            // iteration, or via `sendLastFragment`, below, if `fragment` was also the\n            // very last one.\n            for (const fragment of fragments) {\n                // definitely not the last fragment, send it!\n                ws.sendFragment(maybeLastFragment, shouldCompress);\n                maybeLastFragment = fragment;\n            }\n            ws.sendLastFragment(\n            // definitely the last fragment at this point\n            maybeLastFragment, shouldCompress);\n        }\n    });\n}\nexports.sendFragmented = sendFragmented;\n// matches geth's limit of 15 MebiBytes: https://github.com/ethereum/go-ethereum/blob/3526f690478482a02a152988f4d31074c176b136/rpc/websocket.go#L40\nexports.MAX_PAYLOAD_SIZE = 15 * 1024 * 1024;\nclass WebsocketServer {\n    constructor(app, connector, options) {\n        _WebsocketServer_connections.set(this, new Map());\n        const connections = __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\");\n        const wsBinary = options.wsBinary;\n        const autoBinary = wsBinary === \"auto\";\n        app.ws(options.rpcEndpoint, {\n            /* WS Options */\n            maxPayloadLength: exports.MAX_PAYLOAD_SIZE,\n            idleTimeout: 120,\n            // Note that compression is disabled (the default option)\n            // due to not being able to link against electron@12\n            // with compression included\n            /* Handlers */\n            open: (ws) => {\n                ws.closed = false;\n                connections.set(ws, new Set());\n            },\n            message: async (ws, message, isBinary) => {\n                // We have to use type any instead of ReturnType<typeof connector.parse>\n                // on `payload` because Typescript isn't smart enough to understand the\n                // ambiguity doesn't actually exist\n                let payload;\n                const useBinary = autoBinary ? isBinary : wsBinary;\n                try {\n                    payload = connector.parse(Buffer.from(message));\n                }\n                catch (err) {\n                    const response = connector.formatError(err, payload);\n                    ws.send(response, useBinary);\n                    return;\n                }\n                let data;\n                try {\n                    const { value } = await connector.handle(payload, ws);\n                    // The socket may have closed while we were waiting for the response\n                    // Don't bother trying to send to it if it was.\n                    if (ws.closed)\n                        return;\n                    const resultEmitter = value;\n                    const result = await resultEmitter;\n                    if (ws.closed)\n                        return;\n                    data = connector.format(result, payload);\n                    // if the result is an emitter listen to its `\"message\"` event\n                    // We check if `on` is a function rather than check if\n                    // `resultEmitter instanceof PromiEvent` because `@ganache/filecoin`\n                    // and `ganache` webpack `@ganache/utils` separately. This causes\n                    // instanceof to fail here. Since we know `resultEmitter` is MergePromiseT\n                    // we can safely assume that if `on` is a function, then we have a PromiEvent\n                    if (typeof resultEmitter[\"on\"] === \"function\") {\n                        const resultEmitterPromiEvent = resultEmitter;\n                        resultEmitterPromiEvent.on(\"message\", (result) => {\n                            // note: we _don't_ need to check if `ws.closed` here because when\n                            // `ws.closed` is set we remove this event handler anyway.\n                            const message = JSON.stringify({\n                                jsonrpc: \"2.0\",\n                                method: result.type,\n                                params: result.data\n                            });\n                            ws.send(message, isBinary);\n                        });\n                        // keep track of listeners to dispose off when the ws disconnects\n                        connections.get(ws).add(resultEmitterPromiEvent.dispose);\n                    }\n                }\n                catch (err) {\n                    // ensure the connector's `handle` fn doesn't throw outside of a Promise\n                    if (ws.closed)\n                        return;\n                    data = connector.formatError(err, payload);\n                }\n                if (util_1.types.isGeneratorObject(data)) {\n                    sendFragmented(ws, data, useBinary, options.chunkSize);\n                }\n                else {\n                    ws.send(data, useBinary);\n                }\n            },\n            drain: (ws) => {\n                // This is there so tests can detect if a small amount of backpressure\n                // is happening and that things will still work if it does. We actually\n                // don't do anything to manage excessive backpressure.\n                // TODO: handle back pressure for real!\n                // options.logger.log(\"WebSocket backpressure: \" + ws.getBufferedAmount());\n            },\n            close: (ws) => {\n                ws.closed = true;\n                connections.get(ws).forEach(dispose => dispose());\n                connections.delete(ws);\n            }\n        });\n    }\n    close() {\n        __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\").forEach((_, ws) => ws.end(websocket_close_codes_1.default.CLOSE_NORMAL, \"Server closed by client\"));\n    }\n}\nexports.default = WebsocketServer;\n_WebsocketServer_connections = new WeakMap();\n//# sourceMappingURL=ws-server.js.map","var map = {\n\t\"./uws_darwin_arm64_108.node\": 507,\n\t\"./uws_darwin_arm64_83.node\": 508,\n\t\"./uws_darwin_arm64_93.node\": 509,\n\t\"./uws_darwin_x64_108.node\": 510,\n\t\"./uws_darwin_x64_83.node\": 511,\n\t\"./uws_darwin_x64_93.node\": 512,\n\t\"./uws_linux_arm64_108.node\": 513,\n\t\"./uws_linux_arm64_83.node\": 514,\n\t\"./uws_linux_arm64_93.node\": 515,\n\t\"./uws_linux_x64_108.node\": 516,\n\t\"./uws_linux_x64_83.node\": 517,\n\t\"./uws_linux_x64_93.node\": 518,\n\t\"./uws_win32_x64_108.node\": 519,\n\t\"./uws_win32_x64_83.node\": 520,\n\t\"./uws_win32_x64_93.node\": 521\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 858;","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetConnector = exports.DefaultOptionsByName = exports.DefaultFlavor = exports.FilecoinFlavorName = exports.EthereumFlavorName = void 0;\nconst ethereum_1 = require(\"@ganache/ethereum\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst filecoin_options_1 = require(\"@ganache/filecoin-options\");\nconst colors_1 = require(\"@ganache/colors\");\nconst chalk_1 = __importDefault(require(\"chalk\"));\n// we need \"@ganache/options\" in order for TS to properly infer types for `DefaultOptionsByName`\nrequire(\"@ganache/options\");\nconst NEED_HELP = \"Need help? Reach out to the Truffle community at\";\nconst COMMUNITY_LINK = \"https://trfl.io/support\";\nexports.EthereumFlavorName = \"ethereum\";\nexports.FilecoinFlavorName = \"filecoin\";\nexports.DefaultFlavor = exports.EthereumFlavorName;\nexports.DefaultOptionsByName = {\n    [exports.EthereumFlavorName]: ethereum_options_1.EthereumDefaults,\n    [exports.FilecoinFlavorName]: filecoin_options_1.FilecoinDefaults\n};\nfunction GetConnector(flavor, providerOptions, executor) {\n    if (flavor === exports.DefaultFlavor) {\n        return new ethereum_1.Connector(providerOptions, executor);\n    }\n    try {\n        switch (flavor) {\n            case exports.FilecoinFlavorName: {\n                flavor = \"@ganache/filecoin\";\n                // TODO: remove the `typeof f.default != \"undefined\" ? ` check once the\n                // published filecoin plugin is updated to\n                const f = eval(\"require\")(flavor);\n                const Connector = typeof f.default != \"undefined\" ? f.default.Connector : f.Connector;\n                // @ts-ignore\n                return new Connector(providerOptions, executor);\n            }\n            default: {\n                // for future plugin compat\n                const { Connector } = require(flavor);\n                return new Connector(providerOptions, executor);\n            }\n        }\n    }\n    catch (e) {\n        if (e.message.includes(`Cannot find module '${flavor}'`)) {\n            // we print and exit rather than throw to prevent webpack output from being\n            // spat out for the line number\n            console.warn((0, chalk_1.default) `\\n\\n{red.bold ERROR:} Could not find Ganache flavor \"{bold filecoin}\" (${flavor}); ` +\n                `it probably\\nneeds to be installed.\\n` +\n                ` ▸ if you're using Ganache as a library run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install ${flavor}}\\n` +\n                ` ▸ if you're using Ganache as a CLI run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install --global ${flavor}}\\n\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.porsche}\").bold ${NEED_HELP}}\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.turquoise}\") ${COMMUNITY_LINK}}\\n\\n`);\n            process.exit(1);\n        }\n        else {\n            throw e;\n        }\n    }\n}\nexports.GetConnector = GetConnector;\n//# sourceMappingURL=index.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 849;\nmodule.exports = webpackEmptyContext;","export const debug = () => () => {};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/base\"), exports);\n__exportStar(require(\"./src/exclusive\"), exports);\n__exportStar(require(\"./src/definition\"), exports);\n__exportStar(require(\"./src/create\"), exports);\n__exportStar(require(\"./src/constants\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeterministicSeedPhrase = void 0;\n// Don't change! We need maintain original determinism since the beginning\nexports.DeterministicSeedPhrase = \"TestRPC is awesome!\";\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OptionsConfig_defaults, _OptionsConfig_namespaces;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsConfig = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst checkForConflicts = (name, namespace, suppliedOptions, conflicts) => {\n    if (!conflicts)\n        return;\n    for (const conflict of conflicts) {\n        if (suppliedOptions.has(conflict)) {\n            throw new Error(`Values for both \"${namespace}.${name}\" and ` +\n                `\"${namespace}.${conflict}\" cannot ` +\n                `be specified; they are mutually exclusive.`);\n        }\n    }\n};\nfunction fill(defaults, options, target, namespace) {\n    const def = defaults[namespace];\n    const config = (target[namespace] = target[namespace] || {});\n    const flavor = options.flavor;\n    const suppliedOptions = new Set();\n    const keys = Object.keys(def);\n    if ((0, utils_1.hasOwn)(options, namespace)) {\n        const namespaceOptions = options[namespace];\n        for (let i = 0, l = keys.length; i < l; i++) {\n            const key = keys[i];\n            const propDefinition = def[key];\n            let value = namespaceOptions[key];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(namespaceOptions[key]);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else {\n                const legacyName = propDefinition.legacyName || key;\n                value = options[legacyName];\n                if (value !== undefined) {\n                    const normalized = propDefinition.normalize(value);\n                    if (normalized !== undefined) {\n                        checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                        config[key] = normalized;\n                        suppliedOptions.add(key);\n                    }\n                }\n                else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                    config[key] = propDefinition.default(config, flavor);\n                }\n            }\n        }\n    }\n    else {\n        for (let i = 0, l = keys.length; i < l; i++) {\n            const key = keys[i];\n            const propDefinition = def[key];\n            const legacyName = propDefinition.legacyName || key;\n            const value = options[legacyName];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(value);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                config[key] = propDefinition.default(config, flavor);\n            }\n        }\n    }\n}\nclass OptionsConfig {\n    constructor(defaults) {\n        _OptionsConfig_defaults.set(this, void 0);\n        _OptionsConfig_namespaces.set(this, void 0);\n        __classPrivateFieldSet(this, _OptionsConfig_defaults, defaults, \"f\");\n        __classPrivateFieldSet(this, _OptionsConfig_namespaces, Object.keys(defaults), \"f\");\n    }\n    normalize(options) {\n        const defaults = __classPrivateFieldGet(this, _OptionsConfig_defaults, \"f\");\n        const out = {};\n        __classPrivateFieldGet(this, _OptionsConfig_namespaces, \"f\").forEach(namespace => {\n            fill(defaults, options, out, namespace);\n        });\n        return out;\n    }\n}\nexports.OptionsConfig = OptionsConfig;\n_OptionsConfig_defaults = new WeakMap(), _OptionsConfig_namespaces = new WeakMap();\n//# sourceMappingURL=create.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion Definition helpers\n//# sourceMappingURL=definition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion\n//# sourceMappingURL=exclusive.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _PromiseQueue_queue, _PromiseQueue_tryResolve, _PromiseQueue_tryResolveChain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst entry_1 = __importDefault(require(\"./src/entry\"));\nconst emitteryMethods = [\"emit\", \"once\"];\n/**\n * Creates a FIFO queue that ensures promises are _resolved_ in the order\n * they were added.\n *\n * This is different than a FIFO queue that _executes_ functions that\n * return promises; this queue is for the promises themselves.\n *\n * @example\n * ```javascript\n * const queue = new PromiseQueue();\n *\n * const slow = new Promise(resolve => setTimeout(resolve, 1000, \"slow\"));\n * const fast = Promise.resolve(\"fast\");\n *\n * await Promise.race([\n *   queue.add(slow),\n *   queue.add(fast)\n * ]); // returns \"slow\"\n *\n * // Additionally, the queued promise chain can be cleared via `queue.clear(value)`.\n * // This will cause the chain of promises to all resolve immediately with the\n * // given value. *\n * //\n * // * note: whatever the promise starting doing when it was created will still\n * // happen, no promises are aborted; rather, the return value is ignored.\n * ```\n */\nlet PromiseQueue = class PromiseQueue {\n    constructor() {\n        // TODO(perf): a singly linked list is probably a better option here\n        _PromiseQueue_queue.set(this, []);\n        _PromiseQueue_tryResolve.set(this, (queue, entry) => {\n            // if this is now the highest priority entry, resolve the outer\n            // Promise\n            if (entry === queue[0]) {\n                queue.shift();\n                entry.resolve(entry.value);\n                // then try resolving the rest\n                __classPrivateFieldGet(this, _PromiseQueue_tryResolveChain, \"f\").call(this, queue);\n            }\n            else {\n                entry.resolved = true;\n            }\n        });\n        /**\n         * Removes all _resolved_ promises from the front of the chain of promises.\n         */\n        _PromiseQueue_tryResolveChain.set(this, (queue) => {\n            let first = queue[0];\n            while (first && first.resolved) {\n                queue.shift();\n                first.resolve(first.value);\n                first = queue[0];\n            }\n            // if there is nothing left to do emit `\"idle\"`\n            if (queue.length === 0) {\n                this.emit(\"idle\");\n            }\n        });\n    }\n    /**\n     * Returns true if there are promises pending in the queue\n     */\n    isBusy() {\n        return __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").length !== 0;\n    }\n    /**\n     * Adds the promise to the end of the queue.\n     * @param promise -\n     * @returns a promise that resolves with the given promise's result. If the\n     * queue was `clear`ed before the promise could be shifted off the return\n     * value will be the `value` passed to `clear`.\n     */\n    add(promise) {\n        const queue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\");\n        const entry = new entry_1.default(promise, queue, __classPrivateFieldGet(this, _PromiseQueue_tryResolve, \"f\"));\n        queue.push(entry);\n        return entry.promise;\n    }\n    /**\n     * Clears all promises from the queue and sets their resolved values to the\n     * given value.\n     */\n    clear(value) {\n        // remove all entries from the queue and mark them.\n        const cancelledQueue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").splice(0);\n        cancelledQueue.forEach(entry => {\n            entry.queue = cancelledQueue;\n            entry.value = value;\n        });\n    }\n};\n_PromiseQueue_queue = new WeakMap(), _PromiseQueue_tryResolve = new WeakMap(), _PromiseQueue_tryResolveChain = new WeakMap();\nPromiseQueue = __decorate([\n    emittery_1.default.mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiseQueue);\nexports.default = PromiseQueue;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Entry {\n    constructor(promise, queue, onSetteled) {\n        this.resolved = false;\n        this.value = promise;\n        this.queue = queue;\n        this.onSetteled = onSetteled;\n        const _onSetteled = () => this.onSetteled(this.queue, this);\n        promise.then(_onSetteled, _onSetteled);\n        this.promise = new Promise(resolve => {\n            this.resolve = resolve;\n        });\n    }\n}\nexports.default = Entry;\n//# sourceMappingURL=entry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encodeLength = exports.encode = exports.digest = exports.encodeRange = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Begin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\n * finish encoding.\n *\n **/\nfunction encodeRange(items, start, length) {\n    let count = 0;\n    const end = start + length;\n    const output = [];\n    for (var i = start; i < end; i++) {\n        const item = items[i];\n        const encoded = encode(item);\n        count += encoded.length;\n        output.push(encoded);\n    }\n    return { length: count, output };\n}\nexports.encodeRange = encodeRange;\n/**\n * Finishes encoding started by `encodeRange`.\n *\n * @param ranges -\n * @returns returns a Buffer of encoded data\n */\nfunction digest(ranges, length) {\n    const encodedLength = encodeLength(length, 192);\n    const lengthEncodedLength = encodedLength.length;\n    const buf = Buffer.allocUnsafe(lengthEncodedLength + length);\n    encodedLength.copy(buf, 0, 0, lengthEncodedLength);\n    let offset = lengthEncodedLength;\n    for (let i = 0, l = ranges.length; i < l; i++) {\n        const range = ranges[i];\n        for (let j = 0, m = range.length; j < m; j++) {\n            const entry = range[j];\n            const size = entry.length;\n            entry.copy(buf, offset, 0, size);\n            offset += size;\n        }\n    }\n    return buf;\n}\nexports.digest = digest;\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * @param input -\n * @returns returns a Buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        let length = 0;\n        const output = [];\n        for (let i = 0, l = input.length; i < l; i++) {\n            const enc = encode(input[i]);\n            length += enc.length;\n            output.push(enc);\n        }\n        const buf = Buffer.concat(output, length);\n        const encodedLength = encodeLength(length, 192);\n        return Buffer.concat([encodedLength, buf], encodedLength.length + length);\n    }\n    else {\n        if (input == null) {\n            const buf = Buffer.allocUnsafe(1);\n            buf[0] = 128;\n            return buf;\n        }\n        else {\n            const length = input.length;\n            if (length === 1 && input[0] < 128) {\n                return input;\n            }\n            else {\n                const encLength = encodeLength(length, 128);\n                return Buffer.concat([encLength, input], encLength.length + length);\n            }\n        }\n    }\n}\nexports.encode = encode;\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        const buf = Buffer.allocUnsafe(1);\n        buf[0] = len + offset;\n        return buf;\n    }\n    else {\n        const hexLength = (0, utils_1.uintToBuffer)(len);\n        const lLength = hexLength.length;\n        const firstByte = (0, utils_1.uintToBuffer)(offset + 55 + lLength);\n        return Buffer.concat([firstByte, hexLength], firstByte.length + lLength);\n    }\n}\nexports.encodeLength = encodeLength;\n/**\n * Slices a Buffer, throws if the slice goes out-of-bounds of the Buffer.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error(\"invalid RLP (safeSlice): end slice of Buffer out-of-bounds\");\n    }\n    return input.slice(start, end);\n}\n/**\n * RLP Decoding based on https://eth.wiki/en/fundamentals/rlp\n * @param input Will be converted to Buffer\n * @returns decoded Array of Buffers containing the original message\n **/\nfunction decode(input) {\n    if (!input || input.length === 0) {\n        return utils_1.BUFFER_EMPTY;\n    }\n    const decoded = _decode(input);\n    if (decoded.remainder.length !== 0) {\n        throw new Error(\"invalid RLP: remainder must be zero\");\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error(\"invalid RLP: extra zeros\");\n    }\n    return parseHexByte(bytesToHex(v));\n}\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1)\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error(\"invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed\");\n        }\n        return {\n            data,\n            remainder: input.slice(length)\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error(\"invalid RLP: not enough bytes for string length\");\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error(\"invalid RLP: expected string length to be greater than 55\");\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.slice(length + llength)\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length)\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error(\"invalid RLP: encoded list too short\");\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error(\"invalid RLP: total length is larger than the data\");\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength)\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, \"0\"));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = \"\";\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error(\"Invalid byte sequence\");\n    return byte;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/secp256k1\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = exports.SECP256K1_N = void 0;\nconst path_1 = require(\"path\");\nexports.SECP256K1_N = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0n; // (SECP256K1_N - 1n) / 2n\nlet secp256k1;\ntry {\n    // TODO: find a better way :-)\n    // use `eval` to make `ganache`'s webpack ignore this\n    const nodeRequire = eval(\"require\");\n    const path = nodeRequire.resolve(\"secp256k1/package.json\");\n    const dir = (0, path_1.dirname)(path);\n    const nodeGypBuild = require(\"node-gyp-build\");\n    // load native secp256k1\n    const { Secp256k1 } = nodeGypBuild(dir);\n    secp256k1 = new Secp256k1();\n}\ncatch {\n    // on error use the JS fallback\n    secp256k1 = require(\"secp256k1/lib/elliptic\");\n}\nexports.default = secp256k1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromiEvent = exports.JsonRpcErrorCode = exports.makeResponse = exports.makeRequest = exports.makeError = exports.JsonRpcType = void 0;\n__exportStar(require(\"./src/types\"), exports);\n__exportStar(require(\"./src/utils\"), exports);\nvar json_rpc_1 = require(\"./src/things/json-rpc\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_1.JsonRpcType; } });\n__exportStar(require(\"./src/things/subscription\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-quantity\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-data\"), exports);\nvar jsonrpc_1 = require(\"./src/things/jsonrpc\");\nObject.defineProperty(exports, \"makeError\", { enumerable: true, get: function () { return jsonrpc_1.makeError; } });\nObject.defineProperty(exports, \"makeRequest\", { enumerable: true, get: function () { return jsonrpc_1.makeRequest; } });\nObject.defineProperty(exports, \"makeResponse\", { enumerable: true, get: function () { return jsonrpc_1.makeResponse; } });\nObject.defineProperty(exports, \"JsonRpcErrorCode\", { enumerable: true, get: function () { return jsonrpc_1.JsonRpcErrorCode; } });\nvar promievent_1 = require(\"./src/things/promievent\");\nObject.defineProperty(exports, \"PromiEvent\", { enumerable: true, get: function () { return __importDefault(promievent_1).default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBigIntBE = exports.toBufferBE = void 0;\nvar bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\nObject.defineProperty(exports, \"toBufferBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBufferBE; } });\nObject.defineProperty(exports, \"toBigIntBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBigIntBE; } });\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcType = void 0;\nvar json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_base_types_1.BaseJsonRpcType; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseAndValidateStringInput = exports.parseAndValidateBigIntInput = exports.parseAndValidateNumberInput = void 0;\nconst bigint_to_buffer_1 = require(\"../../utils/bigint-to-buffer\");\nconst uint_to_buffer_1 = require(\"../../utils/uint-to-buffer\");\nconst BUFFER_EMPTY = Buffer.allocUnsafe(0);\n/**\n * Parse and validate a {@link number} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param {number} input - must be a positive, finite integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateNumberInput(input) {\n    if (input === 0) {\n        return BUFFER_EMPTY;\n    }\n    if (input < 0) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    if (input % 1) {\n        throw new Error(\"Cannot wrap a decimal as a json-rpc type\");\n    }\n    if (!isFinite(input)) {\n        throw new Error(`Cannot wrap a ${input} as a json-rpc type`);\n    }\n    return (0, uint_to_buffer_1.uintToBuffer)(input);\n}\nexports.parseAndValidateNumberInput = parseAndValidateNumberInput;\n/**\n * Parse and validate a {@link bigint} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {bigint} input - must be a positive integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateBigIntInput(input) {\n    if (input < 0n) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    return (0, bigint_to_buffer_1.bigIntToBuffer)(input);\n}\nexports.parseAndValidateBigIntInput = parseAndValidateBigIntInput;\n/**\n * Parse and validate a {@link string} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {string} input - must be a hex encoded integer prefixed with \"0x\".\n * @returns Buffer\n */\nfunction parseAndValidateStringInput(input) {\n    if (input.slice(0, 2).toLowerCase() !== \"0x\") {\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; strings must be prefixed with \"0x\".`);\n    }\n    let hexValue = input.slice(2);\n    // hexValue must be an even number of hexadecimal characters in order to correctly decode in Buffer.from\n    // see: https://nodejs.org/api/buffer.html#buffers-and-character-encodings\n    if (hexValue.length & 1) {\n        hexValue = `0${hexValue}`;\n    }\n    const byteLength = Math.ceil(input.length / 2 - 1);\n    const _buffer = Buffer.from(hexValue, \"hex\");\n    if (_buffer.length !== byteLength) {\n        // Buffer.from will return the result after encountering an input that does not conform to hexadecimal encoding.\n        // this means that an invalid input can never return a value with the expected bytelength.\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; the input value contains an invalid hex character.`);\n    }\n    return _buffer;\n}\nexports.parseAndValidateStringInput = parseAndValidateStringInput;\n//# sourceMappingURL=input-parsers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseJsonRpcType = void 0;\nconst input_parsers_1 = require(\"./input-parsers\");\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\nclass BaseJsonRpcType {\n    constructor(value) {\n        if (value == null) {\n            this.bufferValue = null;\n        }\n        else if (Buffer.isBuffer(value)) {\n            // empty buffer should be treated as null\n            this.bufferValue = value.length === 0 ? null : value;\n        }\n        else {\n            switch (typeof value) {\n                case \"string\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateStringInput)(value);\n                    break;\n                case \"number\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateNumberInput)(value);\n                    break;\n                case \"bigint\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateBigIntInput)(value);\n                    break;\n                default:\n                    throw new Error(`Cannot wrap a \"${typeof value}\" as a json-rpc type`);\n            }\n        }\n    }\n    // used to make console.log debugging a little easier\n    [inspect](_depth, _options) {\n        return `[${this.constructor.name}] ${this.toString()}`;\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        return `0x${this.bufferValue.toString(\"hex\")}`;\n    }\n    toBuffer() {\n        return this.bufferValue;\n    }\n    valueOf() {\n        return this.bufferValue;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    isNull() {\n        return this.bufferValue == null;\n    }\n}\nexports.BaseJsonRpcType = BaseJsonRpcType;\n//# sourceMappingURL=json-rpc-base-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Data = void 0;\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Data extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, _byteLength) {\n        super(value);\n        this._byteLength = _byteLength;\n        if (typeof value === \"bigint\") {\n            throw new Error(`Cannot create a ${typeof value} as a Data`);\n        }\n    }\n    toString(byteLength) {\n        const length = byteLength || this._byteLength;\n        if (this.bufferValue == null) {\n            return \"0x\";\n        }\n        if (length === undefined) {\n            return super.toString();\n        }\n        const strValue = this.bufferValue.toString(\"hex\");\n        return `0x${Data.stringToFixedByteLength(strValue, length)}`;\n    }\n    toBuffer(byteLength) {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const length = byteLength || this._byteLength;\n        if (length == undefined || length === this.bufferValue.length) {\n            return this.bufferValue;\n        }\n        return Data.bufferToFixedByteLength(this.bufferValue, length);\n    }\n    static from(value, byteLength) {\n        return new Data(value, byteLength);\n    }\n    static stringToFixedByteLength(value, byteLength) {\n        const desiredCharLength = byteLength * 2;\n        if (desiredCharLength === value.length) {\n            return value;\n        }\n        const padCharCount = desiredCharLength - value.length;\n        let fixedLengthValue;\n        if (padCharCount > 0) {\n            fixedLengthValue = \"0\".repeat(padCharCount) + value;\n        }\n        else {\n            fixedLengthValue = value.slice(0, desiredCharLength);\n        }\n        return fixedLengthValue;\n    }\n    static bufferToFixedByteLength(value, byteLength) {\n        if (byteLength === value.length) {\n            return value;\n        }\n        const fixedLengthValue = Buffer.allocUnsafe(byteLength);\n        const sourceStart = 0;\n        const targetStart = value.length > byteLength ? 0 : byteLength - value.length;\n        if (targetStart > 0) {\n            fixedLengthValue.fill(0, 0, targetStart);\n        }\n        value.copy(fixedLengthValue, targetStart, sourceStart, byteLength);\n        return fixedLengthValue;\n    }\n    static toBuffer(value, byteLength) {\n        return Data.from(value, byteLength).toBuffer();\n    }\n    static toString(value, byteLength) {\n        return Data.from(value, byteLength).toString();\n    }\n}\nexports.Data = Data;\nData.Empty = Data.from(constants_1.BUFFER_EMPTY);\n//# sourceMappingURL=json-rpc-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quantity = void 0;\nconst buffer_to_bigint_1 = require(\"../../utils/buffer-to-bigint\");\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Quantity extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, nullable) {\n        super(value);\n        this._nullable = false;\n        if (value === \"0x\") {\n            throw new Error('Cannot wrap \"0x\" as a json-rpc Quantity type; strings must contain at least one hexadecimal character.');\n        }\n        this._nullable = nullable;\n    }\n    static from(value, nullable = false) {\n        if (value instanceof Quantity)\n            return value;\n        return new Quantity(value, nullable);\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : Quantity.ZERO_VALUE_STRING;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        // bufferValue is empty, or contains only 0 bytes\n        if (firstNonZeroByte === this.bufferValue.length) {\n            return Quantity.ZERO_VALUE_STRING;\n        }\n        let value = this.bufferValue.toString(\"hex\", firstNonZeroByte);\n        // only need to check the first char, as we have already skipped 0 bytes in call to this.bufferValue.toString().\n        if (value[0] === \"0\") {\n            value = value.slice(1);\n        }\n        return `0x${value}`;\n    }\n    toBuffer() {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        if (firstNonZeroByte > 0) {\n            return this.bufferValue.subarray(firstNonZeroByte);\n        }\n        else {\n            return this.bufferValue;\n        }\n    }\n    toBigInt() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0n;\n        }\n        if (this.bufferValue.length === 0) {\n            return 0n;\n        }\n        return (0, buffer_to_bigint_1.bufferToBigInt)(this.bufferValue);\n    }\n    toNumber() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        const length = this.bufferValue.length - firstNonZeroByte;\n        if (length === 0) {\n            return 0;\n        }\n        let result;\n        // buffer.readUIntBE only supports up to 48 bits, so if larger then we need to convert to bigint first\n        if (length > 6) {\n            const trimmedBuffer = firstNonZeroByte === 0\n                ? this.bufferValue\n                : this.bufferValue.subarray(firstNonZeroByte);\n            result = Number((0, buffer_to_bigint_1.bufferToBigInt)(trimmedBuffer));\n            if (!Number.isSafeInteger(result)) {\n                console.warn(`0x${this.bufferValue.toString(\"hex\")} is too large - the maximum safe integer value is 0${Number.MAX_SAFE_INTEGER.toString(16)}`);\n            }\n        }\n        else {\n            result = this.bufferValue.readUIntBE(firstNonZeroByte, length);\n        }\n        return result;\n    }\n    valueOf() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        else {\n            return this.toBigInt();\n        }\n    }\n    findFirstNonZeroByteIndex() {\n        let firstNonZeroByte = 0;\n        for (firstNonZeroByte = 0; firstNonZeroByte < this.bufferValue.length; firstNonZeroByte++) {\n            if (this.bufferValue[firstNonZeroByte] !== 0)\n                break;\n        }\n        return firstNonZeroByte;\n    }\n    static toBuffer(value, nullable) {\n        return Quantity.from(value, nullable).toBuffer();\n    }\n    static toString(value, nullable) {\n        return Quantity.from(value, nullable).toString();\n    }\n    static toNumber(value, nullable) {\n        return Quantity.from(value, nullable).toNumber();\n    }\n    static toBigInt(value, nullable) {\n        return Quantity.from(value, nullable).toBigInt();\n    }\n}\nexports.Quantity = Quantity;\nQuantity.Empty = Quantity.from(constants_1.BUFFER_EMPTY, true);\nQuantity.Zero = Quantity.from(constants_1.BUFFER_ZERO);\nQuantity.One = Quantity.from(1);\nQuantity.Gwei = Quantity.from(1000000000);\nQuantity.ZERO_VALUE_STRING = \"0x0\";\nexports.default = Quantity;\n//# sourceMappingURL=json-rpc-quantity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcErrorCode = exports.makeError = exports.makeResponse = exports.makeRequest = void 0;\nconst jsonrpc = \"2.0\";\nconst makeRequest = (json) => {\n    return {\n        id: json.id,\n        jsonrpc,\n        method: json.method,\n        params: json.params\n    };\n};\nexports.makeRequest = makeRequest;\nconst makeResponse = (id, result) => {\n    return {\n        id,\n        jsonrpc,\n        result\n    };\n};\nexports.makeResponse = makeResponse;\nconst makeError = (id, error, result) => {\n    // Error objects are weird, `message` isn't included in the property names,\n    // so it is pulled out separately.\n    const details = { message: error.message };\n    Object.getOwnPropertyNames(error).forEach(name => {\n        if (typeof name === \"string\") {\n            details[name] = error[name];\n        }\n    });\n    if (typeof details.code !== \"number\") {\n        details.code = -32700; // JSON-RPC Parse error\n    }\n    if (result !== undefined) {\n        return {\n            id,\n            jsonrpc,\n            error: details,\n            result\n        };\n    }\n    else {\n        return {\n            id,\n            jsonrpc,\n            error: details\n        };\n    }\n};\nexports.makeError = makeError;\nvar JsonRpcErrorCode;\n(function (JsonRpcErrorCode) {\n    /**\n     * Invalid JSON was received by the server.\n     * An error occurred on the server while parsing the JSON text.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n    /**\n     * The JSON sent is not a valid Request object.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    /**\n     * The method does not exist / is not available.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    /**\n     * Invalid method parameter(s).\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    /**\n     * Internal JSON-RPC error.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\";\n    /**\n     * Missing or invalid parameters\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_INPUT\"] = -32000] = \"INVALID_INPUT\";\n    /**\n     * Transaction creation failed\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"TRANSACTION_REJECTED\"] = -32003] = \"TRANSACTION_REJECTED\";\n    /**\n     * \tMethod is not implemented\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_SUPPORTED\"] = -32004] = \"METHOD_NOT_SUPPORTED\";\n    /**\n     * \tRequest exceeds defined limit\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"LIMIT_EXCEEDED\"] = -32005] = \"LIMIT_EXCEEDED\";\n    /**\n     * Version of JSON-RPC protocol is not supported\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"JSON_RPC_VERSION_NOT_SUPPORTED\"] = -32006] = \"JSON_RPC_VERSION_NOT_SUPPORTED\";\n})(JsonRpcErrorCode = exports.JsonRpcErrorCode || (exports.JsonRpcErrorCode = {}));\n//# sourceMappingURL=jsonrpc.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar PromiEvent_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst emitteryMethods = [\n    \"clearListeners\",\n    \"once\",\n    \"on\",\n    \"emit\",\n    \"onAny\"\n];\n// A hack to fix Emittery's `mixin` type.\n// issue: https://github.com/sindresorhus/emittery/issues/79\nconst mixin = emittery_1.default.mixin.bind(emittery_1.default);\nlet PromiEvent = PromiEvent_1 = class PromiEvent extends Promise {\n    constructor(executor) {\n        super(executor);\n        /**\n         * Used to immediately clear all event listeners on the instance and prevent\n         * any additional binding or emission from the Emitter.\n         *\n         * Once disposed no listeners can be bound to this emitter.\n         *\n         * Note: `dispose` is pre-bound to the `this`, making it possible to pass the\n         * method around detached from it's context.\n         */\n        this.dispose = () => {\n            if (!this.clearListeners)\n                throw new Error(\"PromiEvent already disposed\");\n            this.clearListeners();\n            // Ensure that once disposed no listeners can be bound to this emitter.\n            const fn = () => {\n                throw new Error(\"PromiEvent bound after dispose\");\n            };\n            emitteryMethods\n                .filter(m => m !== \"emit\")\n                .forEach(methodName => {\n                Object.defineProperty(this, methodName, {\n                    enumerable: false,\n                    value: fn\n                });\n            });\n        };\n    }\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected - The callback to execute when the Promise is rejected.\n     * @returns A PromiEvent for the completion of the callback.\n     */\n    catch(onrejected) {\n        const prom = new PromiEvent_1((resolve, reject) => {\n            this.onAny((eventName, eventData) => {\n                return prom.emit(eventName, eventData);\n            });\n            const p = super.catch(onrejected);\n            p.then(resolve, reject);\n        });\n        return prom;\n    }\n    static resolve(value) {\n        return new PromiEvent_1(resolve => {\n            resolve(value);\n        });\n    }\n};\nPromiEvent = PromiEvent_1 = __decorate([\n    mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiEvent);\nexports.default = PromiEvent;\n//# sourceMappingURL=promievent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base implementation for an API.\n * All properties must be `async` callable or return a `Promise`\n */\nclass ApiBase {\n}\n//# sourceMappingURL=api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connector\"), exports);\n__exportStar(require(\"./provider\"), exports);\n__exportStar(require(\"./api\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigIntToBuffer = void 0;\nconst common_1 = require(\"../common\");\nconst constants_1 = require(\"./constants\");\nconst uint_to_buffer_1 = require(\"./uint-to-buffer\");\nconst allocUnsafe = Buffer.allocUnsafe;\nlet _bigIntToBuffer;\n/**\n * Returns the number of bytes contained in this given `value`.\n * @param value -\n */\nfunction bigIntByteLength(value) {\n    let length = 1;\n    while ((value >>= 8n))\n        length++;\n    return length;\n}\nconst MAX_SAFE_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\ntry {\n    // force fallback if only `toBufferBE` is missing (this can happen if toBufferBE isn't polyfilled for the browser,\n    // which, at the time of this writing... it isn't)\n    if (!common_1.toBufferBE)\n        throw new Error(\"Missing function `toBufferBE`!\");\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            const size = bigIntByteLength(value);\n            return (0, common_1.toBufferBE)(value, size);\n        }\n    };\n}\ncatch {\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            // if this value can be handled as a JS number safely, convert it that way\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            let length = bigIntByteLength(value);\n            const buf = allocUnsafe(length);\n            // process 1 byte at a time\n            do {\n                // truncate to right-most 32 bits and assign to buffer position `length`\n                buf[--length] = Number(value & 0xffffffffn);\n                // shift right-most byte off since we've used it\n                value >>= 8n;\n            } while (length);\n            return buf;\n        }\n    };\n}\n/**\n * Converts a bigint to a Buffer (Big Endian)\n */\nexports.bigIntToBuffer = _bigIntToBuffer;\n//# sourceMappingURL=bigint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToBigInt = void 0;\nconst bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\n/**\n * note: this doesn't handle negative values\n * @param value - Buffer representation of a bigint, most-significant bit first (Big-endian)\n */\nfunction bufferToBigInt(value) {\n    // Parsed as BE.\n    // This doesn't handle negative values. We may need to add logic to handle\n    // it because it is possible values returned from the VM could be negative\n    // and stored in a buffer.\n    const length = value.byteLength;\n    if (length === 0) {\n        return null;\n    }\n    // Buffers that are 6 bytes or less can be converted with built-in methods\n    if (length <= 6) {\n        return BigInt(value.readUIntBE(0, length));\n    }\n    let view;\n    // Buffers that are 7 bytes need to be padded to 8 bytes\n    if (length === 7) {\n        const padded = new Uint8Array(8);\n        // set byte 0 to 0, and bytes 1-8 to the value's 7 bytes:\n        padded.set(value, 1);\n        view = new DataView(padded.buffer);\n    }\n    else if (length === 8) {\n        view = new DataView(value.buffer, value.byteOffset, length);\n    }\n    else {\n        // TODO: toBigIntBE is a native lib with no pure JS fallback yet.\n        return (0, bigint_buffer_1.toBigIntBE)(value);\n    }\n    return view.getBigUint64(0);\n}\nexports.bufferToBigInt = bufferToBigInt;\n//# sourceMappingURL=buffer-to-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToMinHexKey = void 0;\nlet stringify;\nif (typeof Buffer.prototype.latin1Slice === \"function\") {\n    stringify = (buffer, start, end) => {\n        // this is just `buffer.toString(\"hex\")`, but it skips a bunch of checks\n        // that don't apply because our `start` and `end` just can't be out of\n        // bounds.\n        return buffer.hexSlice(start, end);\n    };\n}\nelse {\n    stringify = (buffer, start, end) => {\n        return buffer.slice(start, end).toString(\"hex\");\n    };\n}\n/**\n * Trims leading 0s from a buffer and returns a key representing the buffer's\n * trimmed value (`Buffer.from([0, 0, 12, 0])` => `1200`).\n *\n * @param buffer -\n */\nfunction bufferToMinHexKey(buffer) {\n    for (let i = 0, length = buffer.byteLength; i < length; i++) {\n        const value = buffer[i];\n        // once we find a non-zero value take the rest of the buffer as the key\n        if (value !== 0) {\n            if (i + 1 === length) {\n                // use a lookup table for single character lookups\n                return HEX_MAP[value];\n            }\n            else {\n                return stringify(buffer, i, length);\n            }\n        }\n    }\n    return \"\";\n}\nexports.bufferToMinHexKey = bufferToMinHexKey;\nconst HEX_MAP = [\n    \"00\",\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"0a\",\n    \"0b\",\n    \"0c\",\n    \"0d\",\n    \"0e\",\n    \"0f\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"1a\",\n    \"1b\",\n    \"1c\",\n    \"1d\",\n    \"1e\",\n    \"1f\",\n    \"20\",\n    \"21\",\n    \"22\",\n    \"23\",\n    \"24\",\n    \"25\",\n    \"26\",\n    \"27\",\n    \"28\",\n    \"29\",\n    \"2a\",\n    \"2b\",\n    \"2c\",\n    \"2d\",\n    \"2e\",\n    \"2f\",\n    \"30\",\n    \"31\",\n    \"32\",\n    \"33\",\n    \"34\",\n    \"35\",\n    \"36\",\n    \"37\",\n    \"38\",\n    \"39\",\n    \"3a\",\n    \"3b\",\n    \"3c\",\n    \"3d\",\n    \"3e\",\n    \"3f\",\n    \"40\",\n    \"41\",\n    \"42\",\n    \"43\",\n    \"44\",\n    \"45\",\n    \"46\",\n    \"47\",\n    \"48\",\n    \"49\",\n    \"4a\",\n    \"4b\",\n    \"4c\",\n    \"4d\",\n    \"4e\",\n    \"4f\",\n    \"50\",\n    \"51\",\n    \"52\",\n    \"53\",\n    \"54\",\n    \"55\",\n    \"56\",\n    \"57\",\n    \"58\",\n    \"59\",\n    \"5a\",\n    \"5b\",\n    \"5c\",\n    \"5d\",\n    \"5e\",\n    \"5f\",\n    \"60\",\n    \"61\",\n    \"62\",\n    \"63\",\n    \"64\",\n    \"65\",\n    \"66\",\n    \"67\",\n    \"68\",\n    \"69\",\n    \"6a\",\n    \"6b\",\n    \"6c\",\n    \"6d\",\n    \"6e\",\n    \"6f\",\n    \"70\",\n    \"71\",\n    \"72\",\n    \"73\",\n    \"74\",\n    \"75\",\n    \"76\",\n    \"77\",\n    \"78\",\n    \"79\",\n    \"7a\",\n    \"7b\",\n    \"7c\",\n    \"7d\",\n    \"7e\",\n    \"7f\",\n    \"80\",\n    \"81\",\n    \"82\",\n    \"83\",\n    \"84\",\n    \"85\",\n    \"86\",\n    \"87\",\n    \"88\",\n    \"89\",\n    \"8a\",\n    \"8b\",\n    \"8c\",\n    \"8d\",\n    \"8e\",\n    \"8f\",\n    \"90\",\n    \"91\",\n    \"92\",\n    \"93\",\n    \"94\",\n    \"95\",\n    \"96\",\n    \"97\",\n    \"98\",\n    \"99\",\n    \"9a\",\n    \"9b\",\n    \"9c\",\n    \"9d\",\n    \"9e\",\n    \"9f\",\n    \"a0\",\n    \"a1\",\n    \"a2\",\n    \"a3\",\n    \"a4\",\n    \"a5\",\n    \"a6\",\n    \"a7\",\n    \"a8\",\n    \"a9\",\n    \"aa\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"ae\",\n    \"af\",\n    \"b0\",\n    \"b1\",\n    \"b2\",\n    \"b3\",\n    \"b4\",\n    \"b5\",\n    \"b6\",\n    \"b7\",\n    \"b8\",\n    \"b9\",\n    \"ba\",\n    \"bb\",\n    \"bc\",\n    \"bd\",\n    \"be\",\n    \"bf\",\n    \"c0\",\n    \"c1\",\n    \"c2\",\n    \"c3\",\n    \"c4\",\n    \"c5\",\n    \"c6\",\n    \"c7\",\n    \"c8\",\n    \"c9\",\n    \"ca\",\n    \"cb\",\n    \"cc\",\n    \"cd\",\n    \"ce\",\n    \"cf\",\n    \"d0\",\n    \"d1\",\n    \"d2\",\n    \"d3\",\n    \"d4\",\n    \"d5\",\n    \"d6\",\n    \"d7\",\n    \"d8\",\n    \"d9\",\n    \"da\",\n    \"db\",\n    \"dc\",\n    \"dd\",\n    \"de\",\n    \"df\",\n    \"e0\",\n    \"e1\",\n    \"e2\",\n    \"e3\",\n    \"e4\",\n    \"e5\",\n    \"e6\",\n    \"e7\",\n    \"e8\",\n    \"e9\",\n    \"ea\",\n    \"eb\",\n    \"ec\",\n    \"ed\",\n    \"ee\",\n    \"ef\",\n    \"f0\",\n    \"f1\",\n    \"f2\",\n    \"f3\",\n    \"f4\",\n    \"f5\",\n    \"f6\",\n    \"f7\",\n    \"f8\",\n    \"f9\",\n    \"fa\",\n    \"fb\",\n    \"fc\",\n    \"fd\",\n    \"fe\",\n    \"ff\"\n];\n//# sourceMappingURL=buffer-to-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KNOWN_CHAINIDS = exports.WEI = exports.BUFFER_8_ZERO = exports.BUFFER_32_ZERO = exports.BUFFER_ZERO = exports.BUFFER_EMPTY = exports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO = void 0;\nexports.BUFFER_256_ZERO = Buffer.allocUnsafe(256).fill(0);\nexports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO.slice(0, 20);\nexports.BUFFER_EMPTY = Buffer.allocUnsafe(0);\nexports.BUFFER_ZERO = exports.BUFFER_256_ZERO.slice(0, 1);\nexports.BUFFER_32_ZERO = exports.BUFFER_256_ZERO.slice(0, 32);\nexports.BUFFER_8_ZERO = exports.BUFFER_256_ZERO.slice(0, 8);\nexports.WEI = 1000000000000000000n;\nexports.KNOWN_CHAINIDS = new Set([1, 3, 4, 5, 42, 11155111]);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Executor_requestCoordinator;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Executor = void 0;\nconst has_own_1 = require(\"./has-own\");\nclass Executor {\n    /**\n     * The Executor handles execution of methods on the given API\n     */\n    constructor(requestCoordinator) {\n        _Executor_requestCoordinator.set(this, void 0);\n        __classPrivateFieldSet(this, _Executor_requestCoordinator, requestCoordinator, \"f\");\n    }\n    /**\n     * Stop processing requests. We pass this call through to the requestCoordinator, which means that api\n     * validation will continue to work after calling stop() in execute().\n     */\n    stop() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").stop();\n    }\n    /**\n     * Finalise shutdown of the underlying RequestCoordinator.\n     */\n    end() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").end();\n    }\n    /**\n     * Executes the method with the given methodName on the API\n     * @param methodName - The name of the JSON-RPC method to execute.\n     * @param params - The params to pass to the JSON-RPC method.\n     */\n    execute(api, methodName, params) {\n        // The methodName is user-entered data and can be all sorts of weird hackery\n        // Make sure we only accept what we expect to avoid headache and heartache\n        if (typeof methodName === \"string\") {\n            // Only allow executing our *own* methods. We allow:\n            //  * functions added to the Instance by the class, e.g.,\n            //      class SomeClass {\n            //        method = () => {} // api.hasOwnProperty(\"method\") === true\n            //      }\n            //  * Or by the class' prototype:\n            //      class SomeClass {\n            //        method(){} // api.__proto__.hasOwnProperty(\"method\") === true\n            //      }\n            if (((0, has_own_1.hasOwn)(api.__proto__, methodName) && methodName !== \"constructor\") ||\n                (0, has_own_1.hasOwn)(api, methodName)) {\n                // cast methodName from `KnownKeys<T> & string` back to KnownKeys<T> so our return type isn't weird.\n                const fn = api[methodName];\n                // just double check, in case a API breaks the rules and adds non-fns\n                // to their API interface.\n                if (typeof fn === \"function\") {\n                    // The function referenced by requestcoordinator.queue will be changed\n                    // when requestCoordinator.stop() is called. Ensure that no references\n                    // to the function are held, otherwise internal errors may be\n                    // surfaced.\n                    // queue up this method for actual execution:\n                    return __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").queue(fn, api, params);\n                }\n            }\n        }\n        throw new Error(`The method ${String(methodName)} does not exist/is not available`);\n    }\n}\nexports.Executor = Executor;\n_Executor_requestCoordinator = new WeakMap();\n//# sourceMappingURL=executor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findInsertPosition = void 0;\n/**\n * AKA `upper_bound`\n *\n * The elements are compared using `comp`. The elements in the range must\n * already be sorted according to this same criterion (`comp`), or at least\n * partitioned with respect to val.\n *\n * The function optimizes the number of comparisons performed by comparing\n * non-consecutive elements of the sorted range.\n *\n * The index into the `array` returned by this function will always be greater than\n * the index of the last-occurrence of `val`.\n *\n * On average, logarithmic in the distance of the length of the array: Performs\n * approximately `log2(N)+1` element comparisons (where `N` is this length).\n *\n * @param array -\n * @param val - Value of the upper bound to search for in the range.\n * @param comp - A function that accepts two arguments (the first is always\n * `val`, and the second from the given `array`) and returns bool. The value\n * returned indicates whether the first argument is considered to go before the\n * second.\n *\n * @returns The index to the upper bound position for `val` in the range. If no\n * element in the range compares greater than `val`, the function returns\n * `array.length`.\n */\nfunction findInsertPosition(array, val, comp) {\n    // `count` tracks the number of elements that remain to be searched\n    let count = array.length;\n    // `insertPosition` tracks the best insert position for the element we know\n    // about _so far_\n    let insertPosition = 0;\n    // `offset` tracks the start position of the elements that remain to be\n    // searched\n    let offset = 0;\n    while (count > 0) {\n        // find the middle element between `offset` and `count`\n        const step = (count / 2) | 0; // ()`| 0` rounds towards 0)\n        offset += step;\n        // compare our val to the \"middle element\" (`array[offset]`)\n        if (!comp(val, array[offset])) {\n            // `val` should come _after_ the element at `array[offset]`.\n            //  * update our `insertPosition` to the index immediately after\n            //    `array[offset]`\n            //  * shrink our search range\n            // This narrows our search the elements to the right of `array[offset]`.\n            insertPosition = ++offset;\n            count -= step + 1;\n        }\n        else {\n            // `val` should come before the element at `array[offset]`:\n            // This narrows the search the elements to the left of `array[offset]`.\n            count = step;\n            offset = insertPosition;\n        }\n    }\n    return insertPosition;\n}\nexports.findInsertPosition = findInsertPosition;\n//# sourceMappingURL=find-insert-position.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOwn = void 0;\nconst _hasOwn = {}.hasOwnProperty.call.bind({}.hasOwnProperty);\n/**\n * /**\n * Determines whether an object has a property with the specified name.\n *\n * Safe for use on user-supplied data.\n *\n * @param obj - The object that will be checked.\n * @param prop - A property name.\n * @returns `true` if the object has a property with the specified name,\n * otherwise `false`.\n */\nconst hasOwn = (obj, prop) => {\n    return obj != null && _hasOwn(obj, prop);\n};\nexports.hasOwn = hasOwn;\n//# sourceMappingURL=has-own.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heap = void 0;\nclass Heap {\n    /**\n     * Creates a priority-queue heap where the highest priority element,\n     * as determined by the `less` function, is at the tip/root of the heap.\n     * To read the highest priority element without removing it call peek(). To\n     * read and remove the element call `shift()`\n     * @param less - the comparator function\n     * @param refresher - the refresher function\n     */\n    constructor(less, refresher) {\n        this.length = 0;\n        this.array = [];\n        this.less = less;\n        this.refresher = refresher;\n    }\n    init(array) {\n        this.array = array;\n        const length = (this.length = array.length);\n        for (let i = ((length / 2) | 0) - 1; i >= 0;) {\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    refresh(context) {\n        const length = this.length;\n        const mid = (length / 2) | 0;\n        for (let i = mid; i < length; i++) {\n            this.refresher(this.array[i], context);\n        }\n        for (let i = mid - 1; i >= 0;) {\n            this.refresher(this.array[i], context);\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Pushes a new element onto the heap\n     * @param value -\n     */\n    push(value) {\n        const i = this.length++;\n        this.array[i] = value;\n        this.up(i);\n    }\n    size() {\n        return this.length;\n    }\n    /**\n     * Return the current best element. Does not remove it\n     */\n    peek() {\n        return this.array[0];\n    }\n    clear() {\n        this.length = this.array.length = 0;\n    }\n    /**\n     * Removes and returns the element with the highest priority from the heap.\n     * The complexity is O(log n) where n = this.size().\n     * @returns the element with the highest priority. returns `undefined` if\n     * there are no more elements in the heap.\n     */\n    shift() {\n        const length = this.length;\n        // if we are empty or about to be empty...\n        if (length <= 1) {\n            if (length === 0)\n                return;\n            const element = this.array[0];\n            // finally, clear the array\n            this.clear();\n            return element;\n        }\n        // otherwise...\n        // remember the best element\n        const array = this.array;\n        const best = array[0];\n        const newLength = (this.length = length - 1);\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return best;\n    }\n    /**\n     * Removes the highest priority element from the queue, replacing it with\n     * the new element. This is equivalent to, but faster than, calling\n     * `replace(0, newValue);`.\n     * If you call this on an empty heap (`this.size() === 0`) you may find\n     * unexpected behavior.\n     * @param newValue -\n     */\n    replaceBest(newValue) {\n        this.array[0] = newValue;\n        this.down(0, this.length);\n    }\n    /**\n     * Replaces the element at position `i` with the `newValue`. If the element at\n     * position `i` doesn't exist, or if `i < 0` or `i > this.size()` you may\n     * find unexpected behavior.\n     * @param i -\n     * @param newValue -\n     */\n    replace(i, newValue) {\n        this.array[i] = newValue;\n        this.fix(i);\n    }\n    /**\n     * Removes the element at position `i`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i - the element to remove\n     */\n    remove(i) {\n        const newLength = --this.length;\n        if (newLength !== i) {\n            this.swap(i, newLength);\n            if (!this.down(i, newLength)) {\n                this.up(i);\n            }\n        }\n    }\n    /**\n     * Removes the element with the highest priority from the heap\n     * The complexity is O(log n) where n = this.size().\n     * @returns `true` when there are more elements in the queue, `false` when the\n     * last element was just removed. Calling `removeBest` when there are no more\n     * elements in the queue will return `true`. So don't do that.\n     */\n    removeBest() {\n        const array = this.array;\n        const length = this.length;\n        if (length === 1) {\n            // finally, clear the array\n            this.length = array.length = 0;\n            return false;\n        }\n        const newLength = --this.length;\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return true;\n    }\n    /**\n     * Re-establishes the heap ordering after the element at index `i` changes\n     * its value. Changing the value of the element at index `i` and then\n     * calling fix is equivalent to, but faster than, calling\n     * `remove(i); push(newValue);`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i -\n     */\n    fix(i) {\n        if (!this.down(i, this.length)) {\n            this.up(i);\n        }\n    }\n    up(j) {\n        const less = this.less.bind(null, this.array);\n        for (let i; (i = ((j - 1) / 2) | 0), i !== j && less(j, i); j = i) {\n            this.swap(i, j);\n        }\n    }\n    down(i0, l) {\n        const less = this.less.bind(null, this.array);\n        let i = i0;\n        for (let j1; (j1 = 2 * i + 1) < l;) {\n            let j = j1; // left child\n            let j2 = j1 + 1;\n            if (j2 < l && less(j2, j1)) {\n                j = j2; // = 2 * i + 2  // right child\n            }\n            if (!less(j, i)) {\n                break;\n            }\n            this.swap(i, j);\n            i = j;\n        }\n        return i > i0;\n    }\n    /**\n     * Swaps the elements in the heap\n     * @param i - The first element\n     * @param j - The second element\n     */\n    swap(i, j) {\n        const array = this.array;\n        const first = array[i];\n        array[i] = array[j];\n        array[j] = first;\n    }\n    /**\n     * Heap initialization helper for when you only know of a single item for the\n     * heap.\n     * @param item -\n     * @param less -\n     * @param refresher -\n     */\n    static from(item, less, refresher) {\n        const heap = new Heap(less, refresher);\n        heap.array = [item];\n        heap.length = 1;\n        return heap;\n    }\n}\nexports.Heap = Heap;\n//# sourceMappingURL=heap.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bigint-to-buffer\"), exports);\n__exportStar(require(\"./buffer-to-bigint\"), exports);\n__exportStar(require(\"./executor\"), exports);\n__exportStar(require(\"./heap\"), exports);\n__exportStar(require(\"./request-coordinator\"), exports);\n__exportStar(require(\"./unref\"), exports);\n__exportStar(require(\"./has-own\"), exports);\n__exportStar(require(\"./uint-to-buffer\"), exports);\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./buffer-to-key\"), exports);\n__exportStar(require(\"./keccak\"), exports);\n__exportStar(require(\"./find-insert-position\"), exports);\n__exportStar(require(\"./random-number-generator\"), exports);\n__exportStar(require(\"./min-max\"), exports);\n__exportStar(require(\"./signature\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak = void 0;\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst RATE = 1088;\nconst CAPACITY = 512;\nconst instance = (0, keccak_1.default)(\"keccak256\");\n/**\n * keccak256, but faster if you use it a lot.\n * @param buffer -\n */\nfunction keccak(buffer) {\n    instance._state.absorb(buffer);\n    const digest = instance._state.squeeze(32);\n    // reset and remove result from memory\n    instance._state.initialize(RATE, CAPACITY);\n    // make this re-usable\n    instance._finalized = false;\n    return digest;\n}\nexports.keccak = keccak;\n//# sourceMappingURL=keccak.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.min = exports.max = void 0;\n/**\n * Returns the largest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the largest value will be selected and returned.\n */\nconst max = (...numbers) => numbers.reduce((acc, next) => (next > acc ? next : acc));\nexports.max = max;\n/**\n * Returns the smallest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the smallest value will be selected and returned.\n */\nconst min = (...numbers) => numbers.reduce((acc, next) => (next < acc ? next : acc));\nexports.min = min;\n//# sourceMappingURL=min-max.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomNumberGenerator = void 0;\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nclass RandomNumberGenerator {\n    // I was planning on using `state` here to restore the RNG\n    // from a saved state (via the db on run or upon a revert),\n    // but this functionality was postponed. I'm keeping the arg\n    // here as it still applies and is valid code.\n    // https://github.com/trufflesuite/ganache/issues/756\n    constructor(seed, state) {\n        if (typeof seed === \"string\" && typeof state === \"undefined\") {\n            this.rng = seedrandom_1.default.alea(seed, { state: true });\n        }\n        else if (typeof state === \"object\") {\n            // We can ignore seed even if it was provided.\n            // The user is reseeding the rng from a prior state,\n            // so let's initialize accordingly\n            this.rng = seedrandom_1.default.alea(\"\", { state });\n        }\n        else {\n            const entropy = Math.random() * Date.now();\n            this.rng = seedrandom_1.default.alea(`${entropy}`, { state: true });\n        }\n    }\n    getNumber(upperExclusiveBound = 1) {\n        // I believe this check may be a tiny bit faster than\n        // always multiplying by 1\n        if (upperExclusiveBound !== 1) {\n            return this.rng() * upperExclusiveBound;\n        }\n        else {\n            return this.rng();\n        }\n    }\n    getNumbers(length, upperExclusiveBound = 1) {\n        const numbers = [];\n        for (let i = 0; i < length; i++) {\n            numbers.push(this.getNumber(upperExclusiveBound));\n        }\n        return numbers;\n    }\n    getBuffer(length) {\n        return Buffer.from(this.getNumbers(length, 256));\n    }\n    state() {\n        return this.rng.state();\n    }\n}\nexports.RandomNumberGenerator = RandomNumberGenerator;\n//# sourceMappingURL=random-number-generator.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RequestCoordinator_paused, _RequestCoordinator_process;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestCoordinator = void 0;\nconst noop = () => { };\n/**\n * Responsible for managing global concurrent requests.\n */\nclass RequestCoordinator {\n    /**\n     * Promise-based FIFO queue.\n     * @param limit - The number of requests that can be processed at a time.\n     * Default value is is no limit (`0`).\n     */\n    constructor(limit) {\n        /**\n         * The pending requests. You can't do anything with this array.\n         */\n        this.pending = [];\n        /**\n         * The number of tasks currently being processed.\n         */\n        this.runningTasks = 0;\n        _RequestCoordinator_paused.set(this, true);\n        /**\n         * Pause processing. This will *not* cancel any promises that are currently\n         * running.\n         */\n        this.pause = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, true, \"f\");\n        };\n        /**\n         * Resume processing.\n         */\n        this.resume = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, false, \"f\");\n            __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n        };\n        _RequestCoordinator_process.set(this, () => {\n            // if we aren't paused and the number of things we're processing is under\n            // our limit and we have things to process: do it!\n            while (!this.paused &&\n                this.pending.length > 0 &&\n                (!this.limit || this.runningTasks < this.limit)) {\n                const current = this.pending.shift();\n                this.runningTasks++;\n                current\n                    .execute()\n                    // By now, we've resolved the fn's `value` by sending it to the parent scope.\n                    // But over here, we're also waiting for this fn's _value_ to settle _itself_ (it might be a promise) before\n                    // continuing through the `pending` queue. Because we wait for it again here, it could potentially throw here,\n                    // in which case we just need to catch it and throw the result away. We could probably use\n                    // `Promise.allSettled([current()]).finally` to do this instead of the `current().catch(noop).finally`. /shrug\n                    .catch(noop)\n                    .finally(() => {\n                    this.runningTasks--;\n                    __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n                });\n            }\n        });\n        /**\n         * Insert a new function into the queue.\n         */\n        this.queue = (fn, thisArgument, argumentsList) => {\n            return new Promise((resolve, reject) => {\n                // const execute is `async` to force the return value into a Promise.\n                const execute = async () => {\n                    try {\n                        const value = Reflect.apply(fn, thisArgument, argumentsList || []);\n                        resolve({ value });\n                        return value;\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                };\n                this.pending.push({ execute, reject });\n                __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n            });\n        };\n        this.limit = limit;\n    }\n    get paused() {\n        return __classPrivateFieldGet(this, _RequestCoordinator_paused, \"f\");\n    }\n    /**\n     * Stop processing tasks - calls to queue(), and resume() will reject with an\n     * error indicating that Ganache is disconnected. This is an irreversible\n     * action. If you wish to be able to resume processing, use pause() instead.\n     *\n     * Note: this changes the references of this.resume and this.queue. Any code\n     * that maintains references to the values referenced by this.resume or\n     * this.queue, could have unintended consequences after calling this.stop().\n     */\n    stop() {\n        this.pause();\n        this.resume = () => {\n            throw new Error(\"Cannot resume processing requests, Ganache is disconnected.\");\n        };\n        this.queue = async () => {\n            throw new Error(\"Cannot process request, Ganache is disconnected.\");\n        };\n    }\n    /**\n     * Finalise shutdown of the RequestCoordinator. Rejects all pending tasks in order. Should be\n     * called after all in-flight tasks have resolved in order to maintain overall FIFO order.\n     */\n    end() {\n        while (this.pending.length > 0) {\n            this.pending\n                .shift()\n                .reject(new Error(\"Cannot process request, Ganache is disconnected.\"));\n        }\n    }\n}\nexports.RequestCoordinator = RequestCoordinator;\n_RequestCoordinator_paused = new WeakMap(), _RequestCoordinator_process = new WeakMap();\n//# sourceMappingURL=request-coordinator.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecsignLegacy = exports.ecsign = void 0;\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nfunction ecsign(msgHash, privateKey) {\n    const output = {\n        signature: new Uint8Array(64),\n        recid: null\n    };\n    const status = secp256k1_1.default.ecdsaSign(output, msgHash, privateKey);\n    if (status !== 0) {\n        throw new Error(\"The nonce generation function failed, or the private key was invalid\");\n    }\n    const { signature, recid } = output;\n    const buffer = signature.buffer;\n    const r = Buffer.from(buffer, 0, 32);\n    const s = Buffer.from(buffer, 32, 32);\n    const v = BigInt(recid);\n    return { r, s, v };\n}\nexports.ecsign = ecsign;\nfunction ecsignLegacy(msgHash, privateKey, chainId) {\n    const { v, r, s } = ecsign(msgHash, privateKey);\n    const legacyV = chainId === undefined ? v + 27n : v + 35n + BigInt(chainId) * 2n;\n    return { r, s, v: legacyV };\n}\nexports.ecsignLegacy = ecsignLegacy;\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uintToBuffer = void 0;\nconst MAX_UINT32 = 0xffffffff;\n/**\n * This is just Node's `Buffer.allocUnsafe`. I'm documenting it extra here to\n * draw attention to it. It is much faster the `Buffer.alloc(size)` because it\n * doesn't initialize its memory first. It's safe for us to use below because we\n * guarantee that we will fill every octet ourselves.\n *\n * Allocates a new buffer of {size} octets, leaving memory not initialized, so\n * the contents of the newly created Buffer are unknown and may contain\n * sensitive data.\n *\n * @param {number} - size count of octets to allocate\n */\nconst allocUnsafe = Buffer.allocUnsafe;\n/**\n * Converts positive whole numbers that are 32 bits of fewer to a Buffer. Any\n * more bits and who knows what will happen!?!1?!\n *\n * @param num - A positive whole number less than 33 bits wide, i.e. a uint32.\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uint32ToBuf(num) {\n    let buf;\n    /** `lsb` holds the Least Significant *byte* of `num`. It *technically* holds\n     * all of `num`'s bytes but because of how UInt8Arrays (and thus Buffers)\n     * work, only the least significant byte of each value gets used. */\n    const lsb = num;\n    // shift the first 8 least significant bits off current num, if it's non-zero\n    // our value contains at least 2 bytes!\n    if ((num >>>= 8)) {\n        /** `second` now holds the second most least significant byte in its\n         * \"first\" (right most) 8 bits */\n        const second = num;\n        // shift the next 8 least significant bits off current num, if it's non-zero\n        // our value contains at least 3 bytes!\n        if ((num >>>= 8)) {\n            /** `third` now holds the third most least significant byte in its\n             * \"first\" (right most) 8 bits */\n            const third = num;\n            if ((num >>>= 8)) {\n                // since we have all 4 bytes, create a 4 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(4);\n                // `num` here is just what is left after shifting off the 3 other bytes\n                // like we did above\n                buf[0] = num;\n                buf[1] = third;\n                buf[2] = second;\n                buf[3] = lsb;\n            }\n            else {\n                // since we only have 3 bytes, create a 3 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(3);\n                buf[0] = third;\n                buf[1] = second;\n                buf[2] = lsb;\n            }\n        }\n        else {\n            // since we only have 2 bytes, create a 2 byte Buffer and fill it with\n            // our values!\n            buf = allocUnsafe(2);\n            buf[0] = second;\n            buf[1] = lsb;\n        }\n    }\n    else {\n        // We only have 1 byte, create a 1 byte Buffer and fill it with our only\n        // value, lsb!\n        buf = allocUnsafe(1);\n        buf[0] = lsb;\n    }\n    // finally, return our optimally-sized Buffer!\n    return buf;\n}\n/**\n * Converts positive whole numbers less than or equal to\n * `Number.MAX_SAFE_INTEGER` to a Buffer. If your value is less than 2**32 you\n * should use `uint32ToBuf` instead.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uintWideToBuf(num) {\n    // This function is similar to `uint32ToBuf`, but splits the number into its\n    // 32 lowest bits and its 32 highest bits. We have to do this because numeric\n    // Bitwise operations can only operate on 32 bit-wide values.\n    // There are some differences, but if you first grasp `uint32ToBuf`, you can\n    // handle this just fine.\n    let buf;\n    /** If we are in this function we are probably > 32 bits wide, so we need to\n     * first convert this value to BigInt in order to shift off those high bits.\n     * Now that I'm documenting this, we could probably just subtract `2**32` from\n     * `num` to avoid the conversion overhead (BigInts are slower than numbers) */\n    let hi = Number(BigInt(num) >> 32n);\n    const hiLsb = hi;\n    let offset = 0;\n    // the high bits determine the size of the Buffer, so we compute the high bits\n    // first\n    if ((hi >>>= 8)) {\n        const six = hi;\n        if ((hi >>>= 8)) {\n            const five = hi;\n            if ((hi >>>= 8)) {\n                buf = allocUnsafe(8);\n                buf[0] = hi; // msb\n                buf[1] = five;\n                buf[2] = six;\n                buf[3] = hiLsb;\n                offset = 7;\n            }\n            else {\n                buf = allocUnsafe(7);\n                buf[0] = five; // msb\n                buf[1] = six;\n                buf[2] = hiLsb;\n                offset = 6;\n            }\n        }\n        else {\n            buf = allocUnsafe(6);\n            buf[0] = six; // msb\n            buf[1] = hiLsb;\n            offset = 5;\n        }\n    }\n    else {\n        buf = allocUnsafe(5);\n        buf[0] = hiLsb; // msb\n        offset = 4;\n    }\n    // set the low bytes:\n    let lo = num & MAX_UINT32;\n    const lsb = lo;\n    if ((lo >>>= 8)) {\n        const two = lo;\n        if ((lo >>>= 8)) {\n            const one = lo;\n            buf[offset - 3] = lo >>>= 8;\n            buf[offset - 2] = one;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n        else {\n            buf[offset - 3] = 0;\n            buf[offset - 2] = 0;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n    }\n    else {\n        buf[offset - 3] = 0;\n        buf[offset - 2] = 0;\n        buf[offset - 1] = 0;\n        buf[offset] = lsb;\n    }\n    return buf;\n}\n/**\n * Converts a JavaScript number, treated as a Whole Number (0, 1, 2, 3, 4, ...)\n * less than 64 bits wide, to a Buffer.\n *\n * Numbers that are negative, fractional, or greater than 64 bits wide will\n * return very unexpected results. Numbers that are greater than\n * `Number.MAX_SAFE_INTEGER` will return unexpected results.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n */\nfunction uintToBuffer(num) {\n    return num > MAX_UINT32 ? uintWideToBuf(num) : uint32ToBuf(num);\n}\nexports.uintToBuffer = uintToBuffer;\n//# sourceMappingURL=uint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unref = void 0;\n/**\n * In node, calling `unref(timer)` on a running timer ensures that the timer\n * does not require that the Node.js event remain active. If there is no other\n * activity keeping the event loop running, the process may exit before the\n * timer's callback is invoked.\n * @param timer -\n * @returns `true` if the timer could be `unref`ed, otherwise returns `false`\n */\nfunction unref(timer) {\n    if (typeof timer === \"object\" && typeof timer.unref === \"function\") {\n        timer.unref();\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.unref = unref;\n//# sourceMappingURL=unref.js.map"],"names":["Object","defineProperty","exports","value","Address","util_1","utils_1","constructor","super","static","Data","toBuffer","ByteLength","from","toString","toJSON","this","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","BlockParams","INITIAL_BASE_FEE_PER_GAS","ELASTICITY","BASE_FEE_MAX_CHANGE_DENOMINATOR","Block","ethereum_transaction_1","rlp_1","runtime_block_1","utils_2","block_params_1","serialized","common","_common","deserialized","decode","_raw","_rawTransactions","totalDifficulty","header","makeHeader","_rawTransactionMetaData","_size","Quantity","toNumber","hash","_hash","keccak","encode","getTransactions","map","raw","index","extra","number","TransactionFactory","fromDatabaseTx","includeFullTransactions","txFn","getTxFn","hashBuffer","jsonTxs","tx","updateEffectiveGasPrice","baseFeePerGas","size","transactions","uncles","include","rawHeader","txs","extraTxs","block","parentHeader","nextBaseFee","parentGasTarget","gasLimit","toBigInt","parentGasUsed","gasUsed","adjustedFeeDelta","blocks","maxPossibleBaseFee","calcNextBaseFeeBigInt","parentBlock","RuntimeBlock","getBlockSize","serialize_1","ethereum_address_1","block_1","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","timestamp","extraData","mixHash","nonce","length","coinbase","previousBlockTotalDifficulty","serializeBaseFeePerGas","coinbaseBuffer","prevRandao","finalize","transactionsTrie","receiptTrie","bloom","storageKeys","KECCAK256_RLP_ARRAY","buf","BUFFER_EMPTY","BUFFER_8_ZERO","forEach","push","serialize","serializedStart","encodeRange","serializedLength","encodeLength","middle","ending","uintToBuffer","digest","output","maybeGetLogs","maybe_get_logs_1","Handlers","bytes","address","bool","string","uint256","int256","fixedBytes","WORD_SIZE","OR_WITH_TWOS_COMPLEMENT","getDynamicDataMarkers","memory","offset","startUint32MemoryPosition","start","readUInt32BE","end","handleBytes","twosComplementBuffer","subarray","twosComplementBigInt","bufferToBigInt","handlers_1","signatures_1","CONSOLE_ADDRESS","event","opcode","name","stack","memoryLength","memoryOffset","toAddress","slice","memoryStart","Number","memoryEnd","method","handlers","signatureMap","values","handler","Map","_EthereumApi_getId","_EthereumApi_filters","_EthereumApi_subscriptions","_EthereumApi_options","_EthereumApi_blockchain","_EthereumApi_wallet","__decorate","decorators","target","key","d","c","arguments","r","Reflect","decorate","i","__classPrivateFieldSet","receiver","state","kind","f","TypeError","has","set","__classPrivateFieldGet","__importDefault","mod","ethereum_utils_1","ethereum_block_1","eth_sig_util_1","wallet_1","gas_estimator_1","assert_arg_length_1","filter_parsing_1","miner_1","async","autofillDefaultTransactionValues","eth_estimateGas","eth_maxPriorityFeePerGas","transaction","blockchain","options","gas","isNull","defaultLimit","defaultTransactionGasLimit","Empty","Tag","latest","gasPrice","defaultGasPrice","maxFeePerGas","calcNBlocksMaxBaseFee","maxPriorityFeePerGas","version","CLIENT_VERSION","PROTOCOL_VERSION","RPC_MODULES","eth","net","rpc","web3","evm","personal","assertExceptionalTransactions","errors","baseError","data","execException","VM_EXCEPTIONS","VM_EXCEPTION","message","err","Error","join","EthereumApi","wallet","id","dbName","arg","vmErrorsOnRPCResponse","chain","mine","Capacity","FillBlock","vmAddress","eei","vm","account","getAccount","checkpoint","putAccount","commit","balance","code","codeBuffer","putContractCode","codeHash","KECCAK256_NULL","slot","slotBuffer","valueBuffer","putContractStorage","seconds","milliseconds","Math","floor","increaseTime","time","getTime","offsetMilliseconds","setTimeDiff","snapshotId","revert","snapshot","passphrase","addy","addUnknownAccount","removeKnownAccount","threads","instamine","resumption","resume","pause","networkId","Zero","blockNumber","generateVM","createVmFromStateTrie","trie","copy","allowUnlimitedContractSize","Promise","resolve","reject","fromRpc","callGasLimit","getMixHash","runArgs","toVmTransaction","skipBalance","skipNonce","default","result","gasEstimate","catch","_","fallback","targetBlock","slotBuffers","slotHex","stateManagerCopy","stateManager","setStateRoot","proof","getProof","storageHash","accountProof","storageProof","getByHash","blockNum","getEffectiveNumber","rawBlock","getRawByBlockNumber","rawTransactions","getNumberFromHash","uncleIndex","powHash","hashRate","clientID","isStarted","Gwei","addresses","chainId","accounts","getBalance","getCode","position","blockStateRoot","setContext","posBuff","paddedPosBuff","Buffer","allocUnsafe","fill","addressBuf","addressData","addressStateRoot","transactionHash","transactionPool","find","transactionReceipts","dataHash","txHash","transactionPromise","receiptPromise","blockPromise","then","t","receipt","all","blockTime","logging","logger","log","fromString","isKnownAccount","knownAccounts","privateKey","unlockedAccounts","bind","queueTransaction","signAndHash","toLowerCase","messageHash","hashPersonalMessage","v","s","ecsign","toRpcSig","typedData","eth_signTypedData_v4","types","EIP712Domain","domain","primaryType","signTypedData_v4","eth_subscribe","subscriptionName","subscriptions","subscription","promiEvent","PromiEvent","unsubscribe","on","emit","type","topics","parseFilterDetails","blockLogs","filter","CodedError","JsonRpcErrorCode","METHOD_NOT_FOUND","subscriptionId","delete","updates","FilterTypes","filterId","pendingTransaction","fromBlock","toBlock","parseFilterRange","eth_getLogs","getLogs","getNonce","overrides","input","baseFeePerGasBigInt","hasGasPrice","isActivatedEIP","hasMaxFeePerGas","hasMaxPriorityFeePerGas","BigInt","a","tip","simulatedTransaction","to","simulateTransaction","blockCount","newestBlock","rewardPercentiles","PRECISION_BIG_INT","newestBlockNumber","totalBlocks","min","max","Array","gasUsedRatio","reward","ERR_INVALID_PERCENTILE","oldestBlockNumber","currentBlock","currentPosition","padStart","baseFee","receipts","effectiveRewardAndGasUsed","idx","effectiveGasReward","sort","b","percentile","totalGasUsed","targetGas","calcNextBaseFee","oldestBlock","traceTransaction","blockHash","transactionIndex","contractAddress","startKey","maxResult","storageRangeAt","newAccount","createRandomAccount","strAddress","addToKeyFile","add","rawKey","createAccountFromPrivateKey","lockAccount","duration","unlockAccount","secretKey","getFromKeyFile","postData","executables","origins","processMap","res","array","pending","queued","WeakMap","assertArgLength","_Blockchain_state","_Blockchain_miner","_Blockchain_blockBeingSavedPromise","_Blockchain_timer","_Blockchain_emitStepEvent","_Blockchain_database","_Blockchain_options","_Blockchain_instamine","_Blockchain_saveNewBlock","_Blockchain_emitNewBlock","_Blockchain_getTransactionLogOutput","_Blockchain_handleNewBlockData","_Blockchain_readyNextBlock","_Blockchain_isPaused","_Blockchain_commitAccounts","_Blockchain_initializeGenesisBlock","_Blockchain_timeAdjustment","_Blockchain_adjustedTime","_Blockchain_deleteBlockData","_Blockchain_snapshots","_Blockchain_traceTransaction","_Blockchain_prepareNextBlock","__setModuleDefault","__importStar","Status","os_1","database_1","emittery_1","common_1","vm_1","evm_1","account_manager_1","block_manager_1","blocklog_manager_1","transaction_manager_1","run_call_1","state_manager_1","statemanager_1","trie_1","trie_2","precompiles_1","transaction_receipt_manager_1","provider_events_1","mcl_wasm_1","console_log_1","mclInitPromise","init","BLS12_381","setMapToMode","IRTF","verifyOrderG1","verifyOrderG2","makeTrie","trieDB","root","ForkTrie","GanacheTrie","Blockchain","starting","batch","blockHeader","blockNumberQ","BlockLogs","timestampStr","Date","logOutput","serializeForDb","getReceipt","encodedReceipt","append","put","hashedKey","putBlock","updateLatestIndex","EOL","blockInfo","setImmediate","error","str","reason","blockData","saveBlockProm","previousBlock","previousHeader","previousNumber","minerOptions","blockGasLimit","isPostMerge","started","maxTransactions","onlyOneBlock","nextBlock","timestampIncrement","paused","stateTrie","activatePrecompile","getBlock","ForkStateManager","prefixCodeHashes","DefaultStateManager","EEI","EVM","VM","activatePrecompiles","_isInitialized","initialAccounts","fallbackBlock","genesis","KECCAK256_RLP","BUFFER_256_ZERO","rawBlockNumber","BUFFER_32_ZERO","precedingTimestamp","timeAdjustment","now","blocksToDelete","newLatestBlockNumber","revertMetaData","del","snaps","unsubscribeFromBlocks","newBlock","keys","currentDepth","storageStack","getCommonForBlockNumber","storage","structLogs","TraceData","TraceDataFactory","transactionEventContext","stepListener","next","makeStepEvent","gasLeft","gasUsedPreviousStep","disableMemory","disableStack","stackItem","structLog","depth","gasCost","op","pc","disableStorage","eventDepth","pop","TraceStorageMap","getContractStorage","_cache","flush","l","database","events","context","runTx","removeListener","returnValue","uncleHeaders","equals","initialize","fork","createCommon","hardfork","Common","custom","comment","defaultHardfork","baseChain","KNOWN_CHAINIDS","gteHardfork","blockIndexes","startTime","firstBlockTime","earliest","txPool","minerOpts","logs","nullResolved","mineAll","Single","wait","setTimeout","once","clearListeners","e","stopping","stop","_threads","newTime","currentTime","snapshots","current","rawValue","snapshotIndex","clear","currentHash","snapshotBlock","snapshotHeader","snapshotHash","splice","blockPromises","blockList","setStateRootSync","_trie","_storageTries","process","nextTick","status","hasToAddress","calculateIntrinsicGas","transactionContext","ganacheStepEvent","caller","callerAddress","warmPrecompiles","addWarmedAddress","applySimulationOverrides","fromAccount","txCost","startBalance","runCall","execResult","runState","programCounter","exceptionError","EvmError","EvmErrorMessage","OUT_OF_GAS","CallError","transactionHashBuffer","txIndex","contractAddressBuffer","nextKey","storageTrie","startKeyBuffer","compare","createReadStream","findInsertPosition","getStorageKeys","toggleStepEvent","enable","clearTimeout","removeAllListeners","close","stopped","_Connector_provider","_Connector_handle","Connector","provider_1","bufferify_1","providerOptions","executor","BUFFERIFY_THRESHOLD","payload","connection","isHttp","METHOD_NOT_SUPPORTED","params","_requestRaw","EthereumProvider","provider","parse","JSON","PARSE_ERROR","handle","isArray","promises","format","results","stringify","makeError","makeResponse","json","bufferify","formatError","disconnect","_AccountManager_blockchain","AccountManager","getRaw","Account","fromBuffer","trieCopy","_BlockManager_blockchain","_BlockManager_common","_BlockManager_blockIndexes","manager_1","LATEST_INDEX_KEY","BUFFER_ZERO","EMPTY_BUFFER","BlockManager","base","fromFallback","tagOrBlockNumber","isValidForkBlockNumber","request","rawFromJSON","bm","updateTaggedBlocks","blockExtra","txExtra","typedTx","toEthRawTransaction","getBlockByTag","tag","numBuf","secondaryKey","latestBlockNumber","createValueStream","limit","_BlockLogManager_blockchain","BlockLogManager","fromJSON","toBlockNumber","parseFilter","pendingLogsPromises","fromBlockNumber","blockLogsRange","filteredBlockLogs","_Manager_Type","_Manager_options","Manager","_TransactionManager_queue","_TransactionManager_paused","_TransactionManager_resumer","_TransactionManager_resolver","_TransactionManager_blockchain","transaction_pool_1","promise_queue_1","TransactionManager","factory","insertion","prepareTransaction","drain","isBusy","_TransactionReceiptManager_blockchain","TransactionReceiptManager","InternalTransactionReceipt","One","cumulativeGasUsed","topic","fromValues","_Database_options","_Database_cleanupDirectory","_Database_closed","_Database_rootStore","_Database_cleanup","tmp_promise_1","subleveldown_1","encoding_down_1","leveldown_1","trie_db_1","levelup","setGracefulCleanup","tmpOptions","prefix","unsafeCleanup","noop","Database","directory","db","levelupOptions","keyEncoding","valueEncoding","store","dbPath","dirInfo","dir","path","cleanup","leveldownOpts","open","sublevelTrie","TrieDB","fn","rootDb","originalPut","originalDel","prom","ret","write","wasClosed","ForkCache","cache_1","Cache","getCb","rlp","fromRlpSerializedAccount","putCb","deleteCb","Deferred","deferred","promise","_Fork_abortController","_Fork_handler","_Fork_options","_Fork_accounts","_Fork_hardfork","_Fork_setCommonFromChain","_Fork_setBlockDataFromChainAndOptions","_Fork_syncAccounts","Fork","abort_controller_1","http_handler_1","ws_handler_1","provider_handler_1","persistent_cache_1","url_1","fetchNetworkId","networkIdStr","parseInt","fetchBlock","chainIdPromise","latestBlock","effectiveBlockNumber","preLatestConfirmations","isInteger","disableCache","latestBlockNumberHex","latestBlockNumberInt","fetchNonce","forkingOptions","url","network","protocol","WsHandler","signal","HttpHandler","ProviderHandler","normalizedNetwork","infuraKey","URL","cacheProm","forkOptions","chainOptions","deleteCache","PersistentCache","deleteDb","_e","fetchChainId","chainIdHex","cache","initCache","setCache","abort","selectValidForkBlockNumber","hf","hardforks","BaseHandler","rate_limiter_1","lru_cache_1","abortSignal","requestCache","fireForget","Set","requestsPerSecond","userAgent","origin","limiter","WINDOW_SECONDS","valueCache","headers","password","username","isInfura","host","endsWith","setAuthHeaders","setUserHeaders","persistentCache","jwt","authorization","permitMultiAuth","userHeaders","currentScheme","split","incomingScheme","authParams","getFromMemCache","cachedRequest","cachedValue","notFound","send","memCached","diskCached","getFromSlowCache","response","aborted","AbortError","hasOwn","finally","JSONRPC_PREFIX","http_1","https_1","base_handler_1","deferred_1","accept","_request","agent","Agent","keepAlive","scheduling","buffer","messageLength","chunks","totalLength","chunk","concat","hostname","port","pathname","search","requestOptions","queueRequest","req","handleChunkedResponse","isNaN","handleLengthedResponse","resStr","shortStr","msg","startsWith","jsonrpc","strParams","ws_1","inFlightRequests","binaryType","connect","onclose","addEventListener","onmessage","onMessage","messageId","onopen","onerror","parts","pieces","part","lengthBuffer","encoded","lengthLength","Ancestry","tree_1","parent","cacheLock","knownAncestors","closestKnownAncestor","resolver","node","Tree","deserialize","strKey","loadNextAncestor","getBlockByNumber","findClosestDescendants","findClosestAncestor","findRelated","resolveTargetAndClosestAncestor","setDbVersion","getBlockNumberFromParams","VERSION_KEY","readStream","pair","height","candidateHeight","decodeKey","upTo","generator","gte","lt","encodeKey","reverse","first","return","recordedVersion","targetHeight","targetHash","closestAncestor","previousClosestAncestor","earliestBlock","earliestHash","earliestNumber","fs_1","env_paths_1","lexico","ancestry_1","helpers_1","maxValueByteBuffer","_reBalancePromise","dbSuffix","getDbDirectory","destroy","rs","ancestorDb","tree","collection","keyHex","parentKeyHex","descendants","closestKnownDescendants","suffix","mkdir","recursive","cacheDb","ancestry","atomicBatch","findIndex","allKnownDescendants","ancestorsDescendants","descendantKey","descendantHeight","descendantValue","descendantNode","descendantRawBlock","reBalanceDescendantTree","startSize","maybeDescendant","some","parentTree","isOpen","bufKey","gt","_height","_key","dbKey","children","timeSince","LimitCounter","windowLength","counters","evict","lastEvict","updatedAt","increment","currentWindow","previousWindow","curr","prev","semaphore_1","limit_counter_1","sleep","ms","timer","removeEventListener","RateLimiter","requestLimit","windowSizeMs","sem","take","mustBackoff","counter","limitCounter","currWindow","prevWindow","currCount","prevCount","rate","nextLimit","schedule","leave","LIMIT_EXCEEDED","backoffSeconds","backoff_seconds","allowed_rps","opts","storageRoot","checkpoints","_getStorageTrie","DELETED_VALUE","MetadataSingletons","LEVELDOWN_OPTIONS","isEqualKey","encodedKey","decodedKey","keyAddress","deletedKey","isPreForkBlock","accountFromFallback","codeProm","codeHex","storageFromFallback","compressed","replace","forkBlockNumber","metadataDB","sublevel","checkpointedMetadata","CheckpointDB","_root","val","startBlockNumber","endBlockNumber","stream","createDelKey","selfAddress","encodedKeyStr","keyValueMap","entries","lte","_lock","acquire","findPath","_deleteNode","persistRoot","delKey","metaDataPutPromise","release","keyWasDeleted","includeCheckpoints","secureTrie","hasCheckpoints","_db","deriveFromIndex","deriveFromPath","createAccountFromSeed","createAccountGeneratorFromSeedAndPath","crypto_1","secp256k1_1","HARDENED_OFFSET","MASTER_SECRET","seedBuffer","I","createHmac","update","chainCode","publicKey","makePublicKey","fullPath","child","test","hardened","childIndex","deriveChild","publicKeyCreate","hdPath","SHARED_BUFFER_4","isHardened","indexBuffer","writeUInt32BE","privateKeyLength","dataLength","IL","newPrivK","privateKeyTweakAdd","propertyKey","descriptor","original","String","apply","PARTS","SQUARE_BRACKET_PAIR","SQUARE_BRACKET_OPEN","SQUARE_BRACKET_CLOSE","CURLY_BRACKET_PAIR","CURLY_BRACKET_OPEN","CURLY_BRACKET_CLOSE","COMMA","QUOTE_PAIR","COLON","NULL","_EMPTY","toStr","stringToQuotedBuffer","utf8Write","nameOrIndex","numberToBuffer","isBuffer","bufferToQuotedBuffer","arrayToBuffer","chunkified","objectToBuffer","obj","yieldedOpen","yieldPrefix","quotedKey","bn_js_1","bn","STIPEND","bigIntToBN","check","opname","isCall","isCallOrCallcode","isCreate","isTerminator","binSearch","callback","MAX","gasRefund","startingGas","range","lo","hi","isEnoughGas","vmerr","muln","addn","mid","divn","exactimate","steps","sysOps","allOps","preCompile","preCompileCheck","precompileCallDepth","collect","info","isPrecompile","done","ops","systemOps","stepTracker","Context","fee","cost","sixtyFloorths","intermediateCost","callingFee","compositeContext","addGas","gtn","isub","iadd","setStart","setStop","getCost","transfer","ctx","addSixtyFloorth","sixtyFloorth","addRange","finalizeRange","innerCost","sub","RuntimeError","RETURN_TYPES","RETURN_VALUE","estimate","totalGasSpent","gasLeftStart","gasLeftEnd","actualUsed","sysops","opIndex","cursor","currentIndex","feeBn","getTotal","SERIALIZED_PRECOMPILE","Uint8Array","PRECOMPILED_ACCOUNT","accountCache","makeAccount","validateStorageOverride","fieldName","indexOf","stateDiff","vmAddr","clearedState","clearContractStorage","slotBuf","valueBuf","keyHashingFunction","byteOffset","Trie","useRootPersistence","useKeyHashing","useKeyHashingFunction","_Miner_currentlyExecutingPrice","_Miner_origins","_Miner_pending","_Miner_isBusy","_Miner_paused","_Miner_resumer","_Miner_currentBlockBaseFeePerGas","_Miner_resolver","_Miner_emitStepEvent","_Miner_executables","_Miner_options","_Miner_vm","_Miner_createBlock","_Miner_priced","_Miner_mine","_Miner_mineTxs","_Miner_runTx","_Miner_removeBestAndOrigin","_Miner_reset","_Miner_setPricedHeap","_Miner_updatePricedHeap","_Miner_setCurrentBlockBaseFeePerGas","replace_from_heap_1","updateBloom","blockBloom","sortByPrice","effectiveGasPrice","refresher","item","Miner","createBlock","Heap","lastBlock","runtimeBlock","inProgress","keepMining","priced","blockTransactions","finalizedBlockData","numTransactions","blockGasLeft","blockGasUsed","best","peek","locked","txKey","fillFromResult","bitvector","pendingOrigin","removeBest","Params","TRANSACTION_GAS","refresh","errorMessage","TRANSACTION_HASH","pricedArray","mapping","price","replaceFromHeap","source","replaceBest","normalizeEvent","originalMemory","sharedBuffer","codeAddress","memoryWordCount","returnStack","_EthereumProvider_options","_EthereumProvider_api","_EthereumProvider_wallet","_EthereumProvider_executor","_EthereumProvider_blockchain","_EthereumProvider_send","_EthereumProvider_logRequest","_EthereumProvider_legacySendPayloads","_EthereumProvider_legacySendPayload","api_1","ethereum_options_1","lodash_clonedeep_1","blockchain_1","fork_1","off","arg1","arg2","verbose","payloads","mainError","responses","EthereumOptionsConfig","normalize","parseCoinbase","hookEventSystem","onChange","listenerCount","listenerAdded","eventName","listenerRemoved","getOptions","getInitialAccounts","unlocked","sendAsync","args","rawResult","execute","normalizedData","_TransactionPool_options","_TransactionPool_priceBump","_TransactionPool_blockchain","_TransactionPool_accountPromises","_TransactionPool_validateTransaction","TriageOption","shouldReplace","replacee","replacerNonce","replacer","priceBump","TRANSACTION_LOCKED","TRANSACTION_REJECTED","replacerTip","replacerMaxFee","replaceeTip","replaceeMaxFee","UNDERPRICED","byNonce","TransactionPool","GAS_LIMIT","INVALID_INPUT","INTRINSIC_GAS_TOO_LOW","txNonce","transactorPromise","highestNonce","getNonceAndBalance","transactor","maxGasPrice","INSUFFICIENT_FUNDS","queuedOriginTransactions","transactionPlacement","FutureQueue","executableOriginTransactions","pendingArray","pendingTx","ReplacesPendingExecutable","REPLACED","pendingTxNonce","Executable","transactorNonce","queuedArray","queuedTx","ReplacesFutureTransaction","nextExpectedNonce","nextTx","arr","ENCODING_OPTS","opStack","_Wallet_randomRng","_Wallet_randomBytes","_Wallet_initializeAccounts","_Wallet_intializeAccountFromKey","_Wallet_initializeAccountWithoutKey","_Wallet_initializeAccount","_Wallet_lockAccount","hdkey_1","bip39_1","seedrandom_1","TWELVE_255s","SCRYPT_PARAMS","dklen","n","CIPHER","MAX_ACCOUNTS","scrypt","derivedKey","SHARED_BUFFER","uncompressedPublicKeyToAddress","uncompressedPublicKey","publicKeyConvert","asUUID","uuid","Wallet","keyFiles","lockTimers","rand","makeAccountAtIndex","mnemonicToSeedSync","mnemonic","balanceParts","defaultBalance","significand","fractionalStr","fractional","magnitude","defaultBalanceInWei","WEI","etherInWei","givenAccounts","accountsLength","givenAccount","acct","numberOfAccounts","totalAccounts","createAccount","lock","lockAccounts","addToKeyFileSync","lowerAddress","alea","givenUnlockedAccounts","ul","addressOrIndex","createFakePrivateKey","isSafeInteger","accountKeysPath","fileData","private_keys","writeFileSync","random","salt","iv","N","finishEncryption","encryptSync","scryptSync","cipher","createCipheriv","ciphertext","final","mac","crypto","cipherparams","kdf","kdfParams","keyfile","crypt","localMac","createDecipheriv","encrypted","encrypt","keyFile","decrypt","privateToAddress","seed","existingTimer","durationMs","timeout","unref","fakePrivateKey","ACCOUNT_ZERO","first12","SECP256K1_N","ChainOptions","cliDescription","legacyName","cliType","asyncRequestProcessing","defaultDescription","cliAliases","rawInput","cliCoerce","asNum","cliChoices","DatabaseOptions","disableInCLI","conflicts","ForkOptions","KNOWN_NETWORKS","MAX_BLOCK_NUMBER","MAX_SAFE_INTEGER","reColonSplit","coerceHeaders","ALLOWED_PROTOCOLS","includes","lastIndex","lastIndexOf","substr","console","warn","_blockNumber","conjunction","last","arrayToOxfordList","implies","reduce","EthereumDefaults","chain_options_1","database_options_1","logging_options_1","miner_options_1","wallet_options_1","fork_options_1","options_1","LoggingOptions","MinerOptions","WalletOptions","OptionsConfig","debug","quiet","config","toBigIntOrString","rawType","unseededRng","randomAlphaNumericString","alphabet","alphabetLength","rng","text","accountString","deterministic","DeterministicSeedPhrase","entropyToMnemonic","notVeryRandomBytes","AccessLists","isAccessList","tx_1","tx_2","params_1","accessList","AccessListJSON","bufferAccessList","slots","accessListStorageKeyCost","ACCESS_LIST_STORAGE_KEY_GAS","accessListAddressCost","ACCESS_LIST_ADDRESS_GAS","newAccessList","addressBuffer","storageItems","storageKeysLength","jsonItem","dataFeeEIP2930","BaseTransaction","MAX_UINT64","TRANSACTION_CREATION","byteLength","TRANSACTION_DATA_NON_ZERO_GAS","TRANSACTION_DATA_ZERO_GAS","nonZeroBytes","zeroBytes","setExtra","EIP1559FeeMarketTransaction","runtime_transaction_1","access_lists_1","signing_1","CAPABILITIES","RuntimeTransaction","accessListData","getAccessListData","accessListJSON","accessListDataFee","encodedData","encodedSignature","computeIntrinsics","validateAndSetSignature","getSenderAddress","getBaseFee","getUpfrontCost","maxPriorityFeePerGasBI","maxFeePerGasBI","gasLimitBI","valueBI","bigIntMin","supports","capability","typeBuf","msgHash","sig","computeIntrinsicsFeeMarketTx","EIP2930AccessListTransaction","computeIntrinsicsAccessListTx","LegacyTransaction","ecsignLegacy","computeIntrinsicsLegacyTx","hasPartialSignature","toValidLengthAddress","base_transaction_1","transaction_receipt_1","ONE_BUFFER","finalizer","userFrom","finalized","dataVal","txAndExtraData","vmResult","createdAddress","_event","computeFromAddress","ecdsaRecover","isValidSigRecovery","copyOrFill","targetStart","numZeroes","endZeroes","sourceOffset","recovery","_ecdsaRecover","rBuf","sBuf","recid","signature","partialRlp","eip155V","extras","bigIntToBuffer","epilogue","senderPubKey","TransactionType","legacy_transaction_1","eip2930_access_list_transaction_1","eip1559_fee_market_transaction_1","assertValidTransactionSValue","SECP256K1_MAX_PRIVATE_KEY_DIV_2","txData","txType","fromTxData","Legacy","EIP2930AccessList","EIP1559AccessList","toEIP1559","INVALID_PARAMS","typeOfRPC","_fromData","typeOfRaw","typeOf","_InternalTransactionReceipt_init","STATUSES","decoded","blockLog","errors_1","coded_error_1","captureStackTraceExtended","createRevertReason","ethereumjs_abi_1","REVERT_REASON","codedError","captureStackTrace","nonEnumerableProperty","rawDecode","NONCE_TOO_LOW","INVALID_SENDER","returnType","Symbol","_logs","filterByTopic","expectedTopics","logTopics","every","expectedTopic","logPosition","expectedTopicSet","logTopic","logIndex","removed","iterator","logToJSON","expectedAddresses","InternalTag","safe","PREFIXES","traceDataLookup","bufferToMinHexKey","existing","lengthDiff","FilecoinDefaults","FilecoinOptionsConfig","src_1","src_2","ipfsHost","ipfsPort","TruffleColors","porsche","turquoise","infura","__experimental_info","server","_DefaultServerOptions","ServerStatus","Server","connector_loader_1","server_1","server_2","Ganache","connector","knownChainIds","flavors_1","flavors_2","flavor","DefaultFlavor","requestCoordinator","RequestCoordinator","Executor","GetConnector","connectPromise","serverOptionsConfig","serverDefaults","server_options_1","ServerOptions","buffer_1","ws","wsBinary","rpcEndpoint","FilecoinFlavorName","chunkSize","kMaxLength","_Server_options","_Server_providerOptions","_Server_status","_Server_app","_Server_httpServer","_Server_listenSocket","_Server_connector","_Server_websocketServer","_Server_initializer","shim","aggregate_error_1","uws_js_unofficial_1","_cfg","ws_server_1","http_server_1","providerAndServerOptions","unknown","ready","loader","_app","App","listen","callbackIsFunction","trim","portNumber","closing","openingOrOpen","opening","allSettled","listenSocket","closed","promiseResults","closingOrClosed","_listenSocket","us_listen_socket_close","_HttpServer_connector","_HttpServer_options","_HttpServer_isClosing","_HttpServer_handlePost","_HttpServer_handleOptions","content_types_1","http_response_codes_1","fragment_generator_1","prepareCORSResponseHeaders","getHeader","acrh","writeHeader","sendResponse","closeConnection","statusCode","contentType","writeHeaders","cork","writeStatus","HttpServer","app","onAborted","onData","isLast","BAD_REQUEST","PLAIN","isGeneratorObject","sendChunkedResponse","fragments","getFragmentGenerator","firstFragment","nextFragment","OK","NO_CONTENT","post","IM_A_TEAPOT","any","connectionHeader","NOT_FOUND","ContentTypes","bufferSize","HttpResponseCodes","WebSocketCloseCodes","_WebsocketServer_connections","MAX_PAYLOAD_SIZE","sendFragmented","websocket_close_codes_1","useBinary","maybeLastFragment","sendFirstFragment","fragment","sendFragment","sendLastFragment","WebsocketServer","connections","autoBinary","maxPayloadLength","idleTimeout","isBinary","resultEmitter","resultEmitterPromiEvent","dispose","CLOSE_NORMAL","webpackContext","webpackContextResolve","__webpack_require__","webpackContextKeys","module","DefaultOptionsByName","EthereumFlavorName","ethereum_1","filecoin_options_1","colors_1","chalk_1","NEED_HELP","COMMUNITY_LINK","eval","exit","webpackEmptyContext","_OptionsConfig_defaults","_OptionsConfig_namespaces","checkForConflicts","namespace","suppliedOptions","conflict","defaults","out","def","namespaceOptions","propDefinition","normalized","_PromiseQueue_queue","_PromiseQueue_tryResolve","_PromiseQueue_tryResolveChain","entry_1","PromiseQueue","queue","entry","shift","resolved","cancelledQueue","mixin","for","Entry","onSetteled","_onSetteled","enc","encodedLength","encLength","len","hexLength","lLength","firstByte","safeSlice","decodeLength","parseHexByte","hexByte","byte","bytesToHex","uint8a","hex","cachedHexes","_decode","llength","innerRemainder","remainder","items","count","ranges","lengthEncodedLength","j","_v","path_1","secp256k1","nodeRequire","dirname","nodeGypBuild","Secp256k1","makeRequest","JsonRpcType","json_rpc_1","jsonrpc_1","promievent_1","toBigIntBE","toBufferBE","bigint_buffer_1","json_rpc_base_types_1","BaseJsonRpcType","parseAndValidateStringInput","parseAndValidateBigIntInput","parseAndValidateNumberInput","bigint_to_buffer_1","uint_to_buffer_1","isFinite","hexValue","ceil","_buffer","input_parsers_1","inspect","bufferValue","_depth","_options","valueOf","constants_1","_byteLength","strValue","stringToFixedByteLength","bufferToFixedByteLength","desiredCharLength","padCharCount","fixedLengthValue","repeat","buffer_to_bigint_1","nullable","_nullable","ZERO_VALUE_STRING","firstNonZeroByte","findFirstNonZeroByteIndex","trimmedBuffer","readUIntBE","details","getOwnPropertyNames","PromiEvent_1","emitteryMethods","methodName","onrejected","onAny","eventData","_bigIntToBuffer","bigIntByteLength","view","padded","DataView","getBigUint64","latin1Slice","hexSlice","HEX_MAP","_Executor_requestCoordinator","has_own_1","api","__proto__","comp","insertPosition","step","_hasOwn","prop","less","down","up","element","newLength","newValue","fix","remove","swap","i0","j1","j2","heap","keccak_1","instance","_state","absorb","squeeze","_finalized","numbers","acc","RandomNumberGenerator","entropy","getNumber","upperExclusiveBound","getNumbers","getBuffer","_RequestCoordinator_paused","_RequestCoordinator_process","runningTasks","thisArgument","argumentsList","ecdsaSign","MAX_UINT32","num","uintWideToBuf","hiLsb","six","five","lsb","two","one","uint32ToBuf","second","third"],"sourceRoot":""}